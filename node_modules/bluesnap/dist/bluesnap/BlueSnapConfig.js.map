{"version":3,"file":"BlueSnapConfig.js","sourceRoot":"","sources":["../../src/lib/bluesnap/BlueSnapConfig.ts"],"names":[],"mappings":";;AAEA,MAAa,cAAc;IASvB,YAAmB,WAAwB,EAAE,QAAgB,EAAE,QAAgB,EAAE,UAAmB;QAChG,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,CAAC;IAEM,UAAU;QACb,QAAQ,IAAI,CAAC,WAAW,EAAE;YACtB,KAAK,YAAY;gBACb,OAAO,yBAAyB,CAAC;YACrC,KAAK,SAAS;gBACV,OAAO,8BAA8B,CAAC;YAC1C;gBACI,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SAC9C;IACL,CAAC;CACJ;AA1BD,wCA0BC","sourcesContent":["type Environment = 'Production' | 'Sandbox';\n\nexport class BlueSnapConfig {\n    public environment: Environment;\n\n    public username: string;\n\n    public password: string;\n\n    public apiVersion?: string; // Optional. BlueSnap will default based on the merchant account if not specified.\n\n    public constructor(environment: Environment, username: string, password: string, apiVersion?: string) {\n        this.environment = environment;\n        this.username = username;\n        this.password = password;\n        this.apiVersion = apiVersion;\n    }\n\n    public getBaseUrl(): string {\n        switch (this.environment) {\n            case 'Production':\n                return 'https://ws.bluesnap.com';\n            case 'Sandbox':\n                return 'https://sandbox.bluesnap.com';\n            default:\n                throw new Error('Invalid Environment');\n        }\n    }\n}\n"]}