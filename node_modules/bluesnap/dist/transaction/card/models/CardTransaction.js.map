{"version":3,"file":"CardTransaction.js","sourceRoot":"","sources":["../../../../src/lib/transaction/card/models/CardTransaction.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Contains the information required to process a credit card transaction\n */\nimport { ValidatedResponse } from '../../../errors/models/ValidatedResponse';\nimport { Level3DataResponse } from '../../models/Level3Data';\nimport { CardHolderInfoResponse } from './CardHolderInfo';\nimport { FraudResultInfoResponse } from '../../models/FraudResultInfo';\nimport { TransactionMetaDataResponse } from '../../models/TransactionMetaData';\nimport { ThreeDSecureResponse } from '../../models/ThreeDSecure';\nimport { WalletResponse } from '../../../wallet/models/Wallet';\nimport { TransactionFraudInfoResponse } from '../../models/TransactionFraudInfo';\nimport { CreditCardResponse } from './CreditCard';\nimport { VendorsInfoResponse } from '../../../marketplace/models/VendorsInfo';\nimport { ProcessingInfoResponse } from '../../models/ProcessingInfo';\n\nexport interface CardTransactionResponse extends ValidatedResponse {\n    walletId?: number;\n    wallet?: WalletResponse;\n    amount: number;\n    vaultedShopperId: number;\n    merchantTransactionId?: string;\n    softDescriptor?: string;\n    descriptorPhoneNumber?: string;\n    vendorsInfo?: VendorsInfoResponse;\n    cardHoldersInfo?: CardHolderInfoResponse;\n    currency: string;\n    transactionFraudInfo?: TransactionFraudInfoResponse;\n    creditCard?: CreditCardResponse;\n    cardTransactionType: string;\n    threeDSecure?: ThreeDSecureResponse;\n    transactionMetaData?: TransactionMetaDataResponse;\n    pfToken?: string;\n    level3Data?: Level3DataResponse;\n    storeCard?: boolean;\n    processingInfo: ProcessingInfoResponse;\n    fraudResultInfo: FraudResultInfoResponse;\n    transactionId: string;\n}\n"]}