{"version":3,"file":"CardTransactionGateway.js","sourceRoot":"","sources":["../../../src/lib/transaction/card/CardTransactionGateway.ts"],"names":[],"mappings":";;;;;;;;;;AAMA,MAAa,sBAAsB;IAG/B,YAAmB,IAAgB;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAEY,WAAW,CAAC,eAAmC;;YACxD,MAAM,IAAI,GAAG,0BAA0B,CAAC;YACxC,MAAM,IAAI,GAAG,eAAe,CAAC;YAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC;KAAA;IAEY,QAAQ,CAAC,eAA4B;;YAC9C,MAAM,IAAI,GAAG,0BAA0B,CAAC;YACxC,MAAM,IAAI,GAAG,eAAe,CAAC;YAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,CAAC;KAAA;IAEY,OAAO,CAAC,eAA+B;;YAChD,MAAM,IAAI,GAAG,0BAA0B,CAAC;YACxC,MAAM,IAAI,GAAG,eAAe,CAAC;YAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC;KAAA;IAEY,YAAY,CAAC,eAAoC;;YAC1D,MAAM,IAAI,GAAG,0BAA0B,CAAC;YACxC,MAAM,IAAI,GAAG,eAAe,CAAC;YAC7B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC;KAAA;IAEY,GAAG,CAAC,aAAqB;;YAClC,MAAM,IAAI,GAAG,4BAA4B,aAAa,EAAE,CAAC;YACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;KAAA;CACJ;AAnCD,wDAmCC","sourcesContent":["import { HttpClient } from '../../http/HttpClient';\nimport {\n    AuthCaptureRequest, AuthRequest, AuthReversalRequest, CaptureRequest,\n} from './models/AuthCapture';\nimport { CardTransactionResponse } from './models/CardTransaction';\n\nexport class CardTransactionGateway {\n    private http: HttpClient;\n\n    public constructor(http: HttpClient) {\n        this.http = http;\n    }\n\n    public async authCapture(cardTransaction: AuthCaptureRequest): Promise<CardTransactionResponse> {\n        const path = '/services/2/transactions';\n        const body = cardTransaction;\n        return this.http.post(path, body);\n    }\n\n    public async authOnly(cardTransaction: AuthRequest): Promise<CardTransactionResponse> {\n        const path = '/services/2/transactions';\n        const body = cardTransaction;\n        return this.http.post(path, body);\n    }\n\n    public async capture(cardTransaction: CaptureRequest): Promise<CardTransactionResponse> {\n        const path = '/services/2/transactions';\n        const body = cardTransaction;\n        return this.http.put(path, body);\n    }\n\n    public async authReversal(cardTransaction: AuthReversalRequest): Promise<CardTransactionResponse> {\n        const path = '/services/2/transactions';\n        const body = cardTransaction;\n        return this.http.put(path, body);\n    }\n\n    public async get(transactionId: string): Promise<CardTransactionResponse> {\n        const path = `/services/2/transactions/${transactionId}`;\n        return this.http.get(path);\n    }\n}\n"]}