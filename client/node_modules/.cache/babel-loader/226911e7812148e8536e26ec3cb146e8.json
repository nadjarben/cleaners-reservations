{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { POST_RESERVATION, FETCH_RESERVATIONS, DELETE_RESERVATION, ARCHIVE_RESERVATION } from '../actions/types';\nvar initialState = {\n  reservation: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POST_RESERVATION:\n      return _objectSpread({}, state, {\n        postedReservation: action.payload\n      });\n\n    case DELETE_RESERVATION:\n      return _objectSpread({}, state, {\n        reservation: action.payload\n      });\n\n    case FETCH_RESERVATIONS:\n      return _objectSpread({}, state, {\n        reservation: action.payload\n      });\n\n    case ARCHIVE_RESERVATION:\n      return _objectSpread({}, state, {\n        reservation: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/store/reducers/reservationReducer.js"],"names":["POST_RESERVATION","FETCH_RESERVATIONS","DELETE_RESERVATION","ARCHIVE_RESERVATION","initialState","reservation","state","action","type","postedReservation","payload"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,kBAA3B,EAA+CC,kBAA/C,EAAmEC,mBAAnE,QACS,kBADT;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;AAIA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,gBAAL;AACA,+BACKM,KADL;AAEEG,QAAAA,iBAAiB,EAAEF,MAAM,CAACG;AAF5B;;AAIA,SAAKR,kBAAL;AACE,+BACKI,KADL;AAEED,QAAAA,WAAW,EAAEE,MAAM,CAACG;AAFtB;;AAIF,SAAKT,kBAAL;AACE,+BACKK,KADL;AAEED,QAAAA,WAAW,EAAEE,MAAM,CAACG;AAFtB;;AAIA,SAAKP,mBAAL;AACE,+BACKG,KADL;AAEED,QAAAA,WAAW,EAAEE,MAAM,CAACG;AAFtB;;AAIJ;AACA,aAAOJ,KAAP;AAtBJ;AAwBD","sourcesContent":["import { POST_RESERVATION, FETCH_RESERVATIONS, DELETE_RESERVATION, ARCHIVE_RESERVATION, \n  } from '../actions/types';\n\n\nconst initialState = {\n  reservation: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n      case POST_RESERVATION:\n      return {\n        ...state,\n        postedReservation: action.payload\n      };\n      case DELETE_RESERVATION:\n        return {\n          ...state,\n          reservation: action.payload\n        };\n      case FETCH_RESERVATIONS:\n        return {\n          ...state,\n          reservation: action.payload\n        }\n        case ARCHIVE_RESERVATION:\n          return {\n            ...state,\n            reservation: action.payload\n          }\n      default:\n      return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}