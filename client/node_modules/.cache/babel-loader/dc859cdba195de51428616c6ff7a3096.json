{"ast":null,"code":"import axios from'axios';import{POST_CUSTOMER,FETCH_CUSTOMERS,DELETE_CUSTOMER,POST_ORDER}from'./types';var customersAPI=//'http://localhost:8080/api/customers/' \n//'https://cleaners-reservation.herokuapp.com/api/customers/'\n'https://www.thecleanersisrael.com/api/customers/';export var postCustomer=function postCustomer(name,surname,phone,email,address,info){return function(dispatch){axios.post(customersAPI,{name:name,surname:surname,phone:phone,email:email,address:address,info:info}).then(function(res){return dispatch({type:POST_CUSTOMER,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Couldnt post customer.'+err);});};};export var deleteCustomer=function deleteCustomer(id){return function(dispatch){axios.delete(customersAPI+id).then(function(res){return dispatch({type:DELETE_CUSTOMER,payload:res.data});});};};export var fetchCustomers=function fetchCustomers(){return function(dispatch){axios.get(customersAPI,{}).then(function(res){return dispatch({type:FETCH_CUSTOMERS,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Could not fetch customers.'+err);});};};export var postOrder=function postOrder(id,hazmana,amount,term,info,recovered,payed){return function(dispatch){axios.post(customersAPI+id,{hazmana:hazmana,amount:amount,term:term,info:info,recovered:recovered,payed:payed}).then(function(res){return dispatch({type:POST_ORDER,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Couldnt post order.'+err);});};};","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/store/actions/customerActions.js"],"names":["axios","POST_CUSTOMER","FETCH_CUSTOMERS","DELETE_CUSTOMER","POST_ORDER","customersAPI","postCustomer","name","surname","phone","email","address","info","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","deleteCustomer","id","delete","fetchCustomers","get","postOrder","hazmana","amount","term","recovered","payed"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { POST_CUSTOMER, FETCH_CUSTOMERS, DELETE_CUSTOMER, POST_ORDER } from './types';\n\n\nconst customersAPI = //'http://localhost:8080/api/customers/' \n                     //'https://cleaners-reservation.herokuapp.com/api/customers/'\n                     'https://www.thecleanersisrael.com/api/customers/'\n\nexport const postCustomer = (name, surname, phone, email, address, info) => dispatch => {\n    axios.post(customersAPI, {\n          name, surname, phone, email, address, info\n      })\n      .then(res => {\n          return dispatch({\n            type: POST_CUSTOMER,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post customer.' + err);\n        });\n  }\n\n export const deleteCustomer = (id) => dispatch => {\n axios.delete(customersAPI + id)\n .then(res => {\n   return dispatch ({\n     type: DELETE_CUSTOMER,\n     payload: res.data\n   });\n })\n }\n \n  export const fetchCustomers = () => dispatch => {\n\n    axios.get(customersAPI, {\n    })\n      .then(res => { \n        return dispatch({\n          type: FETCH_CUSTOMERS,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        throw new Error('Could not fetch customers.' + err);\n      });    \n  }\n\n  export const postOrder = (id, hazmana, amount, term, info, recovered, payed) => dispatch => {\n    axios.post(customersAPI + id, {\n          hazmana, amount, term, info, recovered, payed \n      })\n      .then(res => {\n          return dispatch({\n            type: POST_ORDER,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post order.' + err);\n        });\n  }"]},"metadata":{},"sourceType":"module"}