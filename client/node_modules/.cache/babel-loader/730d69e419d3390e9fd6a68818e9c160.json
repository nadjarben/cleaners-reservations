{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport fr from 'react-intl/locale-data/fr';\nimport he from 'react-intl/locale-data/he';\nimport { localeSet } from './store/actions/localeActions';\nimport registerServiceWorker from './registerServiceWorker';\naddLocaleData(en);\naddLocaleData(fr);\naddLocaleData(he);\n\nif (localStorage.alhubLang) {\n  store.dispatch(localeSet(localStorage.alhubLang));\n}\n\n; // On page load\n\n(function () {\n  // Check if iOS\n  if (!(/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)) {\n    return false;\n  } // Check if already in webapp\n\n\n  if (window.navigator.standalone == true) {\n    return false;\n  } // Check if you already asked them to add to homescreen\n\n\n  if (document.cookie.search(\"alreadAsked\") >= 0) {\n    return false;\n  } // Ask user to add to homescreen\n\n\n  document.getElementById(\"hiddenPrompt\").style.display = 'inherit';\n}); // After clicking a button to dismiss prompt\n\n\nfunction hidePromptInFuture() {\n  // Do not show prompt again\n  document.cookie = \"alreadAsked=true; expires=Thu, 18 Dec 2099 12:00:00 UTC\";\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})), document.getElementById('.container')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nregisterServiceWorker();","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\index.js"],"names":["React","ReactDOM","App","Provider","store","addLocaleData","en","fr","he","localeSet","registerServiceWorker","localStorage","alhubLang","dispatch","test","navigator","userAgent","window","MSStream","standalone","document","cookie","search","getElementById","style","display","hidePromptInFuture","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEAL,aAAa,CAACC,EAAD,CAAb;AACAD,aAAa,CAACE,EAAD,CAAb;AACAF,aAAa,CAACG,EAAD,CAAb;;AAEA,IAAIG,YAAY,CAACC,SAAjB,EAA4B;AACxBR,EAAAA,KAAK,CAACS,QAAN,CAAeJ,SAAS,CAACE,YAAY,CAACC,SAAd,CAAxB;AACE;;AAAA,C,CAEF;;AACJ,CAAC,YAAW;AACR;AACA,MAAG,EAAE,mBAAmBE,IAAnB,CAAwBC,SAAS,CAACC,SAAlC,KAAgD,CAACC,MAAM,CAACC,QAA1D,CAAH,EAAuE;AAAE,WAAO,KAAP;AAAe,GAFhF,CAIR;;;AACA,MAAGD,MAAM,CAACF,SAAP,CAAiBI,UAAjB,IAA+B,IAAlC,EAAuC;AAAE,WAAO,KAAP;AAAe,GALhD,CAOR;;;AACA,MAAGC,QAAQ,CAACC,MAAT,CAAgBC,MAAhB,CAAuB,aAAvB,KAAyC,CAA5C,EAA8C;AAAE,WAAO,KAAP;AAAe,GARvD,CAUR;;;AACAF,EAAAA,QAAQ,CAACG,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC,CAA8CC,OAA9C,GAAwD,SAAxD;AACD,CAZH,E,CAcE;;;AACA,SAASC,kBAAT,GAA6B;AAC3B;AACAN,EAAAA,QAAQ,CAACC,MAAT,GAAkB,yDAAlB;AACD;;AAEHpB,QAAQ,CAAC0B,MAAT,CACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEvB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADA,EAGagB,QAAQ,CAACG,cAAT,CAAwB,YAAxB,CAHb,E,CAMA;AACA;AACA;;AACAb,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport fr from 'react-intl/locale-data/fr';\nimport he from 'react-intl/locale-data/he';\nimport { localeSet } from './store/actions/localeActions';\nimport registerServiceWorker from './registerServiceWorker';\n\naddLocaleData(en);\naddLocaleData(fr);\naddLocaleData(he);\n\nif (localStorage.alhubLang) {\n    store.dispatch(localeSet(localStorage.alhubLang)\n    )};\n\n    // On page load\n(function() {\n    // Check if iOS\n    if(!(/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream)){ return false; }\n  \n    // Check if already in webapp\n    if(window.navigator.standalone == true){ return false; }\n  \n    // Check if you already asked them to add to homescreen\n    if(document.cookie.search(\"alreadAsked\") >= 0){ return false; }\n  \n    // Ask user to add to homescreen\n    document.getElementById(\"hiddenPrompt\").style.display = 'inherit';\n  });\n  \n  // After clicking a button to dismiss prompt\n  function hidePromptInFuture(){\n    // Do not show prompt again\n    document.cookie = \"alreadAsked=true; expires=Thu, 18 Dec 2099 12:00:00 UTC\";\n  }\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>, document.getElementById('.container'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}