{"ast":null,"code":"import axios from 'axios';\nimport { POST_CUSTOMER, FETCH_CUSTOMERS, DELETE_CUSTOMER, POST_ORDER } from './types';\nvar customersAPI = //'http://localhost:8080/api/customers/' \n//'https://cleaners-reservation.herokuapp.com/api/customers/'\n'https://www.thecleanersisrael.com/api/customers/';\nexport var postCustomer = function postCustomer(name, surname, phone, email, address, info) {\n  return function (dispatch) {\n    axios.post(customersAPI, {\n      name: name,\n      surname: surname,\n      phone: phone,\n      email: email,\n      address: address,\n      info: info\n    }).then(function (res) {\n      return dispatch({\n        type: POST_CUSTOMER,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Couldnt post customer.' + err);\n    });\n  };\n};\nexport var deleteCustomer = function deleteCustomer(customerId) {\n  return function (dispatch) {\n    axios.delete(customersAPI + id).then(function (res) {\n      return dispatch({\n        type: DELETE_CUSTOMER,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var fetchCustomers = function fetchCustomers() {\n  return function (dispatch) {\n    axios.get(customersAPI, {}).then(function (res) {\n      return dispatch({\n        type: FETCH_CUSTOMERS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Could not fetch customers.' + err);\n    });\n  };\n};\nexport var postOrder = function postOrder(id, hazmana, amount, term, info, payed) {\n  return function (dispatch) {\n    axios.post(customersAPI + id, {\n      hazmana: hazmana,\n      amount: amount,\n      term: term,\n      info: info,\n      payed: payed\n    }).then(function (res) {\n      return dispatch({\n        type: POST_ORDER,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Couldnt post order.' + err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/store/actions/customerActions.js"],"names":["axios","POST_CUSTOMER","FETCH_CUSTOMERS","DELETE_CUSTOMER","POST_ORDER","customersAPI","postCustomer","name","surname","phone","email","address","info","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","deleteCustomer","customerId","delete","id","fetchCustomers","get","postOrder","hazmana","amount","term","payed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,eAAzC,EAA0DC,UAA1D,QAA4E,SAA5E;AAGA,IAAMC,YAAY,GAAG;AACA;AACA,kDAFrB;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,IAAvC;AAAA,SAAgD,UAAAC,QAAQ,EAAI;AACpFb,IAAAA,KAAK,CAACc,IAAN,CAAWT,YAAX,EAAyB;AACnBE,MAAAA,IAAI,EAAJA,IADmB;AACbC,MAAAA,OAAO,EAAPA,OADa;AACJC,MAAAA,KAAK,EAALA,KADI;AACGC,MAAAA,KAAK,EAALA,KADH;AACUC,MAAAA,OAAO,EAAPA,OADV;AACmBC,MAAAA,IAAI,EAAJA;AADnB,KAAzB,EAGGG,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACT,aAAOH,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEhB,aADQ;AAEdiB,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFC,OAAD,CAAf;AAID,KARL,EASKC,KATL,CASW,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,2BAA2BH,GAArC,CAAN;AACD,KAZL;AAaD,GAdyB;AAAA,CAArB;AAgBN,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,UAAD;AAAA,SAAgB,UAAAb,QAAQ,EAAI;AAC1Db,IAAAA,KAAK,CAAC2B,MAAN,CAAatB,YAAY,GAAGuB,EAA5B,EACCb,IADD,CACM,UAAAC,GAAG,EAAI;AACX,aAAOH,QAAQ,CAAE;AACfI,QAAAA,IAAI,EAAEd,eADS;AAEfe,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFE,OAAF,CAAf;AAID,KAND;AAOC,GAR6B;AAAA,CAAvB;AAUN,OAAO,IAAMU,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAAAhB,QAAQ,EAAI;AAE9Cb,IAAAA,KAAK,CAAC8B,GAAN,CAAUzB,YAAV,EAAwB,EAAxB,EAEGU,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,aAAOH,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEf,eADQ;AAEdgB,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFC,OAAD,CAAf;AAID,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,+BAA+BH,GAAzC,CAAN;AACD,KAXH;AAYD,GAd6B;AAAA,CAAvB;AAgBP,OAAO,IAAMU,SAAS,GAAG,SAAZA,SAAY,CAACH,EAAD,EAAKI,OAAL,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BtB,IAA5B,EAAkCuB,KAAlC;AAAA,SAA4C,UAAAtB,QAAQ,EAAI;AAC/Eb,IAAAA,KAAK,CAACc,IAAN,CAAWT,YAAY,GAAGuB,EAA1B,EAA8B;AACxBI,MAAAA,OAAO,EAAPA,OADwB;AACfC,MAAAA,MAAM,EAANA,MADe;AACPC,MAAAA,IAAI,EAAJA,IADO;AACDtB,MAAAA,IAAI,EAAJA,IADC;AACKuB,MAAAA,KAAK,EAALA;AADL,KAA9B,EAGGpB,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACT,aAAOH,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEb,UADQ;AAEdc,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFC,OAAD,CAAf;AAID,KARL,EASKC,KATL,CASW,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,wBAAwBH,GAAlC,CAAN;AACD,KAZL;AAaD,GAdwB;AAAA,CAAlB","sourcesContent":["import axios from 'axios';\nimport { POST_CUSTOMER, FETCH_CUSTOMERS, DELETE_CUSTOMER, POST_ORDER } from './types';\n\n\nconst customersAPI = //'http://localhost:8080/api/customers/' \n                     //'https://cleaners-reservation.herokuapp.com/api/customers/'\n                     'https://www.thecleanersisrael.com/api/customers/'\n\nexport const postCustomer = (name, surname, phone, email, address, info) => dispatch => {\n    axios.post(customersAPI, {\n          name, surname, phone, email, address, info\n      })\n      .then(res => {\n          return dispatch({\n            type: POST_CUSTOMER,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post customer.' + err);\n        });\n  }\n\n export const deleteCustomer = (customerId) => dispatch => {\n axios.delete(customersAPI + id)\n .then(res => {\n   return dispatch ({\n     type: DELETE_CUSTOMER,\n     payload: res.data\n   });\n })\n }\n \n  export const fetchCustomers = () => dispatch => {\n\n    axios.get(customersAPI, {\n    })\n      .then(res => { \n        return dispatch({\n          type: FETCH_CUSTOMERS,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        throw new Error('Could not fetch customers.' + err);\n      });    \n  }\n\n  export const postOrder = (id, hazmana, amount, term, info, payed) => dispatch => {\n    axios.post(customersAPI + id, {\n          hazmana, amount, term, info, payed \n      })\n      .then(res => {\n          return dispatch({\n            type: POST_ORDER,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post order.' + err);\n        });\n  }"]},"metadata":{},"sourceType":"module"}