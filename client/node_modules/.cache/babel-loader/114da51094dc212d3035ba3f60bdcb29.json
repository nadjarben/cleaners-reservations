{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Form,Button}from'react-bootstrap';import{connect}from\"react-redux\";import{postCustomer}from'../../../store/actions/customerActions';import{FormattedMessage}from'react-intl';var FormNewCustomer=/*#__PURE__*/function(_Component){_inherits(FormNewCustomer,_Component);function FormNewCustomer(){var _getPrototypeOf2;var _this;_classCallCheck(this,FormNewCustomer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(FormNewCustomer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={name:'',surname:'',phone:'972',email:'',address:'',info:'',city:''};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.handleSubmit=function(e){var _this$state=_this.state,name=_this$state.name,surname=_this$state.surname,phone=_this$state.phone,email=_this$state.email,address=_this$state.address,info=_this$state.info;_this.props.postCustomer(name,surname,phone,email,address,info);};return _this;}_createClass(FormNewCustomer,[{key:\"render\",value:function render(){var _this2=this;return React.createElement(\"div\",{style:{marginTop:'5%'},className:\"container\"},React.createElement(Form,{autoComplete:\"nope\",onSubmit:function onSubmit(e){return _this2.handleSubmit(e);},className:\"form\"},React.createElement(Form.Row,null,React.createElement(Form.Group,{controlId:\"formGridFirstName\"},React.createElement(Form.Control,{autoComplete:\"nope\",required:true,type:\"text\",placeholder:\"First Name\",name:\"name\",value:this.state.name,onChange:this.handleChange})),React.createElement(Form.Group,{controlId:\"formGridSurname\"},React.createElement(Form.Control,{autoComplete:\"nope\",required:true,type:\"text\",placeholder:\"Last Name\",name:\"surname\",value:this.state.surname,onChange:this.handleChange}))),React.createElement(Form.Row,null,React.createElement(Form.Group,{controlId:\"formGridPhone\"},React.createElement(Form.Control,{autoComplete:\"nope\",required:true,type:\"phone\",placeholder:\"Phone number\",name:\"phone\",value:this.state.phone,onChange:this.handleChange}))),React.createElement(Form.Group,{controlId:\"formBasicEmail\"},React.createElement(Form.Control,{autoComplete:\"nope\",type:\"email\",placeholder:\"Enter email\",name:\"email\",value:this.state.email,onChange:this.handleChange})),React.createElement(Form.Group,{controlId:\"formGridAddress1\"},React.createElement(Form.Control,{autoComplete:\"nope\",placeholder:\"Address\",name:\"address\",value:this.state.address,onChange:this.handleChange})),React.createElement(Form.Row,null,React.createElement(Form.Group,{controlId:\"formGridCity\"},React.createElement(Form.Control,{placeholder:\"City\",name:\"city\",value:this.state.city,onChange:this.handleChange}))),React.createElement(Form.Group,{className:\"informations\",controlId:\"exampleForm.ControlTextarea1\"},React.createElement(Form.Label,null,React.createElement(FormattedMessage,{id:\"reservation.info\"})),React.createElement(Form.Control,{as:\"textarea\",rows:\"2\",name:\"info\",value:this.state.info,onChange:this.handleChange})),React.createElement(Button,{type:\"submit\",variant:\"primary\",className:\"button-submit\"},\"Submit\")));}}]);return FormNewCustomer;}(Component);var mapStateToProps=function mapStateToProps(state){return{customers:state.customers};};export default connect(mapStateToProps,{postCustomer:postCustomer})(FormNewCustomer);","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/admin/form/FormNewCustomer.js"],"names":["React","Component","Form","Button","connect","postCustomer","FormattedMessage","FormNewCustomer","state","name","surname","phone","email","address","info","city","handleChange","e","setState","target","value","handleSubmit","props","marginTop","mapStateToProps","customers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { postCustomer } from '../../../store/actions/customerActions';\nimport { FormattedMessage } from 'react-intl'; \n\nclass FormNewCustomer extends Component {\n    state = {\n        name: '',\n        surname: '', \n        phone: '972', \n        email: '', \n        address: '',  \n        info: '',\n        city: ''\n      };\n\n    handleChange = (e) => {\n    this.setState ({[e.target.name]: e.target.value})\n    }\n    \n  handleSubmit = (e) => {\n    const { name, surname, phone, email, address, info } = this.state\n    this.props.postCustomer(name, surname, phone, email, address, info)\n  }\n\n    render() {\n        return(\n          <div style={{marginTop:'5%'}} className='container'>\n            \n            <Form autoComplete='nope' onSubmit={e => this.handleSubmit(e)} className=\"form\" >\n  <Form.Row>\n    <Form.Group controlId=\"formGridFirstName\" >\n      <Form.Control autoComplete='nope' required={true} type=\"text\" placeholder=\"First Name\" name=\"name\" value={this.state.name}  onChange={this.handleChange} />\n    </Form.Group>\n\n    <Form.Group controlId=\"formGridSurname\">\n      <Form.Control autoComplete='nope' required={true} type=\"text\" placeholder=\"Last Name\" name=\"surname\" value={this.state.surname} onChange={ this.handleChange } />\n    </Form.Group>\n  </Form.Row>\n  \n  <Form.Row>\n  <Form.Group controlId=\"formGridPhone\">\n      <Form.Control  autoComplete='nope' required={true} type=\"phone\" placeholder=\"Phone number\" name=\"phone\" value={this.state.phone} onChange={ this.handleChange } />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Control  autoComplete='nope' type=\"email\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={ this.handleChange } />\n  </Form.Group>\n\n  <Form.Group controlId=\"formGridAddress1\">\n    <Form.Control autoComplete='nope' placeholder=\"Address\" name=\"address\" value={this.state.address} onChange={ this.handleChange }  />\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group controlId=\"formGridCity\">\n      <Form.Control placeholder=\"City\" name=\"city\" value={this.state.city } onChange={ this.handleChange } />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group className=\"informations\" controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label><FormattedMessage id=\"reservation.info\" /></Form.Label>\n    <Form.Control as=\"textarea\" rows=\"2\" name=\"info\" value={this.state.info } onChange={ this.handleChange } />\n  </Form.Group>\n\n  <Button type=\"submit\" variant=\"primary\" className=\"button-submit\">\n    Submit\n  </Button>\n</Form>\n        </div>\n        );\n    }\n}\nFormNewCustomer.propTypes = {\n  postCustomer: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  customers: state.customers\n})\n\nexport default connect(\n  mapStateToProps,\n  { postCustomer }\n)(FormNewCustomer);\n"]},"metadata":{},"sourceType":"module"}