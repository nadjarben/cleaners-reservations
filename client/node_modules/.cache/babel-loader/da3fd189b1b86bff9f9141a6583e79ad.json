{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\dashboard\\\\DashboardConfig.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { changeUserName } from '../../store/actions/userActions';\n\nfunction DashboardConfig(props) {\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var user = props.auth.user;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(user.name),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(user.id),\n      _useState6 = _slicedToArray(_useState5, 1),\n      id = _useState6[0];\n\n  var _useState7 = useState(user.surname),\n      _useState8 = _slicedToArray(_useState7, 2),\n      surname = _useState8[0],\n      setSurname = _useState8[1];\n\n  var _useState9 = useState(user.address),\n      _useState10 = _slicedToArray(_useState9, 2),\n      address = _useState10[0],\n      setAddress = _useState10[1];\n\n  var _useState11 = useState(user.phone),\n      _useState12 = _slicedToArray(_useState11, 2),\n      phone = _useState12[0],\n      setPhone = _useState12[1];\n\n  var handleSubmit = function handleSubmit() {\n    changeUserName(id, name, surname, phone, address);\n  };\n\n  console.log(user);\n\n  var renderInput = function renderInput() {\n    if (open === true) return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: name,\n      onChange: function onChange(e) {\n        return setName(e.target.value);\n      },\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: user.surname,\n      onChange: function onChange(e) {\n        return setSurname(e.target.value);\n      },\n      placeholder: surname,\n      type: \"text\",\n      name: \"surname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: user.address,\n      onChange: function onChange(e) {\n        return setAddress(e.target.value);\n      },\n      placeholder: address,\n      type: \"test\",\n      name: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      value: user.phone,\n      onChange: function onChange(e) {\n        return setPhone(e.target.value);\n      },\n      placeholder: phone,\n      type: \"phone\",\n      name: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: handleSubmit,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Submit\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      cursor: 'pointer'\n    },\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Modify user informations\"), renderInput());\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeUserName: changeUserName\n})(DashboardConfig);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\dashboard\\DashboardConfig.js"],"names":["React","useState","connect","changeUserName","DashboardConfig","props","handleClickOpen","setOpen","user","auth","open","name","setName","id","surname","setSurname","address","setAddress","phone","setPhone","handleSubmit","console","log","renderInput","e","target","value","color","cursor","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,iCAA/B;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE5B,MAAMC,eAAe,GAAE,SAAjBA,eAAiB,GAAM;AACzBC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFH;;AAIF,MAAMC,IAAI,GAAIH,KAAK,CAACI,IAAN,CAAWD,IAAzB;;AAN8B,kBAONP,QAAQ,CAAC,KAAD,CAPF;AAAA;AAAA,MAOvBS,IAPuB;AAAA,MAOjBH,OAPiB;;AAAA,mBAQNN,QAAQ,CAACO,IAAI,CAACG,IAAN,CARF;AAAA;AAAA,MAQvBA,IARuB;AAAA,MAQjBC,OARiB;;AAAA,mBASjBX,QAAQ,CAACO,IAAI,CAACK,EAAN,CATS;AAAA;AAAA,MASvBA,EATuB;;AAAA,mBAUAZ,QAAQ,CAACO,IAAI,CAACM,OAAN,CAVR;AAAA;AAAA,MAUvBA,OAVuB;AAAA,MAUdC,UAVc;;AAAA,mBAWAd,QAAQ,CAACO,IAAI,CAACQ,OAAN,CAXR;AAAA;AAAA,MAWvBA,OAXuB;AAAA,MAWdC,UAXc;;AAAA,oBAYJhB,QAAQ,CAACO,IAAI,CAACU,KAAN,CAZJ;AAAA;AAAA,MAYvBA,KAZuB;AAAA,MAYhBC,QAZgB;;AAc9B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBjB,IAAAA,cAAc,CAACU,EAAD,EAAKF,IAAL,EAAWG,OAAX,EAAoBI,KAApB,EAA2BF,OAA3B,CAAd;AACH,GAFC;;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;;AAEE,MAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC1B,QAAGb,IAAI,KAAK,IAAZ,EACA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AACI,MAAA,KAAK,EAAEC,IADX;AAEI,MAAA,QAAQ,EAAE,kBAAAa,CAAC;AAAA,eAAIZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAAA,OAFf;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAOA;AACI,MAAA,KAAK,EAAElB,IAAI,CAACM,OADhB;AAEI,MAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,eAAIT,UAAU,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,OAFf;AAGI,MAAA,WAAW,EAAEZ,OAHjB;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,IAAI,EAAC,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAcA;AACI,MAAA,KAAK,EAAEN,IAAI,CAACQ,OADhB;AAEI,MAAA,QAAQ,EAAE,kBAAAQ,CAAC;AAAA,eAAIP,UAAU,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAA,OAFf;AAGI,MAAA,WAAW,EAAEV,OAHjB;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,IAAI,EAAC,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,EAqBA;AACI,MAAA,KAAK,EAAER,IAAI,CAACU,KADhB;AAEI,MAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,eAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,OAFf;AAGI,MAAA,WAAW,EAAER,KAHjB;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,IAAI,EAAC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBA,EA4BA;AAAQ,MAAA,OAAO,EAAEE,YAAjB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BA,CADJ;AAgCC,GAlCD;;AAoCA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KAAV;AAA2C,IAAA,OAAO,EAAEtB,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEKiB,WAAW,EAFhB,CADJ;AAMH;;AACD,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BrB,IAAAA,IAAI,EAAEqB,KAAK,CAACrB;AADkB,GAAL;AAAA,CAA7B;;AAIA,eAAeP,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA,cAAc,EAAdA;AAAF,CAAlB,CAAP,CAA6CC,eAA7C,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { changeUserName } from '../../store/actions/userActions';\r\n\r\nfunction DashboardConfig(props) {\r\n\r\n    const handleClickOpen =() => {\r\n        setOpen(true);\r\n      }\r\n\r\n  const user  = props.auth.user;\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(user.name);\r\n  const [id] = useState(user.id)\r\n  const [surname, setSurname] = useState(user.surname);\r\n  const [address, setAddress] = useState(user.address);\r\n  const [phone, setPhone] = useState(user.phone);\r\n\r\n  const handleSubmit = () => {\r\n    changeUserName(id, name, surname, phone, address);\r\n}\r\n\r\n  console.log(user)\r\n\r\n    const renderInput = () => {  \r\n    if(open === true)\r\n    return (\r\n        <form>\r\n        <input\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}    \r\n            type=\"text\"\r\n            name=\"name\"\r\n        />\r\n        <input\r\n            value={user.surname}\r\n            onChange={e => setSurname(e.target.value)}\r\n            placeholder={surname}\r\n            type=\"text\"\r\n            name=\"surname\"\r\n        />\r\n        <input\r\n            value={user.address}\r\n            onChange={e => setAddress(e.target.value)}\r\n            placeholder={address}\r\n            type=\"test\"\r\n            name=\"address\"\r\n        />\r\n        <input\r\n            value={user.phone}\r\n            onChange={e => setPhone(e.target.value)}\r\n            placeholder={phone}\r\n            type=\"phone\"\r\n            name=\"phone\"\r\n        />\r\n        <button onClick={handleSubmit} type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p style={{color:'red', cursor:'pointer'}} onClick={handleClickOpen}>Modify user informations</p>\r\n            {renderInput()}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n\r\nexport default connect(mapStateToProps, { changeUserName })(DashboardConfig);"]},"metadata":{},"sourceType":"module"}