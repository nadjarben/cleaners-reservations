{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { POST_USER, FETCH_USERS, DELETE_USER, ADD_CREDIT_TO_USER } from './types';\nvar usersAPI = 'http://localhost:8080/api/users/'; //'https://cleaners-reservation.herokuapp.com/api/users/'\n//'https://www.thecleanersisrael.com/api/users/'\n\nexport var postUser = function postUser(name, phone, email, message) {\n  return function (dispatch) {\n    axios.post(usersAPI, {\n      name: name,\n      phone: phone,\n      email: email,\n      message: message\n    }).then(function (res) {\n      return dispatch({\n        type: POST_USER,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Couldnt post user.' + err);\n    });\n  };\n};\nexport var deleteUser = function deleteUser(id) {\n  return function (dispatch) {\n    axios.delete(usersAPI + id).then(function (res) {\n      return dispatch({\n        type: DELETE_USER,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var addCreditToUser = function addCreditToUser(id, credit) {\n  return function (dispatch) {\n    axios.post(usersAPI + id, _objectSpread({}, +credit)).then(function (res) {\n      return dispatch({\n        type: ADD_CREDIT_TO_USER,\n        payload: res.data\n      });\n    });\n  };\n};\nexport var fetchUsers = function fetchUsers() {\n  return function (dispatch) {\n    axios.get(usersAPI, {}).then(function (res) {\n      return dispatch({\n        type: FETCH_USERS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Could not fetch users.' + err);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\store\\actions\\userActions.js"],"names":["axios","POST_USER","FETCH_USERS","DELETE_USER","ADD_CREDIT_TO_USER","usersAPI","postUser","name","phone","email","message","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","deleteUser","id","delete","addCreditToUser","credit","fetchUsers","get"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,EAA8CC,kBAA9C,QAAwE,SAAxE;AAGA,IAAMC,QAAQ,GAAG,kCAAjB,C,CACoB;AACA;;AAEpB,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAqBC,OAArB;AAAA,SAAiC,UAAAC,QAAQ,EAAI;AACjEX,IAAAA,KAAK,CAACY,IAAN,CAAWP,QAAX,EAAqB;AACfE,MAAAA,IAAI,EAAJA,IADe;AACTC,MAAAA,KAAK,EAALA,KADS;AACFC,MAAAA,KAAK,EAALA,KADE;AACKC,MAAAA,OAAO,EAAPA;AADL,KAArB,EAGGG,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACT,aAAOH,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEd,SADQ;AAEde,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFC,OAAD,CAAf;AAID,KARL,EASKC,KATL,CASW,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,uBAAuBH,GAAjC,CAAN;AACD,KAZL;AAaD,GAdqB;AAAA,CAAjB;AAgBN,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,SAAQ,UAAAb,QAAQ,EAAI;AAC9CX,IAAAA,KAAK,CAACyB,MAAN,CAAapB,QAAQ,GAAGmB,EAAxB,EACCX,IADD,CACM,UAAAC,GAAG,EAAI;AACX,aAAOH,QAAQ,CAAE;AACfI,QAAAA,IAAI,EAAEZ,WADS;AAEfa,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFE,OAAF,CAAf;AAID,KAND;AAOC,GARyB;AAAA,CAAnB;AAUP,OAAO,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAACF,EAAD,EAAKG,MAAL;AAAA,SAAgB,UAAAhB,QAAQ,EAAI;AACxDX,IAAAA,KAAK,CAACY,IAAN,CAAWP,QAAQ,GAAGmB,EAAtB,oBACQ,CAAEG,MADV,GAGCd,IAHD,CAGM,UAAAC,GAAG,EAAI;AACX,aAAOH,QAAQ,CAAE;AACfI,QAAAA,IAAI,EAAEX,kBADS;AAEfY,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFE,OAAF,CAAf;AAID,KARD;AASC,GAV2B;AAAA,CAAxB;AAYN,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAjB,QAAQ,EAAI;AAE1CX,IAAAA,KAAK,CAAC6B,GAAN,CAAUxB,QAAV,EAAoB,EAApB,EAEGQ,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,aAAOH,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEb,WADQ;AAEdc,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFC,OAAD,CAAf;AAID,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,2BAA2BH,GAArC,CAAN;AACD,KAXH;AAYD,GAdyB;AAAA,CAAnB","sourcesContent":["import axios from 'axios';\r\nimport { POST_USER, FETCH_USERS, DELETE_USER, ADD_CREDIT_TO_USER } from './types';\r\n\r\n\r\nconst usersAPI = 'http://localhost:8080/api/users/' \r\n                    //'https://cleaners-reservation.herokuapp.com/api/users/'\r\n                    //'https://www.thecleanersisrael.com/api/users/'\r\n\r\nexport const postUser = (name, phone, email, message) => dispatch => {\r\n    axios.post(usersAPI, {\r\n          name, phone, email, message\r\n      })\r\n      .then(res => {\r\n          return dispatch({\r\n            type: POST_USER,\r\n            payload: res.data,\r\n          });       \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          throw new Error('Couldnt post user.' + err);\r\n        });\r\n  }\r\n\r\n export const deleteUser = (id) => dispatch => {\r\n axios.delete(usersAPI + id)\r\n .then(res => {\r\n   return dispatch ({\r\n     type: DELETE_USER,\r\n     payload: res.data\r\n   });\r\n })\r\n }\r\n\r\n export const addCreditToUser = (id, credit) => dispatch => {\r\n    axios.post(usersAPI + id, {\r\n        ... + credit\r\n        })\r\n    .then(res => {\r\n      return dispatch ({\r\n        type: ADD_CREDIT_TO_USER,\r\n        payload: res.data\r\n      });\r\n    })\r\n    }\r\n \r\n  export const fetchUsers = () => dispatch => {\r\n\r\n    axios.get(usersAPI, {\r\n    })\r\n      .then(res => { \r\n        return dispatch({\r\n          type: FETCH_USERS,\r\n          payload: res.data\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Could not fetch users.' + err);\r\n      });    \r\n  }"]},"metadata":{},"sourceType":"module"}