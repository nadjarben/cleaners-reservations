{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport fr from 'react-intl/locale-data/fr';\nimport he from 'react-intl/locale-data/he';\nimport { localeSet } from './store/actions/localeActions';\nimport registerServiceWorker from './registerServiceWorker';\naddLocaleData(en);\naddLocaleData(fr);\naddLocaleData(he);\n\nif (localStorage.alhubLang) {\n  store.dispatch(localeSet(localStorage.alhubLang));\n}\n\n;\n\nvar isIos = function isIos() {\n  var userAgent = window.navigator.userAgent.toLowerCase();\n  return /iphone|ipad|ipod/.test(userAgent);\n}; // Detects if device is in standalone mode\n\n\nvar isInStandaloneMode = function isInStandaloneMode() {\n  return 'standalone' in window.navigator && window.navigator.standalone;\n}; // Checks if should display install popup notification:\n\n\nif (isIos() && !isInStandaloneMode()) {\n  this.setState({\n    showInstallMessage: true\n  });\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n})), document.getElementById('.container')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nregisterServiceWorker();","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\index.js"],"names":["React","ReactDOM","App","Provider","store","addLocaleData","en","fr","he","localeSet","registerServiceWorker","localStorage","alhubLang","dispatch","isIos","userAgent","window","navigator","toLowerCase","test","isInStandaloneMode","standalone","setState","showInstallMessage","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEAL,aAAa,CAACC,EAAD,CAAb;AACAD,aAAa,CAACE,EAAD,CAAb;AACAF,aAAa,CAACG,EAAD,CAAb;;AAEA,IAAIG,YAAY,CAACC,SAAjB,EAA4B;AACxBR,EAAAA,KAAK,CAACS,QAAN,CAAeJ,SAAS,CAACE,YAAY,CAACC,SAAd,CAAxB;AACE;;AAAA;;AACF,IAAME,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,SAAS,GAAGC,MAAM,CAACC,SAAP,CAAiBF,SAAjB,CAA2BG,WAA3B,EAAlB;AACA,SAAO,mBAAmBC,IAAnB,CAAyBJ,SAAzB,CAAP;AACD,CAHH,C,CAIE;;;AACA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO,gBAAgBJ,MAAM,CAACC,SAAxB,IAAuCD,MAAM,CAACC,SAAP,CAAiBI,UAA9D;AAAA,CAA3B,C,CAEA;;;AACA,IAAIP,KAAK,MAAM,CAACM,kBAAkB,EAAlC,EAAsC;AACpC,OAAKE,QAAL,CAAc;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GAAd;AACD;;AAEPtB,QAAQ,CAACuB,MAAT,CACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEpB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CADA,EAGaqB,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAHb,E,CAMA;AACA;AACA;;AACAhB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { addLocaleData } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport fr from 'react-intl/locale-data/fr';\nimport he from 'react-intl/locale-data/he';\nimport { localeSet } from './store/actions/localeActions';\nimport registerServiceWorker from './registerServiceWorker';\n\naddLocaleData(en);\naddLocaleData(fr);\naddLocaleData(he);\n\nif (localStorage.alhubLang) {\n    store.dispatch(localeSet(localStorage.alhubLang)\n    )};\n    const isIos = () => {\n        const userAgent = window.navigator.userAgent.toLowerCase();\n        return /iphone|ipad|ipod/.test( userAgent );\n      }\n      // Detects if device is in standalone mode\n      const isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);\n      \n      // Checks if should display install popup notification:\n      if (isIos() && !isInStandaloneMode()) {\n        this.setState({ showInstallMessage: true });\n      }\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>, document.getElementById('.container'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}