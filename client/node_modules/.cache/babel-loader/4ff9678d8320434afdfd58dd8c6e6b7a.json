{"ast":null,"code":"var _this = this;\n\nimport axios from 'axios';\nimport { ON_SIGN_IN, FETCH_RESERVATIONS, DELETE_RESERVATION, MAIL_RESERVATION } from './types';\nexport var onSignIn = function onSignIn(signInEmail, signInPassword) {\n  return function (dispatch) {\n    // Post request to backend\n    axios.post('https://www.thecleanersisrael.com/api/account/signin', {\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword\n      })\n    }).then(function (res) {\n      return dispatch({\n        type: ON_SIGN_IN,\n        payload: res.json()\n      }).then(function (json) {\n        console.log('json', json);\n\n        if (json.success) {\n          setInStorage('the_main_app', {\n            token: json.token\n          });\n\n          _this.setState({\n            signInError: json.message,\n            isLoading: false,\n            signInPassword: '',\n            signInEmail: '',\n            token: json.token\n          });\n        } else {\n          _this.setState({\n            signInError: json.message,\n            isLoading: false\n          });\n        }\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Couldnt post contact.' + err);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\store\\actions\\authActions.js"],"names":["axios","ON_SIGN_IN","FETCH_RESERVATIONS","DELETE_RESERVATION","MAIL_RESERVATION","onSignIn","signInEmail","signInPassword","dispatch","post","body","JSON","stringify","email","password","then","res","type","payload","json","console","log","success","setInStorage","token","setState","signInError","message","isLoading","catch","err","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,kBAArB,EAAyCC,kBAAzC,EAA6DC,gBAA7D,QAAqF,SAArF;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,WAAD,EAAcC,cAAd;AAAA,SAAiC,UAAAC,QAAQ,EAAI;AACnE;AACAR,IAAAA,KAAK,CAACS,IAAN,CAAW,sDAAX,EAAmE;AACjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAEP,WADY;AAEnBQ,QAAAA,QAAQ,EAAEP;AAFS,OAAf;AAD2D,KAAnE,EAKCQ,IALD,CAKM,UAAAC,GAAG,EAAI;AACX,aAAOR,QAAQ,CAAC;AACdS,QAAAA,IAAI,EAAEhB,UADQ;AAEdiB,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ;AAFK,OAAD,CAAR,CAGJJ,IAHI,CAGC,UAAAI,IAAI,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;;AACA,YAAIA,IAAI,CAACG,OAAT,EAAkB;AAChBC,UAAAA,YAAY,CAAC,cAAD,EAAiB;AAAEC,YAAAA,KAAK,EAAEL,IAAI,CAACK;AAAd,WAAjB,CAAZ;;AACA,UAAA,KAAI,CAACC,QAAL,CAAc;AACZC,YAAAA,WAAW,EAAEP,IAAI,CAACQ,OADN;AAEZC,YAAAA,SAAS,EAAE,KAFC;AAGZrB,YAAAA,cAAc,EAAE,EAHJ;AAIZD,YAAAA,WAAW,EAAE,EAJD;AAKZkB,YAAAA,KAAK,EAAEL,IAAI,CAACK;AALA,WAAd;AAOD,SATD,MASO;AACL,UAAA,KAAI,CAACC,QAAL,CAAc;AACZC,YAAAA,WAAW,EAAEP,IAAI,CAACQ,OADN;AAEZC,YAAAA,SAAS,EAAE;AAFC,WAAd;AAID;AACF,OApBM,CAAP;AAqBD,KA3BD,EA4BCC,KA5BD,CA4BO,UAAAC,GAAG,EAAI;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACA,YAAM,IAAIC,KAAJ,CAAU,0BAA0BD,GAApC,CAAN;AACD,KA/BD;AAgCC,GAlCqB;AAAA,CAAjB","sourcesContent":["import axios from 'axios';\nimport { ON_SIGN_IN, FETCH_RESERVATIONS, DELETE_RESERVATION, MAIL_RESERVATION } from './types';\n\n\n\nexport const onSignIn = (signInEmail, signInPassword) => dispatch => {\n  // Post request to backend\n  axios.post('https://www.thecleanersisrael.com/api/account/signin', {\n    body: JSON.stringify({\n      email: signInEmail,\n      password: signInPassword,\n    }),\n}).then(res => {\n    return dispatch({\n      type: ON_SIGN_IN,\n      payload: res.json(),\n    }).then(json => {\n      console.log('json', json);\n      if (json.success) {\n        setInStorage('the_main_app', { token: json.token });\n        this.setState({\n          signInError: json.message,\n          isLoading: false,\n          signInPassword: '',\n          signInEmail: '',\n          token: json.token,\n        });\n      } else {\n        this.setState({\n          signInError: json.message,\n          isLoading: false,\n        });\n      }\n    });\n  })\n  .catch(err => {\n    console.log(err);\n    throw new Error('Couldnt post contact.' + err);\n  });\n  }"]},"metadata":{},"sourceType":"module"}