{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{POST_RESERVATION,FETCH_RESERVATIONS,DELETE_RESERVATION,MAIL_RESERVATION}from'./types';var reservationsAPI=//'http://localhost:8080/api/reservations/' \n//'https://cleaners-reservation.herokuapp.com/api/reservations/'\n'https://www.thecleanersisrael.com/api/reservations/';var nodeMailerAPI=//'http://localhost:8080/api/send/'\n'https://www.thecleanersisrael.com/api/send/';export var postReservation=function postReservation(name,surname,phone,email,address,date,hour,info,namefact,addressfact,note){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(reservationsAPI,{name:name,surname:surname,phone:phone,email:email,address:address,date:date,hour:hour,info:info,namefact:namefact,addressfact:addressfact,note:note}).then(function(res){return dispatch({type:POST_RESERVATION,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Couldnt post reservation.'+err);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var mailReservation=function mailReservation(name,surname,phone,email,address,date,hour,info,namefact,addressfact,note){return function(dispatch){axios.post(nodeMailerAPI,{name:name,surname:surname,phone:phone,email:email,address:address,date:date,hour:hour,info:info,namefact:namefact,addressfact:addressfact,note:note}).then(function(res){return dispatch({type:MAIL_RESERVATION,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Couldnt mail reservation.'+err);});};};export var deleteReservation=function deleteReservation(id){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.delete(reservationsAPI+id).then(function(res){return dispatch({type:DELETE_RESERVATION,payload:res.data});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};export var fetchReservations=function fetchReservations(){return(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(reservationsAPI,{}).then(function(res){return dispatch({type:FETCH_RESERVATIONS,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Could not fetch reservations.'+err);});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());};","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/store/actions/reservationActions.js"],"names":["axios","POST_RESERVATION","FETCH_RESERVATIONS","DELETE_RESERVATION","MAIL_RESERVATION","reservationsAPI","nodeMailerAPI","postReservation","name","surname","phone","email","address","date","hour","info","namefact","addressfact","note","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","mailReservation","deleteReservation","id","delete","fetchReservations","get"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { POST_RESERVATION, FETCH_RESERVATIONS, DELETE_RESERVATION, MAIL_RESERVATION } from './types';\n\n\nconst reservationsAPI = //'http://localhost:8080/api/reservations/' \n                        //'https://cleaners-reservation.herokuapp.com/api/reservations/'\n                        'https://www.thecleanersisrael.com/api/reservations/'\nconst nodeMailerAPI = //'http://localhost:8080/api/send/'\n                      'https://www.thecleanersisrael.com/api/send/'\n\n\n\nexport const postReservation = (name, surname, phone, email, address, date, hour, info, namefact, addressfact, note) => async dispatch => {\n    await axios.post(reservationsAPI, {\n          name, surname, phone, email, address, date, hour, info, namefact, addressfact, note\n      })\n      .then(res => {\n          return dispatch({\n            type: POST_RESERVATION,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post reservation.' + err);\n        });\n  }\n\n  export const mailReservation = (name, surname, phone, email, address, date, hour, info, namefact, addressfact, note) => dispatch => {\n    axios.post(nodeMailerAPI, {\n          name, surname, phone, email, address, date, hour, info, namefact, addressfact, note\n      })\n      .then(res => {\n          return dispatch({\n            type: MAIL_RESERVATION,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt mail reservation.' + err);\n        });\n  }\n\n export const deleteReservation = (id) => async dispatch => {\n await axios.delete(reservationsAPI + id)\n .then(res => {\n   return dispatch ({\n     type: DELETE_RESERVATION,\n     payload: res.data\n   });\n })\n }\n \n  export const fetchReservations = () => async dispatch => {\n\n    await axios.get(reservationsAPI, {\n    })\n      .then(res => { \n        return dispatch({\n          type: FETCH_RESERVATIONS,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        throw new Error('Could not fetch reservations.' + err);\n      });    \n  }\n\n\n  "]},"metadata":{},"sourceType":"module"}