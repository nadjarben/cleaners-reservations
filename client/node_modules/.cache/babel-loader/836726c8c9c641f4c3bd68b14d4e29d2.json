{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{POST_LAST_RESERVATION,FETCH_LAST_RESERVATIONS,DELETE_LAST_RESERVATION}from'./types';var lastReservationsAPI=//'http://localhost:8080/api/lastreservations/' \n//'https://cleaners-reservation.herokuapp.com/api/lastreservations/'\n'https://www.thecleanersisrael.com/api/lastreservations/';export var postLastReservation=function postLastReservation(name,surname,phone,email,address,date,hour,info,namefact,addressfact,note){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(lastReservationsAPI,{name:name,surname:surname,phone:phone,email:email,address:address,date:date,hour:hour,info:info,namefact:namefact,addressfact:addressfact,note:note}).then(function(res){return dispatch({type:POST_LAST_RESERVATION,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Couldnt post last reservation.'+err);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var fetchLastReservations=function fetchLastReservations(){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(lastReservationsAPI,{}).then(function(res){return dispatch({type:FETCH_LAST_RESERVATIONS,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Could not fetch last reservations.'+err);});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};export var deleteLastReservation=function deleteLastReservation(id){return(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.delete(lastReservationsAPI+id).then(function(res){return dispatch({type:DELETE_LAST_RESERVATION,payload:res.data});});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());};","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/store/actions/notifActions.js"],"names":["axios","POST_LAST_RESERVATION","FETCH_LAST_RESERVATIONS","DELETE_LAST_RESERVATION","lastReservationsAPI","postLastReservation","name","surname","phone","email","address","date","hour","info","namefact","addressfact","note","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","fetchLastReservations","get","deleteLastReservation","id","delete"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,qBAAT,CAAgCC,uBAAhC,CAAyDC,uBAAzD,KAAwF,SAAxF,CAEA,GAAMC,CAAAA,mBAAmB,CAAG;AACA;AACA,yDAF5B,CAKA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,CAAOC,OAAP,CAAgBC,KAAhB,CAAuBC,KAAvB,CAA8BC,OAA9B,CAAuCC,IAAvC,CAA6CC,IAA7C,CAAmDC,IAAnD,CAAyDC,QAAzD,CAAmEC,WAAnE,CAAgFC,IAAhF,kGAAyF,iBAAMC,QAAN,wIAClHjB,CAAAA,KAAK,CAACkB,IAAN,CAAWd,mBAAX,CAAgC,CAChCE,IAAI,CAAJA,IADgC,CAC1BC,OAAO,CAAPA,OAD0B,CACjBC,KAAK,CAALA,KADiB,CACVC,KAAK,CAALA,KADU,CACHC,OAAO,CAAPA,OADG,CACMC,IAAI,CAAJA,IADN,CACYC,IAAI,CAAJA,IADZ,CACkBC,IAAI,CAAJA,IADlB,CACwBC,QAAQ,CAARA,QADxB,CACkCC,WAAW,CAAXA,WADlC,CAC+CC,IAAI,CAAJA,IAD/C,CAAhC,EAGFG,IAHE,CAGG,SAAAC,GAAG,CAAI,CACR,MAAOH,CAAAA,QAAQ,CAAC,CAChBI,IAAI,CAAEpB,qBADU,CAEhBqB,OAAO,CAAEF,GAAG,CAACG,IAFG,CAAD,CAAf,CAIH,CARC,EASDC,KATC,CASK,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,KAAM,IAAIG,CAAAA,KAAJ,CAAU,iCAAmCH,GAA7C,CAAN,CACH,CAZG,CADkH,uDAAzF,iEAA5B,CAeL,MAAO,IAAMI,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,oGAAM,kBAAMZ,QAAN,6IAEnCjB,CAAAA,KAAK,CAAC8B,GAAN,CAAU1B,mBAAV,CAA+B,EAA/B,EAEHe,IAFG,CAEE,SAAAC,GAAG,CAAI,CACX,MAAOH,CAAAA,QAAQ,CAAC,CACdI,IAAI,CAAEnB,uBADQ,CAEdoB,OAAO,CAAEF,GAAG,CAACG,IAFC,CAAD,CAAf,CAID,CAPG,EAQHC,KARG,CAQG,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,KAAM,IAAIG,CAAAA,KAAJ,CAAU,qCAAuCH,GAAjD,CAAN,CACD,CAXG,CAFmC,yDAAN,mEAA9B,CAgBP,MAAO,IAAMM,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,EAAD,mGAAQ,kBAAMf,QAAN,6IACrCjB,CAAAA,KAAK,CAACiC,MAAN,CAAa7B,mBAAmB,CAAG4B,EAAnC,EACLb,IADK,CACA,SAAAC,GAAG,CAAI,CACX,MAAOH,CAAAA,QAAQ,CAAE,CACfI,IAAI,CAAElB,uBADS,CAEfmB,OAAO,CAAEF,GAAG,CAACG,IAFE,CAAF,CAAf,CAID,CANK,CADqC,yDAAR,mEAA9B","sourcesContent":["import axios from 'axios';\nimport { POST_LAST_RESERVATION, FETCH_LAST_RESERVATIONS, DELETE_LAST_RESERVATION } from './types';\n\nconst lastReservationsAPI = //'http://localhost:8080/api/lastreservations/' \n                            //'https://cleaners-reservation.herokuapp.com/api/lastreservations/'\n                            'https://www.thecleanersisrael.com/api/lastreservations/'\n\n\nexport const postLastReservation = (name, surname, phone, email, address, date, hour, info, namefact, addressfact, note) => async dispatch => {\n    await axios.post(lastReservationsAPI, {\n          name, surname, phone, email, address, date, hour, info, namefact, addressfact, note\n      })\n       .then(res => {\n            return dispatch({\n            type: POST_LAST_RESERVATION,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post last reservation.' + err);\n      });\n  }\n  export const fetchLastReservations = () => async dispatch => {\n\n    await axios.get(lastReservationsAPI, {\n    })\n      .then(res => { \n        return dispatch({\n          type: FETCH_LAST_RESERVATIONS,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        throw new Error('Could not fetch last reservations.' + err);\n      });    \n  }\n\n  export const deleteLastReservation = (id) => async dispatch => {\n    await axios.delete(lastReservationsAPI + id)\n    .then(res => {\n      return dispatch ({\n        type: DELETE_LAST_RESERVATION,\n        payload: res.data\n      });\n    })\n  }"]},"metadata":{},"sourceType":"module"}