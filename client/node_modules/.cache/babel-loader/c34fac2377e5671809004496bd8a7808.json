{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{useState}from'react';import{connect}from\"react-redux\";import{postContact}from'../../store/actions/contactActions';import Button from'@material-ui/core/Button';import{FormattedMessage}from'react-intl';import TextField from'@material-ui/core/TextField';function FormContact(props){var _useState=useState({name:'',phone:'',email:'',message:''}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var handleChange=function handleChange(e){setContact(_objectSpread({},contact,_defineProperty({},e.target.name,e.target.value)));};var handleSubmit=function handleSubmit(e){var textAlert='Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';e.preventDefault();var name=contact.name,phone=contact.phone,email=contact.email,message=contact.message;props.postContact(name,phone,email,message);alert(textAlert);};var labelName=React.createElement(FormattedMessage,{id:\"contact.name\"});var labelNumber=React.createElement(FormattedMessage,{id:\"contact.number\"});var labelEmail=React.createElement(FormattedMessage,{id:\"contact.email\"});var labelMessage=React.createElement(FormattedMessage,{id:\"contact.message\"});return React.createElement(\"div\",{className:\"container\"},React.createElement(\"form\",{onSubmit:handleSubmit},React.createElement(TextField,{label:labelName,name:\"name\",value:contact.name,onChange:handleChange,margin:\"normal\",required:true}),React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-md-6\"},React.createElement(TextField,{name:\"phone\",label:labelNumber,value:contact.phone,onChange:handleChange,margin:\"normal\"})),React.createElement(\"div\",{className:\"col-md-6\"},React.createElement(TextField,{name:\"email\",label:labelEmail,value:contact.email,onChange:handleChange,type:\"email\",autoComplete:\"email\",margin:\"normal\",required:true}))),React.createElement(TextField,{name:\"message\",label:labelMessage,value:contact.message,onChange:handleChange,placeholder:\"Message\",fullwidth:true,multiline:true,rows:\"3\",margin:\"normal\",required:true}),React.createElement(Button,{style:{marginTop:'5%'},variant:\"outlined\",color:\"primary\",type:\"submit\"},\"Submit\")));}var mapStateToProps=function mapStateToProps(state){return{contacts:state.contacts};};export default connect(mapStateToProps,{postContact:postContact})(FormContact);","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/contact/FormContact.js"],"names":["React","useState","connect","postContact","Button","FormattedMessage","TextField","FormContact","props","name","phone","email","message","contact","setContact","handleChange","e","target","value","handleSubmit","textAlert","preventDefault","alert","labelName","labelNumber","labelEmail","labelMessage","marginTop","mapStateToProps","state","contacts"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { postContact } from '../../store/actions/contactActions';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl'; \nimport TextField from '@material-ui/core/TextField';\n\n\nfunction FormContact(props) {\n  const [ contact, setContact ] = useState({name: '', phone: '', email: '', message: ''})\n  \n      const handleChange = (e) => {\n        setContact ({...contact, [e.target.name]: e.target.value})\n        }\n        \n      const handleSubmit = (e) => {\n        const textAlert =\n        'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\n        e.preventDefault()\n        const { name, phone, email, message } = contact;\n        props.postContact(name, phone, email, message)\n        alert(textAlert);\n      }\n  \n      const labelName = <FormattedMessage id='contact.name' />;\n      const labelNumber = <FormattedMessage id='contact.number' />;\n      const labelEmail = <FormattedMessage id='contact.email' />;\n      const labelMessage = <FormattedMessage id='contact.message' />;\n      \n\n        return (\n          <div className=\"container\">\n              <form onSubmit={handleSubmit}  >          \n                  <TextField\n                    label={labelName}\n                    name='name'\n                    value={contact.name}\n                    onChange={handleChange}\n                    margin=\"normal\"\n                    required\n                  />\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <TextField\n                      name=\"phone\"\n                      label={labelNumber}\n                      value={contact.phone}\n                      onChange={handleChange}\n                      margin=\"normal\"\n                    />\n                  </div>\n                  <div className='col-md-6'>\n                    <TextField\n                      name=\"email\"\n                      label={labelEmail}\n                      value={contact.email}\n                      onChange={handleChange}\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      margin=\"normal\"\n                      required\n                    />\n                  </div>\n                </div>                    \n                <TextField\n                  name=\"message\"\n                  label={labelMessage}\n                  value={contact.message}\n                  onChange={handleChange}        \n                  placeholder=\"Message\"\n                  fullwidth\n                  multiline\n                  rows=\"3\"\n                  margin=\"normal\"\n                  required\n                />\n              <Button style={{marginTop:'5%'}} variant=\"outlined\" color=\"primary\" type='submit'>\n                Submit\n              </Button>\n            </form>\n            </div>\n        );\n    }\nconst mapStateToProps = state => ({\n    contacts: state.contacts\n  })\n  FormContact.propTypes = {\n    postContact: PropTypes.func.isRequired\n  };\n\nexport default connect(\n    mapStateToProps,{ postContact })(FormContact);"]},"metadata":{},"sourceType":"module"}