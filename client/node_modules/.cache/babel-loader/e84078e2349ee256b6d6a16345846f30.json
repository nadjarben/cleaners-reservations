{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\contact\\\\FormContact.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { postContact } from '../../store/actions/contactActions';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport { green, red } from '@material-ui/core/colors';\nvar CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'red'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'red'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'red'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'red'\n      }\n    }\n  }\n})(TextField);\nvar BootstrapInput = withStyles(function (theme) {\n  return {\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.common.white,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      width: 'auto',\n      padding: '10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n      '&:focus': {\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 0.2rem\"),\n        borderColor: theme.palette.primary.main\n      }\n    }\n  };\n})(InputBase);\nvar useStylesReddit = makeStyles(function (theme) {\n  return {\n    root: {\n      border: '1px solid #e2e2e1',\n      overflow: 'hidden',\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&:hover': {\n        backgroundColor: '#fff'\n      },\n      '&$focused': {\n        backgroundColor: '#fff',\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 2px\"),\n        borderColor: theme.palette.primary.main\n      }\n    },\n    focused: {}\n  };\n});\n\nfunction RedditTextField(props) {\n  var classes = useStylesReddit();\n  return React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes: classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  };\n});\nvar theme = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\n\nfunction FormContact(props) {\n  var classes = useStyles();\n\n  var _useState = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      contact = _useState2[0],\n      setContact = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setContact(_objectSpread({}, contact, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var textAlert = 'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\n    e.preventDefault();\n    var name = contact.name,\n        phone = contact.phone,\n        email = contact.email,\n        message = contact.message;\n    props.postContact(name, phone, email, message);\n    alert(textAlert);\n  };\n\n  var labelName = React.createElement(FormattedMessage, {\n    id: \"contact.name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  });\n  var labelNumber = React.createElement(FormattedMessage, {\n    id: \"contact.number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  });\n  var labelEmail = React.createElement(FormattedMessage, {\n    id: \"contact.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  });\n  var labelMessage = React.createElement(FormattedMessage, {\n    id: \"contact.message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(CssTextField, {\n    label: \"Custom CSS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"standard-name\",\n    label: labelName,\n    name: \"name\",\n    value: contact.name,\n    onChange: handleChange,\n    margin: \"normal\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"phone\",\n    label: labelNumber,\n    value: contact.phone,\n    onChange: handleChange,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"email\",\n    label: labelEmail,\n    value: contact.email,\n    onChange: handleChange,\n    type: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    name: \"message\",\n    label: labelMessage,\n    value: contact.message,\n    onChange: handleChange,\n    placeholder: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: \"3\",\n    margin: \"normal\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contacts: state.contacts\n  };\n};\n\nFormContact.propTypes = {\n  postContact: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  postContact: postContact\n})(FormContact);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\contact\\FormContact.js"],"names":["React","useState","connect","PropTypes","postContact","Button","FormattedMessage","fade","withStyles","makeStyles","createMuiTheme","ThemeProvider","InputBase","InputLabel","TextField","FormControl","green","red","CssTextField","root","color","borderBottomColor","borderColor","BootstrapInput","theme","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","common","white","border","fontSize","width","padding","transition","transitions","create","fontFamily","join","boxShadow","primary","main","useStylesReddit","overflow","focused","RedditTextField","props","classes","disableUnderline","useStyles","display","flexWrap","margin","FormContact","name","phone","email","message","contact","setContact","handleChange","e","target","value","handleSubmit","textAlert","preventDefault","alert","labelName","labelNumber","labelEmail","labelMessage","mapStateToProps","state","contacts","propTypes","func","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,cAAvC,QAA6D,0BAA7D;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;AAEA,IAAMC,YAAY,GAAGV,UAAU,CAAC;AAC9BW,EAAAA,IAAI,EAAE;AACJ,2BAAuB;AACrBC,MAAAA,KAAK,EAAE;AADc,KADnB;AAIJ,mCAA+B;AAC7BC,MAAAA,iBAAiB,EAAE;AADU,KAJ3B;AAOJ,gCAA4B;AAC1B,oBAAc;AACZC,QAAAA,WAAW,EAAE;AADD,OADY;AAI1B,0BAAoB;AAClBA,QAAAA,WAAW,EAAE;AADK,OAJM;AAO1B,gCAA0B;AACxBA,QAAAA,WAAW,EAAE;AADW;AAPA;AAPxB;AADwB,CAAD,CAAV,CAoBlBR,SApBkB,CAArB;AAsBA,IAAMS,cAAc,GAAGf,UAAU,CAAC,UAAAgB,KAAK;AAAA,SAAK;AAC1CL,IAAAA,IAAI,EAAE;AACJ,mBAAa;AACXM,QAAAA,SAAS,EAAED,KAAK,CAACE,OAAN,CAAc,CAAd;AADA;AADT,KADoC;AAM1CC,IAAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE,CADT;AAELC,MAAAA,QAAQ,EAAE,UAFL;AAGLC,MAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,MAAd,CAAqBC,KAHjC;AAILC,MAAAA,MAAM,EAAE,mBAJH;AAKLC,MAAAA,QAAQ,EAAE,EALL;AAMLC,MAAAA,KAAK,EAAE,MANF;AAOLC,MAAAA,OAAO,EAAE,WAPJ;AAQLC,MAAAA,UAAU,EAAEd,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,cAAD,EAAiB,YAAjB,CAAzB,CARP;AASL;AACAC,MAAAA,UAAU,EAAE,CACV,eADU,EAEV,oBAFU,EAGV,YAHU,EAIV,QAJU,EAKV,kBALU,EAMV,OANU,EAOV,YAPU,EAQV,qBARU,EASV,kBATU,EAUV,mBAVU,EAWVC,IAXU,CAWL,GAXK,CAVP;AAsBL,iBAAW;AACTC,QAAAA,SAAS,YAAKpC,IAAI,CAACiB,KAAK,CAACO,OAAN,CAAca,OAAd,CAAsBC,IAAvB,EAA6B,IAA7B,CAAT,kBADA;AAETvB,QAAAA,WAAW,EAAEE,KAAK,CAACO,OAAN,CAAca,OAAd,CAAsBC;AAF1B;AAtBN;AANmC,GAAL;AAAA,CAAN,CAAV,CAiCnBjC,SAjCmB,CAAvB;AAmCA,IAAMkC,eAAe,GAAGrC,UAAU,CAAC,UAAAe,KAAK;AAAA,SAAK;AAC3CL,IAAAA,IAAI,EAAE;AACJe,MAAAA,MAAM,EAAE,mBADJ;AAEJa,MAAAA,QAAQ,EAAE,QAFN;AAGJnB,MAAAA,YAAY,EAAE,CAHV;AAIJE,MAAAA,eAAe,EAAE,SAJb;AAKJQ,MAAAA,UAAU,EAAEd,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,cAAD,EAAiB,YAAjB,CAAzB,CALR;AAMJ,iBAAW;AACTV,QAAAA,eAAe,EAAE;AADR,OANP;AASJ,mBAAa;AACXA,QAAAA,eAAe,EAAE,MADN;AAEXa,QAAAA,SAAS,YAAKpC,IAAI,CAACiB,KAAK,CAACO,OAAN,CAAca,OAAd,CAAsBC,IAAvB,EAA6B,IAA7B,CAAT,eAFE;AAGXvB,QAAAA,WAAW,EAAEE,KAAK,CAACO,OAAN,CAAca,OAAd,CAAsBC;AAHxB;AATT,KADqC;AAgB3CG,IAAAA,OAAO,EAAE;AAhBkC,GAAL;AAAA,CAAN,CAAlC;;AAmBA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAMC,OAAO,GAAGL,eAAe,EAA/B;AAEA,SAAO,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAE;AAAEK,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,gBAAgB,EAAE;AAA7B;AAAvB,KAAgEF,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,IAAMG,SAAS,GAAG5C,UAAU,CAAC,UAAAe,KAAK;AAAA,SAAK;AACrCL,IAAAA,IAAI,EAAE;AACJmC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAD+B;AAKrCC,IAAAA,MAAM,EAAE;AACNA,MAAAA,MAAM,EAAEhC,KAAK,CAACE,OAAN,CAAc,CAAd;AADF;AAL6B,GAAL;AAAA,CAAN,CAA5B;AAUA,IAAMF,KAAK,GAAGd,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAE;AACPa,IAAAA,OAAO,EAAE5B;AADF;AADkB,CAAD,CAA5B;;AASA,SAASyC,WAAT,CAAqBP,KAArB,EAA4B;AAC1B,MAAMC,OAAO,GAAGE,SAAS,EAAzB;;AAD0B,kBAEMpD,QAAQ,CAAC;AAACyD,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,KAAK,EAAE,EAA7B;AAAiCC,IAAAA,OAAO,EAAE;AAA1C,GAAD,CAFd;AAAA;AAAA,MAElBC,OAFkB;AAAA,MAETC,UAFS;;AAItB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BF,IAAAA,UAAU,mBAAMD,OAAN,sBAAgBG,CAAC,CAACC,MAAF,CAASR,IAAzB,EAAgCO,CAAC,CAACC,MAAF,CAASC,KAAzC,GAAV;AACC,GAFH;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACH,CAAD,EAAO;AAC1B,QAAMI,SAAS,GACf,gFADA;AAEAJ,IAAAA,CAAC,CAACK,cAAF;AAH0B,QAIlBZ,IAJkB,GAIcI,OAJd,CAIlBJ,IAJkB;AAAA,QAIZC,KAJY,GAIcG,OAJd,CAIZH,KAJY;AAAA,QAILC,KAJK,GAIcE,OAJd,CAILF,KAJK;AAAA,QAIEC,OAJF,GAIcC,OAJd,CAIED,OAJF;AAK1BX,IAAAA,KAAK,CAAC9C,WAAN,CAAkBsD,IAAlB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,OAAtC;AACAU,IAAAA,KAAK,CAACF,SAAD,CAAL;AACD,GAPD;;AAUA,MAAMG,SAAS,GAAG,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB;AACA,MAAMC,WAAW,GAAG,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB;AACA,MAAMC,UAAU,GAAG,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnB;AACA,MAAMC,YAAY,GAAG,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB;AAGE,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR,oBAAC,YAAD;AAAe,IAAA,KAAK,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,EAEI,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,KAAK,EAAEI,SAFT;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEV,OAAO,CAACJ,IAJjB;AAKE,IAAA,QAAQ,EAAEM,YALZ;AAME,IAAA,MAAM,EAAC,QANT;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAWE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAES,WAFT;AAGE,IAAA,KAAK,EAAEX,OAAO,CAACH,KAHjB;AAIE,IAAA,QAAQ,EAAEK,YAJZ;AAKE,IAAA,MAAM,EAAC,QALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEU,UAFT;AAGE,IAAA,KAAK,EAAEZ,OAAO,CAACF,KAHjB;AAIE,IAAA,QAAQ,EAAEI,YAJZ;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,YAAY,EAAC,OANf;AAOE,IAAA,MAAM,EAAC,QAPT;AAQE,IAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAXF,EAkCE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,KAAK,EAAEW,YAFT;AAGE,IAAA,KAAK,EAAEb,OAAO,CAACD,OAHjB;AAIE,IAAA,QAAQ,EAAEG,YAJZ;AAKE,IAAA,WAAW,EAAC,SALd;AAME,IAAA,SAAS,MANX;AAOE,IAAA,SAAS,MAPX;AAQE,IAAA,IAAI,EAAC,GARP;AASE,IAAA,MAAM,EAAC,QATT;AAUE,IAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EA8CA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,IAAI,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CA,CADJ,CADF;AAsDH;;AACL,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AADc,GAAL;AAAA,CAA7B;;AAGErB,WAAW,CAACsB,SAAZ,GAAwB;AACtB3E,EAAAA,WAAW,EAAED,SAAS,CAAC6E,IAAV,CAAeC;AADN,CAAxB;AAIF,eAAe/E,OAAO,CAClB0E,eADkB,EACF;AAAExE,EAAAA,WAAW,EAAXA;AAAF,CADE,CAAP,CACsBqD,WADtB,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { postContact } from '../../store/actions/contactActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage } from 'react-intl'; \r\nimport { fade, withStyles, makeStyles, createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'red',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'red',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.common.white,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    width: 'auto',\r\n    padding: '10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nfunction FormContact(props) {\r\n  const classes = useStyles();\r\n  const [ contact, setContact ] = useState({name: '', phone: '', email: '', message: ''})\r\n  \r\n      const handleChange = (e) => {\r\n        setContact ({...contact, [e.target.name]: e.target.value})\r\n        }\r\n        \r\n      const handleSubmit = (e) => {\r\n        const textAlert =\r\n        'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\r\n        e.preventDefault()\r\n        const { name, phone, email, message } = contact;\r\n        props.postContact(name, phone, email, message)\r\n        alert(textAlert);\r\n      }\r\n\r\n  \r\n      const labelName = <FormattedMessage id='contact.name' />;\r\n      const labelNumber = <FormattedMessage id='contact.number' />;\r\n      const labelEmail = <FormattedMessage id='contact.email' />;\r\n      const labelMessage = <FormattedMessage id='contact.message' />;\r\n      \r\n\r\n        return (\r\n          <div className=\"container\">\r\n              <form onSubmit={handleSubmit} >\r\n      <CssTextField  label=\"Custom CSS\" />            \r\n                  <TextField\r\n                    id=\"standard-name\"\r\n                    label={labelName}\r\n                    name='name'\r\n                    value={contact.name}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    required\r\n                  />\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <TextField\r\n                      name=\"phone\"\r\n                      label={labelNumber}\r\n                      value={contact.phone}\r\n                      onChange={handleChange}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label={labelEmail}\r\n                      value={contact.email}\r\n                      onChange={handleChange}\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                      margin=\"normal\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>                    \r\n                <TextField\r\n                  name=\"message\"\r\n                  label={labelMessage}\r\n                  value={contact.message}\r\n                  onChange={handleChange}        \r\n                  placeholder=\"Message\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"3\"\r\n                  margin=\"normal\"\r\n                  required\r\n                />\r\n              <Button variant=\"outlined\" color=\"primary\" type='submit'>\r\n                Submit\r\n              </Button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts\r\n  })\r\n  FormContact.propTypes = {\r\n    postContact: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default connect(\r\n    mapStateToProps,{ postContact })(FormContact);"]},"metadata":{},"sourceType":"module"}