{"ast":null,"code":"import axios from 'axios';\nimport { POST_RESERVATION } from './types';\nvar reservationsAPI = 'http://localhost:8001/api/reservations/';\nexport var postReservation = function postReservation(name, surname, phone, email, address, city, date, hour, info) {\n  return function (dispatch) {\n    axios.post(reservationsAPI, {\n      name: name,\n      surname: surname,\n      phone: phone,\n      email: email,\n      address: address,\n      city: city,\n      date: date,\n      hour: hour,\n      info: info\n    }).then(function (res) {\n      return dispatch({\n        type: POST_RESERVATION,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Couldnt post order.' + err);\n    });\n  };\n};\nexport var fetchReservations = function fetchReservations() {\n  return function (dispatch) {\n    axios.get(reservationsAPI).then(function (res) {\n      var products = res.data;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(function (p) {\n          return filters.find(function (f) {\n            return p.types === f;\n          });\n        });\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    }).catch(function (err) {\n      console.log(err);\n      throw new Error('Could not fetch products. Try again later.' + err);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\store\\actions\\reservationActions.js"],"names":["axios","POST_RESERVATION","reservationsAPI","postReservation","name","surname","phone","email","address","city","date","hour","info","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","fetchReservations","get","products","filters","length","filter","p","find","f","types","sortBy","sort","compare","callback","FETCH_PRODUCTS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAGA,IAAMC,eAAe,GAAG,yCAAxB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,OAAP,EAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,IAAnD,EAAyDC,IAAzD;AAAA,SAAkE,UAAAC,QAAQ,EAAI;AACzGb,IAAAA,KAAK,CAACc,IAAN,CAAWZ,eAAX,EAA4B;AACtBE,MAAAA,IAAI,EAAJA,IADsB;AAChBC,MAAAA,OAAO,EAAPA,OADgB;AACPC,MAAAA,KAAK,EAALA,KADO;AACAC,MAAAA,KAAK,EAALA,KADA;AACOC,MAAAA,OAAO,EAAPA,OADP;AACgBC,MAAAA,IAAI,EAAJA,IADhB;AACsBC,MAAAA,IAAI,EAAJA,IADtB;AAC4BC,MAAAA,IAAI,EAAJA,IAD5B;AACkCC,MAAAA,IAAI,EAAJA;AADlC,KAA5B,EAGGG,IAHH,CAGQ,UAAAC,GAAG,EAAI;AACT,aAAOH,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEhB,gBADQ;AAEdiB,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFC,OAAD,CAAf;AAID,KARL,EASKC,KATL,CASW,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,wBAAwBH,GAAlC,CAAN;AACD,KAZL;AAaD,GAd4B;AAAA,CAAxB;AAgBL,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAM,UAAAZ,QAAQ,EAAI;AAEjDb,IAAAA,KAAK,CAAC0B,GAAN,CAAUxB,eAAV,EAEGa,IAFH,CAEQ,UAAAC,GAAG,EAAI;AAEX,UAAIW,QAAQ,GAAGX,GAAG,CAACG,IAAnB;;AACA,UAAG,CAAC,CAACS,OAAF,IAAaA,OAAO,CAACC,MAAR,GAAiB,CAAjC,EAAmC;AAEjCF,QAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAiB,UAAAC,CAAC;AAAA,iBAAIH,OAAO,CAACI,IAAR,CAAc,UAAAC,CAAC;AAAA,mBAAIF,CAAC,CAACG,KAAF,KAAYD,CAAhB;AAAA,WAAf,CAAJ;AAAA,SAAlB,CAAX;AACD;;AAED,UAAG,CAAC,CAACE,MAAL,EAAY;AACVR,QAAAA,QAAQ,GAAGA,QAAQ,CAACS,IAAT,CAAcC,OAAO,CAACF,MAAD,CAArB,CAAX;AACD;;AAED,UAAG,CAAC,CAACG,QAAL,EAAe;AACbA,QAAAA,QAAQ;AACT;;AAED,aAAOzB,QAAQ,CAAC;AACdI,QAAAA,IAAI,EAAEsB,cADQ;AAEdrB,QAAAA,OAAO,EAAES;AAFK,OAAD,CAAf;AAID,KAtBH,EAuBGP,KAvBH,CAuBS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM,IAAIG,KAAJ,CAAU,+CAA+CH,GAAzD,CAAN;AACD,KA1BH;AA2BD,GA7BgC;AAAA,CAA1B","sourcesContent":["import axios from 'axios';\r\nimport { POST_RESERVATION } from './types';\r\n\r\n\r\nconst reservationsAPI = 'http://localhost:8001/api/reservations/'; \r\n\r\nexport const postReservation = (name, surname, phone, email, address, city, date, hour, info) => dispatch => {\r\n    axios.post(reservationsAPI, {\r\n          name, surname, phone, email, address, city, date, hour, info\r\n      })\r\n      .then(res => {\r\n          return dispatch({\r\n            type: POST_RESERVATION,\r\n            payload: res.data,\r\n          });       \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          throw new Error('Couldnt post order.' + err);\r\n        });\r\n  }\r\n\r\n  export const fetchReservations = () => dispatch => {\r\n\r\n    axios.get(reservationsAPI)\r\n  \r\n      .then(res => {\r\n      \r\n        let products = res.data;\r\n        if(!!filters && filters.length > 0){\r\n          \r\n          products = products.filter( p => filters.find( f => p.types === f ) )\r\n        }\r\n  \r\n        if(!!sortBy){\r\n          products = products.sort(compare[sortBy]);\r\n        }\r\n  \r\n        if(!!callback) {\r\n          callback();\r\n        }\r\n  \r\n        return dispatch({\r\n          type: FETCH_PRODUCTS,\r\n          payload: products\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        throw new Error('Could not fetch products. Try again later.' + err);\r\n      });    \r\n  }"]},"metadata":{},"sourceType":"module"}