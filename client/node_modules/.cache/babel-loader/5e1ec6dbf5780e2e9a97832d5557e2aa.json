{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _defineProperty from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import clsx from'clsx';import{makeStyles}from'@material-ui/core/styles';import Drawer from'@material-ui/core/Drawer';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import DashboardMenu from'./DashboardMenu';import DashboardCredit from'./DashboardCredit';import DashboardConfig from'./DashboardConfig';import account from'../../images/account-circle.png';import money from'../../images/money.png';import tools from'../../images/tools.png';import{Link}from'react-router-dom';import PrivateRoute from'../private-route/PrivateRoute';var drawerWidth=240;var useStyles=makeStyles(function(theme){return{root:{display:'flex'},menuButton:{marginRight:36},hide:{display:'none'},drawer:{width:drawerWidth,flexShrink:0,whiteSpace:'nowrap',zIndex:'0'},drawerOpen:{width:drawerWidth,transition:theme.transitions.create('width',{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.enteringScreen})},drawerClose:_defineProperty({transition:theme.transitions.create('width',{easing:theme.transitions.easing.sharp,duration:theme.transitions.duration.leavingScreen}),overflowX:'hidden',width:theme.spacing(7)+1},theme.breakpoints.up('sm'),{width:theme.spacing(9)+1}),toolbar:{display:'flex',alignItems:'center',justifyContent:'flex-end'},content:{flexGrow:1,padding:theme.spacing(1)}};});export default function MiniDrawer(){var _clsx,_clsx2;var classes=useStyles();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,1),open=_React$useState2[0];return React.createElement(\"div\",{className:classes.root},React.createElement(Drawer,{variant:\"permanent\",className:clsx(classes.drawer,(_clsx={},_defineProperty(_clsx,classes.drawerOpen,open),_defineProperty(_clsx,classes.drawerClose,!open),_clsx)),classes:{paper:clsx((_clsx2={},_defineProperty(_clsx2,classes.drawerOpen,open),_defineProperty(_clsx2,classes.drawerClose,!open),_clsx2))},open:open},React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(List,null,['Compte','Messages','Credit'].map(function(text,index){return React.createElement(ListItem,{button:true,key:text},React.createElement(ListItemIcon,null,index===0&&React.createElement(Link,{to:\"/dashboard/menu\"},React.createElement(\"img\",{src:account,width:\"62%\",alt:\"account laundry\",style:{marginLeft:'1px'}})),index===1&&React.createElement(Link,{to:\"/dashboard/credit\"},React.createElement(\"img\",{src:money,width:\"5.5%\",alt:\"credit laundry\",style:{marginLeft:'1px'}})),index===2&&React.createElement(Link,{to:\"/dashboard/config\"},React.createElement(\"img\",{src:tools,width:\"5%\",alt:\"account config\",style:{marginLeft:'2px'}}))),React.createElement(ListItemText,{primary:text}));})),React.createElement(Divider,null)),React.createElement(\"main\",{className:classes.content},React.createElement(\"div\",{className:classes.toolbar}),React.createElement(PrivateRoute,{exact:true,path:\"/dashboard/menu\",component:DashboardMenu}),React.createElement(PrivateRoute,{exact:true,path:\"/dashboard/credit\",component:DashboardCredit}),React.createElement(PrivateRoute,{exact:true,path:\"/dashboard/config\",component:DashboardConfig})));}","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/dashboard/DasboardAppBar.js"],"names":["React","clsx","makeStyles","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","DashboardMenu","DashboardCredit","DashboardConfig","account","money","tools","Link","PrivateRoute","drawerWidth","useStyles","theme","root","display","menuButton","marginRight","hide","drawer","width","flexShrink","whiteSpace","zIndex","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","content","flexGrow","padding","MiniDrawer","classes","useState","open","paper","map","text","index","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardMenu from './DashboardMenu';\nimport DashboardCredit from './DashboardCredit';\nimport DashboardConfig from './DashboardConfig';\nimport account from '../../images/account-circle.png';\nimport money from '../../images/money.png';\nimport tools from '../../images/tools.png';\nimport { Link } from 'react-router-dom';\nimport PrivateRoute from '../private-route/PrivateRoute';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    zIndex: '0'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const [open] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <br/>\n        <br />\n        <br />\n        <List>\n          {['Compte', 'Messages', 'Credit'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n              {index === 0 && <Link to='/dashboard/menu'><img src={account} width='62%' alt='account laundry' style={{marginLeft:'1px'}}/></Link>}\n              {index === 1 && <Link to='/dashboard/credit'><img src={money} width='5.5%' alt='credit laundry'style={{ marginLeft:'1px'}}/></Link>}\n              {index === 2 && <Link to='/dashboard/config'><img src={tools} width='5%' alt='account config' style={{ marginLeft:'2px'}}/></Link>}\n             </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <PrivateRoute exact path=\"/dashboard/menu\" component={DashboardMenu} />\n        <PrivateRoute exact path=\"/dashboard/credit\" component={DashboardCredit} />\n        <PrivateRoute exact path=\"/dashboard/config\" component={DashboardConfig} />\n      </main>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}