{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\containers\\\\AdminReservation.js\";\nimport React, { Component } from 'react';\nimport { fetchReservations } from '../store/actions/reservationActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavBar from '../components/NavBar';\nimport CardReservation from '../components/CardReservation';\nimport NavAdmin from '../components/NavAdmin';\nimport FormReservation from '../components/FormReservation';\nimport { Modal, Button, ModalHeader, ModalBody } from 'reactstrap';\nimport Spinner from '../components/Spinner';\nimport './AdminReservation.css';\n\nvar AdminReservation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminReservation, _Component);\n\n  function AdminReservation(props) {\n    var _this;\n\n    _classCallCheck(this, AdminReservation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminReservation).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.updateSearch = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n\n      console.log(_this.state.search);\n    };\n\n    _this.handleSubmit = function (e) {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          surname = _this$state.surname,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          address = _this$state.address,\n          city = _this$state.city,\n          date = _this$state.date,\n          hour = _this$state.hour,\n          info = _this$state.info;\n      e.preventDefault();\n\n      _this.props.postReservation(name, surname, phone, email, address, city, date, hour, info);\n    };\n\n    _this.state = {\n      modal: false,\n      search: ''\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AdminReservation, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchReservations();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredReservations = this.props.reservation.filter(function (reservation) {\n        return reservation.name.toLowerCase().indexOf(_this2.state.search.toLowerCase()) !== -1 || reservation.surname.toLowerCase().indexOf(_this2.state.search.toLowerCase()) !== -1 || reservation.surname.toLowerCase().indexOf(_this2.state.search.toLowerCase()) !== -1;\n      });\n      var reservation = this.props.reservation;\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"\\xD7\");\n      var r = filteredReservations.map(function (r) {\n        return React.createElement(CardReservation, {\n          key: r._id,\n          reservation: r,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(NavAdmin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"search-reservation form-search form-control mr-sm-2\",\n        type: \"search\",\n        onChange: this.updateSearch.bind(this),\n        placeholder: \"Search\",\n        name: \"search\",\n        value: this.state.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"button-create\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Nouveau\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        className: \"modal-header\",\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Nouvelle Reservation\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(FormReservation, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), this.state.loading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, r)));\n    }\n  }]);\n\n  return AdminReservation;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    reservation: state.reservations.reservation\n  };\n};\n\nAdminReservation.propTypes = {\n  fetchReservations: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  fetchReservations: fetchReservations\n})(AdminReservation);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\containers\\AdminReservation.js"],"names":["React","Component","fetchReservations","PropTypes","connect","NavBar","CardReservation","NavAdmin","FormReservation","Modal","Button","ModalHeader","ModalBody","Spinner","AdminReservation","props","handleChange","e","setState","target","name","value","updateSearch","search","console","log","state","handleSubmit","surname","phone","email","address","city","date","hour","info","preventDefault","postReservation","modal","toggle","bind","prevState","filteredReservations","reservation","filter","toLowerCase","indexOf","closeBtn","r","map","_id","loading","mapStateToProps","reservations","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchReservations } from '../store/actions/reservationActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../components/NavBar';\r\nimport CardReservation from '../components/CardReservation';\r\nimport NavAdmin from '../components/NavAdmin';\r\nimport FormReservation from '../components/FormReservation';\r\nimport { Modal, Button, ModalHeader, ModalBody} from 'reactstrap';\r\nimport Spinner from '../components/Spinner';\r\nimport './AdminReservation.css';\r\n\r\nclass AdminReservation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          modal: false,\r\n          search: ''\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState ({[e.target.name]: e.target.value})\r\n          }\r\n\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal\r\n        }));\r\n      }\r\n    componentDidMount() {\r\n        this.props.fetchReservations()\r\n    }\r\n    updateSearch = (e) => {\r\n        this.setState ({search: e.target.value})\r\n        console.log(this.state.search)\r\n      }\r\n    \r\n      handleSubmit = (e) => {\r\n        const { name, surname, phone, email, address, city, date, hour, info } = this.state\r\n        e.preventDefault()\r\n        this.props.postReservation(name, surname, phone, email, address, city, date, hour, info)\r\n      }\r\n    \r\n    render() {\r\n        let filteredReservations = this.props.reservation.filter(\r\n            (reservation) => {\r\n                return (\r\n                reservation.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                reservation.surname.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                reservation.surname.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 \r\n                )\r\n            }\r\n        )\r\n        const { reservation } = this.props;\r\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>;\r\n        const r = filteredReservations.map(r => {\r\n            return (\r\n              <CardReservation\r\n              key={r._id}\r\n              reservation={r}\r\n              />\r\n            );\r\n          });\r\n\r\n            return (\r\n                <div>\r\n                    <NavBar />\r\n                    <NavAdmin />\r\n                    <input className=\"search-reservation form-search form-control mr-sm-2\" type=\"search\" onChange={ this.updateSearch.bind(this) } placeholder=\"Search\" name=\"search\" value={this.state.search} />\r\n                    <Button className=\"button-create\" onClick={this.toggle}>Nouveau</Button>                  \r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} centered>\r\n                    <ModalHeader className=\"modal-header\" close={closeBtn}>\r\n                        Nouvelle Reservation\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormReservation />\r\n                    </ModalBody>\r\n                    </Modal>\r\n                \r\n                    {this.state.loading &&\r\n                     <Spinner />\r\n                    }\r\n                <div className=\"admin\">\r\n                    <ul className=\"list-group\">{r}</ul>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\nconst mapStateToProps = state => ({\r\n    reservation: state.reservations.reservation\r\n});\r\n\r\nAdminReservation.propTypes = {\r\n    fetchReservations: PropTypes.func.isRequired,\r\n}\r\nexport default connect(mapStateToProps, { fetchReservations })(AdminReservation)\r\n"]},"metadata":{},"sourceType":"module"}