{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { getFromStorage, setInStorage } from '../../config/storage';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nvar login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(login, _Component);\n\n  function login(props) {\n    var _this;\n\n    _classCallCheck(this, login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(login).call(this, props));\n    _this.state = {\n      isLoading: true,\n      isRegistered: false,\n      token: '',\n      signUpError: '',\n      signInError: '',\n      signInEmail: '',\n      signInPassword: '',\n      signUpFirstName: '',\n      signUpLastName: '',\n      signUpEmail: '',\n      signUpPassword: ''\n    };\n    _this.onTextboxChangeSignInEmail = _this.onTextboxChangeSignInEmail.bind(_assertThisInitialized(_this));\n    _this.onTextboxChangeSignInPassword = _this.onTextboxChangeSignInPassword.bind(_assertThisInitialized(_this));\n    _this.onTextboxChangeSignUpEmail = _this.onTextboxChangeSignUpEmail.bind(_assertThisInitialized(_this));\n    _this.onTextboxChangeSignUpPassword = _this.onTextboxChangeSignUpPassword.bind(_assertThisInitialized(_this));\n    _this.onTextboxChangeSignUpFirstName = _this.onTextboxChangeSignUpFirstName.bind(_assertThisInitialized(_this));\n    _this.onTextboxChangeSignUpLastName = _this.onTextboxChangeSignUpLastName.bind(_assertThisInitialized(_this));\n    _this.onSignIn = _this.onSignIn.bind(_assertThisInitialized(_this));\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_this));\n    _this.register = _this.register.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var obj = getFromStorage('the_cleaners');\n\n      if (obj && obj.token) {\n        var token = obj.token; // Verify token\n\n        fetch('https://www.thecleanersisrael.com/api/account/verify?token=' + token).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            _this2.setState({\n              token: token,\n              isLoading: false\n            });\n          } else {\n            _this2.setState({\n              isLoading: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isLoading: false,\n          isRegistered: false\n        });\n      }\n    }\n  }, {\n    key: \"onTextboxChangeSignInEmail\",\n    value: function onTextboxChangeSignInEmail(e) {\n      this.setState({\n        signInEmail: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignInPassword\",\n    value: function onTextboxChangeSignInPassword(e) {\n      this.setState({\n        signInPassword: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpEmail\",\n    value: function onTextboxChangeSignUpEmail(e) {\n      this.setState({\n        signUpEmail: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpPassword\",\n    value: function onTextboxChangeSignUpPassword(e) {\n      this.setState({\n        signUpPassword: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpFirstName\",\n    value: function onTextboxChangeSignUpFirstName(e) {\n      this.setState({\n        signUpFirstName: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpLastName\",\n    value: function onTextboxChangeSignUpLastName(e) {\n      this.setState({\n        signUpLastName: e.target.value\n      });\n    }\n  }, {\n    key: \"register\",\n    value: function register() {\n      this.setState(function (prevState) {\n        return {\n          isRegistered: !prevState.isRegistered\n        };\n      });\n    }\n  }, {\n    key: \"onSignIn\",\n    value: function onSignIn() {\n      var _this3 = this;\n\n      // Grab state\n      var _this$state = this.state,\n          signInEmail = _this$state.signInEmail,\n          signInPassword = _this$state.signInPassword;\n      this.setState({\n        isLoading: true\n      }); // Post request to backend\n\n      fetch('https://www.thecleanersisrael.com/api/account/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: signInEmail,\n          password: signInPassword\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log('json', json);\n\n        if (json.success) {\n          setInStorage('the_cleaners', {\n            token: json.token\n          });\n\n          _this3.setState({\n            signInError: json.message,\n            isLoading: false,\n            signInPassword: '',\n            signInEmail: '',\n            token: json.token\n          });\n        } else {\n          _this3.setState({\n            signInError: json.message,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this4 = this;\n\n      // Grab state\n      var _this$state2 = this.state,\n          signUpEmail = _this$state2.signUpEmail,\n          signUpPassword = _this$state2.signUpPassword,\n          signUpFirstName = _this$state2.signUpFirstName,\n          signUpLastName = _this$state2.signUpLastName;\n      this.setState({\n        isLoading: true\n      }); // Post request to backend\n\n      fetch('https://www.thecleanersisrael.com/api/account/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: signUpEmail,\n          password: signUpPassword,\n          firstName: signUpFirstName,\n          lastName: signUpLastName\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log('json', json);\n\n        if (json.success) {\n          _this4.setState({\n            signUpError: json.message,\n            isLoading: false,\n            signUpEmail: '',\n            signUpPassword: '',\n            signUpFirstName: '',\n            signUpLastName: ''\n          });\n        } else {\n          _this4.setState({\n            signUpError: json.message,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this5 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var obj = getFromStorage('the_cleaners');\n\n      if (obj && obj.token) {\n        var token = obj.token; // Verify token\n\n        fetch('https://www.thecleanersisrael.com/api/account/logout?token=' + token).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            _this5.setState({\n              token: '',\n              isLoading: false\n            });\n\n            setInStorage('the_cleaners', {\n              token: ''\n            });\n          } else {\n            _this5.setState({\n              isLoading: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          isLoading = _this$state3.isLoading,\n          token = _this$state3.token,\n          isRegistered = _this$state3.isRegistered,\n          signInError = _this$state3.signInError,\n          signUpError = _this$state3.signUpError,\n          signInEmail = _this$state3.signInEmail,\n          signInPassword = _this$state3.signInPassword,\n          signUpFirstName = _this$state3.signUpFirstName,\n          signUpLastName = _this$state3.signUpLastName,\n          signUpPassword = _this$state3.signUpPassword,\n          signUpEmail = _this$state3.signUpEmail;\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"Loading ...\"));\n      }\n\n      if (!token && isRegistered === false) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, signInError ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, signInError) : null, React.createElement(\"p\", {\n          className: \"text-center\",\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Sign In\"), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          autoComplete: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: signInEmail,\n          onChange: this.onTextboxChangeSignInEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          style: {\n            marginTop: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: signInPassword,\n          onChange: this.onTextboxChangeSignInPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          style: {\n            marginTop: '25px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, React.createElement(Button, {\n          style: {\n            backgroundColor: '#0E1521',\n            color: 'white'\n          },\n          variant: \"contained\",\n          onClick: this.onSignIn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"Sign In\")), React.createElement(\"p\", {\n          onClick: this.register,\n          className: \"text-center\",\n          style: {\n            marginTop: '5%',\n            cursor: 'pointer',\n            color: 'skyblue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, \"Not registered yet ?\"));\n      }\n\n      if (!token && isRegistered == true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, signUpError ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, signUpError) : null, React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"text-center\",\n          style: {\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, \"Sign Up\"), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          autoComplete: \"family-name\",\n          type: \"text\",\n          placeholder: \"First Name\",\n          value: signUpFirstName,\n          onChange: this.onTextboxChangeSignUpFirstName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          style: {\n            marginTop: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          autoComplete: \"given-name\",\n          type: \"text\",\n          placeholder: \"Last Name\",\n          value: signUpLastName,\n          onChange: this.onTextboxChangeSignUpLastName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          style: {\n            marginTop: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: signUpEmail,\n          onChange: this.onTextboxChangeSignUpEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          style: {\n            marginTop: '15px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: signUpPassword,\n          onChange: this.onTextboxChangeSignUpPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"row justify-content-center\",\n          style: {\n            marginTop: '25px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(Button, {\n          style: {\n            backgroundColor: '#0E1521',\n            color: 'white'\n          },\n          variant: \"contained\",\n          onClick: this.onSignUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, \"Sign Up\"))), React.createElement(\"p\", {\n          onClick: this.register,\n          className: \"text-center\",\n          style: {\n            marginTop: '5%',\n            cursor: 'pointer',\n            color: 'skyblue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, \"Already registered ?\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"My Account\"), React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          backgroundColor: 'red',\n          marginTop: '5%',\n          color: 'white'\n        },\n        className: \"text-center\",\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Logout\"));\n    }\n  }]);\n\n  return login;\n}(Component);\n\nexport { login as default };","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\Login.js"],"names":["React","Component","getFromStorage","setInStorage","Button","TextField","login","props","state","isLoading","isRegistered","token","signUpError","signInError","signInEmail","signInPassword","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","onTextboxChangeSignInEmail","bind","onTextboxChangeSignInPassword","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","onTextboxChangeSignUpFirstName","onTextboxChangeSignUpLastName","onSignIn","onSignUp","logout","register","obj","fetch","then","res","json","success","setState","e","target","value","prevState","method","headers","body","JSON","stringify","email","password","console","log","message","firstName","lastName","color","fontWeight","marginTop","backgroundColor","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { getFromStorage, setInStorage } from '../../config/storage';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nexport default class login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            isRegistered: false,\n            token: '',\n            signUpError: '',\n            signInError: '',\n            signInEmail: '',\n            signInPassword: '',\n            signUpFirstName: '',\n            signUpLastName: '',\n            signUpEmail: '',\n            signUpPassword: ''\n        };\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\n    this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\n    this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\n    this.onTextboxChangeSignUpFirstName = this.onTextboxChangeSignUpFirstName.bind(this);\n    this.onTextboxChangeSignUpLastName = this.onTextboxChangeSignUpLastName.bind(this);\n    \n    this.onSignIn = this.onSignIn.bind(this);\n    this.onSignUp = this.onSignUp.bind(this);\n    this.logout = this.logout.bind(this);\n    this.register = this.register.bind(this);\n    }\n  \n    componentDidMount() {\n        const obj = getFromStorage('the_cleaners');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify token\n          fetch('https://www.thecleanersisrael.com/api/account/verify?token=' + token)\n            .then(res => res.json())\n            .then(json => {\n              if (json.success) {\n                this.setState({\n                  token,\n                  isLoading: false\n                });\n              } else {\n                this.setState({\n                  isLoading: false,\n                });\n              }\n            });\n        } else {\n          this.setState({\n            isLoading: false,\n            isRegistered: false\n          });\n        }\n      }\n\n      onTextboxChangeSignInEmail(e) {\n          this.setState({\n              signInEmail: e.target.value,\n          })\n      }\n      onTextboxChangeSignInPassword(e) {\n        this.setState({\n            signInPassword: e.target.value,\n        })\n    }\n    onTextboxChangeSignUpEmail(e) {\n        this.setState({\n            signUpEmail: e.target.value,\n        })\n    }\n    onTextboxChangeSignUpPassword(e) {\n        this.setState({\n            signUpPassword: e.target.value,\n        })\n    }\n    onTextboxChangeSignUpFirstName(e) {\n        this.setState({\n            signUpFirstName: e.target.value,\n        })\n    }\n    onTextboxChangeSignUpLastName(e) {\n        this.setState({\n            signUpLastName: e.target.value,\n        })\n    }\n\n    register() {\n        this.setState(prevState => ({\n            isRegistered: !prevState.isRegistered\n          }));\n    }\n\n    onSignIn() {\n        // Grab state\n        const {\n          signInEmail,\n          signInPassword,\n        } = this.state;\n        this.setState({\n          isLoading: true,\n        });\n        // Post request to backend\n        fetch('https://www.thecleanersisrael.com/api/account/signin', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: signInEmail,\n            password: signInPassword,\n          }),\n        }).then(res => res.json())\n          .then(json => {\n            console.log('json', json);\n            if (json.success) {\n              setInStorage('the_cleaners', { token: json.token });\n              this.setState({\n                signInError: json.message,\n                isLoading: false,\n                signInPassword: '',\n                signInEmail: '',\n                token: json.token,\n              });\n            } else {\n              this.setState({\n                signInError: json.message,\n                isLoading: false,\n              });\n            }\n          });\n      }\n\n    onSignUp() {\n        // Grab state\n        const {\n          signUpEmail,\n          signUpPassword,\n          signUpFirstName,\n          signUpLastName\n        } = this.state;\n        this.setState({\n          isLoading: true,\n        });\n        // Post request to backend\n        fetch('https://www.thecleanersisrael.com/api/account/signup', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: signUpEmail,\n            password: signUpPassword,\n            firstName: signUpFirstName,\n            lastName: signUpLastName\n          }),\n        }).then(res => res.json())\n          .then(json => {\n            console.log('json', json);\n            if (json.success) {\n              this.setState({\n                signUpError: json.message,\n                isLoading: false,\n                signUpEmail: '',\n                signUpPassword: '',\n                signUpFirstName: '',\n                signUpLastName: ''\n              });\n            } else {\n              this.setState({\n                signUpError: json.message,\n                isLoading: false,\n              });\n            }\n          });\n      }\n      \n    logout() {\n        this.setState({\n          isLoading: true,\n        });\n        const obj = getFromStorage('the_cleaners');\n        if (obj && obj.token) {\n          const { token } = obj;\n          // Verify token\n          fetch('https://www.thecleanersisrael.com/api/account/logout?token=' + token)\n            .then(res => res.json())\n            .then(json => {\n              if (json.success) {\n                this.setState({\n                  token: '',\n                  isLoading: false\n                });\n                setInStorage('the_cleaners', { token: '' });\n              } else {\n                this.setState({\n                  isLoading: false,\n                });\n              }\n            });\n        } else {\n          this.setState({\n            isLoading: false,\n          });\n        }\n      }\n      \n\n    render() {\n        const { isLoading, token, isRegistered, signInError, signUpError, signInEmail, signInPassword,\n        signUpFirstName, signUpLastName, signUpPassword, signUpEmail } = this.state\n\n        if(isLoading) {\n            return <div><p>Loading ...</p></div>\n        }\n\n        if(!token && isRegistered === false) {\n            return (\n                    <div>\n                        {\n                            (signInError) ? (\n                                <p>{signInError}</p>\n                            ) : (null)\n                        }\n                        <p className='text-center' style={{color:'red', fontWeight:'bold'}}>Sign In</p>\n                        <div className='row justify-content-center'>\n                        <TextField autoComplete='email' type='email' placeholder='Email' value={signInEmail} onChange={this.onTextboxChangeSignInEmail} />\n                        </div>\n                        <div className='row justify-content-center' style={{marginTop:'15px'}}>\n                        <TextField type='password' placeholder='Password' value={signInPassword} onChange={this.onTextboxChangeSignInPassword} />\n                        </div>\n                        <div className='row justify-content-center' style={{marginTop:'25px'}}>\n                        <Button style={{backgroundColor:'#0E1521', color:'white'}} variant='contained' onClick={this.onSignIn}>Sign In</Button>\n                        </div>\n                        <p onClick={this.register} className='text-center' style={{marginTop:'5%', cursor:'pointer', color: 'skyblue'}}>\n                            Not registered yet ?\n                        </p>\n                    </div>\n            )\n        }\n        if(!token && isRegistered == true) {\n            return (\n                <div>    \n                    {\n                            (signUpError) ? (\n                                <p>{signUpError}</p>\n                            ) : (null)\n                        }\n                    <form>\n                        <p className='text-center' style={{color:'red', fontWeight:'bold'}}>Sign Up</p>\n                        <div className='row justify-content-center'>\n                        <TextField autoComplete='family-name' type='text' placeholder='First Name' value={signUpFirstName} onChange={this.onTextboxChangeSignUpFirstName} />\n                        </div>\n                        <div className='row justify-content-center' style={{marginTop:'15px'}}>\n                        <TextField autoComplete='given-name' type='text' placeholder=\"Last Name\" value={signUpLastName} onChange={this.onTextboxChangeSignUpLastName} />\n                        </div>\n                        <div className='row justify-content-center' style={{marginTop:'15px'}}>\n                        <TextField type='email' placeholder='Email' value={signUpEmail} onChange={this.onTextboxChangeSignUpEmail} />\n                        </div>\n                        <div className='row justify-content-center' style={{marginTop:'15px'}}>\n                        <TextField type='password' placeholder='Password' value={signUpPassword} onChange={this.onTextboxChangeSignUpPassword} />\n                        </div>\n                        <div className='row justify-content-center' style={{marginTop:'25px'}}>\n                        <Button style={{backgroundColor:'#0E1521', color:'white'}} variant='contained' onClick={this.onSignUp}>Sign Up</Button>\n                        </div>\n                    </form>\n                    <p onClick={this.register} className='text-center' style={{marginTop:'5%', cursor:'pointer', color: 'skyblue'}}>\n                            Already registered ?\n                    </p>\n                </div>\n            )\n        }\n\n        return (\n            <div className='text-center'>\n                <p>My Account</p>\n                <Button variant='contained' style={{backgroundColor:'red', marginTop: '5%', color:'white'}} className='text-center' onClick={this.logout}>Logout</Button>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}