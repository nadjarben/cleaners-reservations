{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\contact\\\\FormContact.js\";\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { postContact } from '../../store/actions/contactActions';\nimport { ThemeProvider } from '@material-ui/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { fade, withStyles, makeStyles, createMuiTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nvar CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'green'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'green'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green'\n      }\n    }\n  }\n})(TextField);\nvar useStylesReddit = makeStyles(function (theme) {\n  return {\n    root: {\n      border: '1px solid #e2e2e1',\n      overflow: 'hidden',\n      borderRadius: 4,\n      backgroundColor: '#fcfcfb',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      '&:hover': {\n        backgroundColor: '#fff'\n      },\n      '&$focused': {\n        backgroundColor: '#fff',\n        boxShadow: \"\".concat(fade(theme.palette.primary.main, 0.25), \" 0 0 0 2px\"),\n        borderColor: theme.palette.primary.main\n      }\n    },\n    focused: {}\n  };\n});\n\nfunction RedditTextField(props) {\n  var classes = useStylesReddit();\n  return React.createElement(TextField, Object.assign({\n    InputProps: {\n      classes: classes,\n      disableUnderline: true\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    }\n  });\n});\nvar theme = createMuiTheme({\n  palette: {\n    primary: green\n  }\n});\n\nfunction FormContact(state) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 4),\n      name = _React$useState2[0],\n      phone = _React$useState2[1],\n      email = _React$useState2[2],\n      message = _React$useState2[3];\n\n  var classes = useStyles();\n\n  function handleSubmit(e) {\n    var textAlert = 'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\n    var name = state.name,\n        phone = state.phone,\n        email = state.email,\n        message = state.message;\n    e.preventDefault();\n    props.postContact(name, phone, email, message);\n    alert(textAlert);\n  }\n\n  function handleChange(e) {\n    setState(_defineProperty({}, e.target.name, e.target.value));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onSubmit: function onSubmit(e) {\n      return handleSubmit(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.margin,\n    id: \"standard-name\",\n    label: \"Name\",\n    name: \"name\",\n    value: state.name,\n    onChange: handleChange(),\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"phone\",\n    label: \"Number\",\n    value: state.phone,\n    onChange: handleChange,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"email\",\n    label: \"Email\",\n    value: state.email,\n    onChange: handleChange,\n    type: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    name: \"message\",\n    label: \"Message\",\n    value: state.message,\n    onChange: handleChange,\n    placeholder: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: \"3\",\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Submit\"))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contacts: state.contacts\n  };\n};\n\nFormContact.propTypes = {\n  postContact: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  postContact: postContact\n})(FormContact);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\contact\\FormContact.js"],"names":["React","Form","connect","PropTypes","postContact","ThemeProvider","TextField","Button","fade","withStyles","makeStyles","createMuiTheme","Theme","createStyles","green","CssTextField","root","color","borderBottomColor","borderColor","useStylesReddit","theme","border","overflow","borderRadius","backgroundColor","transition","transitions","create","boxShadow","palette","primary","main","focused","RedditTextField","props","classes","disableUnderline","useStyles","display","flexWrap","margin","spacing","FormContact","state","useState","name","phone","email","message","handleSubmit","e","textAlert","preventDefault","alert","handleChange","setState","target","value","mapStateToProps","contacts","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { postContact } from '../../store/actions/contactActions';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { fade, withStyles, makeStyles, createMuiTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nconst useStylesReddit = makeStyles(theme => ({\r\n  root: {\r\n    border: '1px solid #e2e2e1',\r\n    overflow: 'hidden',\r\n    borderRadius: 4,\r\n    backgroundColor: '#fcfcfb',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    '&:hover': {\r\n      backgroundColor: '#fff',\r\n    },\r\n    '&$focused': {\r\n      backgroundColor: '#fff',\r\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  focused: {},\r\n}));\r\n\r\nfunction RedditTextField(props) {\r\n  const classes = useStylesReddit();\r\n\r\n  return <TextField InputProps={{ classes, disableUnderline: true }} {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\n\r\n      function FormContact(state) {\r\n        const [name, phone, email, message] = React.useState(null);\r\n        const classes = useStyles();\r\n\r\n        function handleSubmit(e) {\r\n          const textAlert =\r\n          'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\r\n          const { name, phone, email, message } = state;\r\n          e.preventDefault()\r\n          props.postContact(name, phone, email, message)\r\n          alert(textAlert);\r\n        }\r\n        function handleChange(e) {\r\n          setState ({[e.target.name]: e.target.value})\r\n          }\r\n\r\n        return (\r\n          <div>\r\n          <div className=\"container\">\r\n              <Form onSubmit={e => handleSubmit(e)}>            \r\n                  <TextField\r\n                    className={classes.margin}\r\n                    id=\"standard-name\"\r\n                    label=\"Name\"\r\n                    name='name'\r\n                    value={state.name}\r\n                    onChange={handleChange()}\r\n                    margin=\"normal\"\r\n                  />\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <TextField\r\n                      name=\"phone\"\r\n                      label=\"Number\"\r\n                      value={state.phone}\r\n                      onChange={handleChange}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      value={state.email}\r\n                      onChange={handleChange}\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                      margin=\"normal\"\r\n                    />\r\n                  </div>\r\n                </div>                    \r\n                <TextField\r\n                  name=\"message\"\r\n                  label=\"Message\"\r\n                  value={state.message}\r\n                  onChange={handleChange}        \r\n                  placeholder=\"Message\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"3\"\r\n                  margin=\"normal\"\r\n                />\r\n              <Button variant=\"outlined\" color=\"primary\" type='submit'>\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts\r\n  })\r\n  FormContact.propTypes = {\r\n    postContact: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default connect(\r\n    mapStateToProps,{ postContact })(FormContact);"]},"metadata":{},"sourceType":"module"}