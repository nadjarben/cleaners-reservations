{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\dashboard\\\\DasboardAppBar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dashboard from './Dashboard';\nimport account from '../../images/account-circle.png';\nimport money from '../../images/currency-usd.png';\nvar drawerWidth = 240;\nvar useStyles = makeStyles({\n  root: {\n    display: 'flex'\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    zIndex: '0'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: _defineProperty({\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1\n  }, theme.breakpoints.up('sm'), {\n    width: theme.spacing(9) + 1\n  }),\n  toolbar: _objectSpread({\n    marginTop: '9vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n});\nexport default function MiniDrawer() {\n  var _clsx, _clsx2;\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, (_clsx = {}, _defineProperty(_clsx, classes.drawerOpen, open), _defineProperty(_clsx, classes.drawerClose, !open), _clsx)),\n    classes: {\n      paper: clsx((_clsx2 = {}, _defineProperty(_clsx2, classes.drawerOpen, open), _defineProperty(_clsx2, classes.drawerClose, !open), _clsx2))\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, ['Compte', 'Messages', 'Credit'].map(function (text, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, index === 0 ? React.createElement(\"img\", {\n      src: account,\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      src: money,\n      width: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\dashboard\\DasboardAppBar.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","List","Divider","ListItem","ListItemIcon","ListItemText","Dashboard","account","money","drawerWidth","useStyles","root","display","menuButton","marginRight","hide","drawer","width","flexShrink","whiteSpace","zIndex","drawerOpen","transition","theme","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","marginTop","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useState","open","setOpen","handleDrawerOpen","handleDrawerClose","paper","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dashboard from './Dashboard';\nimport account from '../../images/account-circle.png';\nimport money from '../../images/currency-usd.png';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    zIndex: '0'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    marginTop: '9vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n});\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <br/>\n        <br />\n        <br />\n        <List>\n          {['Compte', 'Messages', 'Credit'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index  === 0 ? <img src={account} width='50%'/> : <img src={money} width='50%'/>}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Dashboard />\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}