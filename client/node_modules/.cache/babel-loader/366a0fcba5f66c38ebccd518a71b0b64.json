{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\GoogleAuth2.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { useEffect } from 'react';\nvar emails = ['username@gmail.com', 'user02@gmail.com'];\nvar useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  var _this = this;\n\n  var google = useEffect(function () {\n    return window.gapi.load('client:auth2', function () {\n      window.gapi.client.init({\n        clientId: '162564132974-al7mv7822j2b88bqka4ps7q29vn4quk3.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(function () {\n        auth = window.gapi.auth2.getAuthInstance();\n        onAuthChange(_this.auth.isSignedIn.get());\n        auth.isSignedIn.listen(_this.onAuthChange);\n        console.log(_this.auth.currentUser.get().getId());\n      });\n    });\n  });\n  var classes = useStyles();\n  var onClose = props.onClose,\n      selectedValue = props.selectedValue,\n      open = props.open;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Set backup account\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, emails.map(function (email) {\n    return React.createElement(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        return handleListItemClick(email);\n      },\n      key: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      primary: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }), React.createElement(ListItem, {\n    button: true,\n    onClick: function onClick() {\n      return handleListItemClick('addAccount');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: \"add account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }))));\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function SimpleDialogDemo() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(emails[1]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  var handleClose = function handleClose(value) {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Selected: \", selectedValue), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Open simple dialog\"), React.createElement(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\GoogleAuth2.js"],"names":["React","PropTypes","makeStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","useEffect","emails","useStyles","avatar","backgroundColor","color","SimpleDialog","props","google","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","onAuthChange","isSignedIn","get","listen","console","log","currentUser","getId","classes","onClose","selectedValue","open","handleClose","handleListItemClick","value","map","email","propTypes","func","isRequired","bool","string","SimpleDialogDemo","useState","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { useEffect } from 'react'\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\n\r\n\r\nfunction SimpleDialog(props) {\r\n    const google = useEffect(() => window.gapi.load('client:auth2', () => {\r\n        window.gapi.client\r\n        .init({\r\n            clientId: '162564132974-al7mv7822j2b88bqka4ps7q29vn4quk3.apps.googleusercontent.com',\r\n            scope: 'email'\r\n        })\r\n        .then(() => {\r\n            auth = window.gapi.auth2.getAuthInstance();\r\n            onAuthChange(this.auth.isSignedIn.get());\r\n            auth.isSignedIn.listen(this.onAuthChange);\r\n            console.log(this.auth.currentUser.get().getId())\r\n        });\r\n    })\r\n)\r\n\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick('addAccount')}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}