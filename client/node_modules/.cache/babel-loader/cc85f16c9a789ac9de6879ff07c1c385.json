{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\containers\\\\AdminCustomer.js\";\nimport React, { Component } from 'react';\nimport { fetchCustomers } from '../store/actions/customerActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavBar from '../components/navbar/NavBar';\nimport CardCustomer from '../components/admin/CardCustomer';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './AdminCustomer.css';\nimport FormNewCustomer from '../components/form/FormNewCustomer';\nimport NavAdmin from '../components/admin/NavAdmin';\nimport Search from '../components/admin/Search';\n\nvar AdminCustomer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminCustomer, _Component);\n\n  function AdminCustomer(props) {\n    var _this;\n\n    _classCallCheck(this, AdminCustomer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AdminCustomer).call(this, props));\n\n    _this.updateSearch = function (e) {\n      _this.setState({\n        search: e.target.value\n      });\n    };\n\n    _this.state = {\n      modal: false,\n      search: ''\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AdminCustomer, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchCustomers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var filteredCustomer = this.props.customer.filter(function (customer) {\n        return customer.name.toLowerCase().indexOf(_this2.state.search.toLowerCase()) !== -1 || customer.surname.toLowerCase().indexOf(_this2.state.search.toLowerCase()) !== -1;\n      });\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"\\xD7\");\n      var c = filteredCustomer.map(function (c) {\n        return React.createElement(CardCustomer, {\n          key: c._id,\n          customer: c,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(NavAdmin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"button-create\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Nouveau\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        className: \"modal-header\",\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Nouveau Client\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(FormNewCustomer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, c)));\n    }\n  }]);\n\n  return AdminCustomer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    customer: state.customers.customer\n  };\n};\n\nAdminCustomer.propTypes = {\n  fetchCustomers: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  fetchCustomers: fetchCustomers\n})(AdminCustomer);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\containers\\AdminCustomer.js"],"names":["React","Component","fetchCustomers","PropTypes","connect","NavBar","CardCustomer","Button","Modal","ModalHeader","ModalBody","FormNewCustomer","NavAdmin","Search","AdminCustomer","props","updateSearch","e","setState","search","target","value","state","modal","toggle","bind","prevState","filteredCustomer","customer","filter","name","toLowerCase","indexOf","surname","closeBtn","c","map","_id","mapStateToProps","customers","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchCustomers } from '../store/actions/customerActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../components/navbar/NavBar';\r\nimport CardCustomer from '../components/admin/CardCustomer';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport './AdminCustomer.css';\r\nimport FormNewCustomer from '../components/form/FormNewCustomer';\r\nimport NavAdmin from '../components/admin/NavAdmin';\r\nimport Search from '../components/admin/Search'\r\n\r\nclass AdminCustomer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          modal: false,\r\n          search: ''\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n    toggle() {\r\n        this.setState(prevState => ({\r\n          modal: !prevState.modal\r\n        }));\r\n      }\r\n      updateSearch = (e) => {\r\n        this.setState ({search: e.target.value})\r\n      }\r\n    componentDidMount() {\r\n        this.props.fetchCustomers();\r\n    }\r\n    \r\n    render() {\r\n            const filteredCustomer = this.props.customer.filter(\r\n                (customer) => {\r\n                    return (\r\n                    customer.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\r\n                    customer.surname.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\r\n                    )\r\n                }\r\n            )\r\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>;\r\n        const c = filteredCustomer.map(c => {\r\n            return (\r\n              <CardCustomer\r\n              key={c._id}\r\n              customer={c}\r\n              />\r\n            );\r\n          });\r\n\r\n            return (\r\n                <div>\r\n                    <NavBar />\r\n                    <NavAdmin />\r\n                    \r\n                    <Button className=\"button-create\" onClick={this.toggle}>Nouveau</Button>\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} centered>\r\n                    <ModalHeader className=\"modal-header\" close={closeBtn}>\r\n                        Nouveau Client\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormNewCustomer />\r\n                    </ModalBody>\r\n                    </Modal>\r\n                <div className=\"admin\">\r\n                    <ul className=\"list-group\">{c}</ul>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    customer: state.customers.customer\r\n});\r\n\r\nAdminCustomer.propTypes = {\r\n    fetchCustomers: PropTypes.func.isRequired,\r\n}\r\nexport default connect(mapStateToProps, { fetchCustomers })(AdminCustomer)\r\n"]},"metadata":{},"sourceType":"module"}