{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\private-route\\\\AdminRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nvar AdminRoute = function AdminRoute(_ref) {\n  var Component = _ref.component,\n      auth = _ref.auth,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return isAdmin === true ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAdmin: state.auth.user.isAdmin\n  };\n};\n\nexport default connect(mapStateToProps)(AdminRoute);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\private-route\\AdminRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","AdminRoute","Component","component","auth","rest","props","isAdmin","mapStateToProps","state","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBC,IAAzB,QAAyBA,IAAzB;AAAA,MAAkCC,IAAlC;;AAAA,SACjB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAC,KAAK;AAAA,aACXC,OAAO,KAAK,IAAZ,GACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJS;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiB;AAAA,CAAnB;;AAaA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCF,IAAAA,OAAO,EAAEE,KAAK,CAACL,IAAN,CAAWM,IAAX,CAAgBH;AADO,GAAL;AAAA,CAA7B;;AAGA,eAAeR,OAAO,CAACS,eAAD,CAAP,CAAyBP,UAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst AdminRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isAdmin === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAdmin: state.auth.user.isAdmin\r\n});\r\nexport default connect(mapStateToProps)(AdminRoute);"]},"metadata":{},"sourceType":"module"}