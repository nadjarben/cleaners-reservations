{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\NavBar2.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NavItem2 from './NavItem2';\nimport Languages2 from './Languages2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PropTypes from \"prop-types\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    toolbar: {\n      backgroundColor: 'black',\n      zIndex: 3\n    },\n    title: {\n      flexGrow: 1\n    },\n    link: {\n      color: 'white',\n      marginLeft: '2%'\n    }\n  };\n});\n\nfunction NavBar(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function isAuthenticated() {\n    var isAuthenticated = props.auth.isAuthenticated;\n    console.log(isAuthenticated);\n    if (isAuthenticated === true) return React.createElement(Link, {\n      to: \"/dashboard/menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(AccountCircle, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));else return React.createElement(Link, {\n      to: \"/landing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(AccountCircle, {\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"static\",\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(NavItem2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"title-link\",\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"THE CLEANERS\")), React.createElement(Languages2, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, isAuthenticated(), React.createElement(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })))));\n}\n\nNavBar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(NavBar);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\NavBar2.js"],"names":["React","Link","connect","NavItem2","Languages2","makeStyles","AppBar","Toolbar","Typography","Menu","IconButton","AccountCircle","PropTypes","useStyles","theme","root","flexGrow","toolbar","backgroundColor","zIndex","title","link","color","marginLeft","NavBar","props","classes","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","isAuthenticated","auth","console","log","appBar","vertical","horizontal","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAGR,UAAU,CAAC,UAAAS,KAAK;AAAA,SAAK;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD+B;AAIrCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAE,OADV;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAJ4B;AAQrCC,IAAAA,KAAK,EAAE;AACLJ,MAAAA,QAAQ,EAAE;AADL,KAR8B;AAWrCK,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,OADH;AAEJC,MAAAA,UAAU,EAAE;AAFR;AAX+B,GAAL;AAAA,CAAN,CAA5B;;AAiBA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MAAMC,OAAO,GAAGb,SAAS,EAAzB;;AADqB,wBAEWb,KAAK,CAAC2B,QAAN,CAAe,IAAf,CAFX;AAAA;AAAA,MAEdC,QAFc;AAAA,MAEJC,WAFI;;AAGrB,MAAMC,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;;AAEA,WAASI,WAAT,GAAuB;AACrBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACD,WAASI,eAAT,GAA2B;AACzB,QAAMA,eAAe,GAAIR,KAAK,CAACS,IAAN,CAAWD,eAApC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,eAAZ;AACA,QAAGA,eAAe,KAAK,IAAvB,EACA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,oBAAC,UAAD;AACF,oBAAW,yBADT;AAEF,uBAAc,aAFZ;AAGF,uBAAc,MAHZ;AAIF,MAAA,KAAK,EAAC,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMF,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAACX,QAAAA,KAAK,EAAC;AAAP,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,CADR,CADF,CADA,KAcD,OACC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU,oBAAC,UAAD;AACF,oBAAW,yBADT;AAEF,uBAAc,aAFZ;AAGF,uBAAc,MAHZ;AAIF,MAAA,KAAK,EAAC,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMF,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANE,CADV,CADD;AAYC;;AAEF,SACE;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAEW,OAAO,CAACW,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEX,OAAO,CAACT,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAES,OAAO,CAACN,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,EAAE,EAAC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CAFF,EAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,eAAe,EADlB,EAEE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAC,aADL;AAEE,IAAA,QAAQ,EAAEL,QAFZ;AAGE,IAAA,YAAY,EAAE;AACZU,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAHhB;AAOE,IAAA,WAAW,MAPb;AAQE,IAAA,eAAe,EAAE;AACfD,MAAAA,QAAQ,EAAE,KADK;AAEfC,MAAAA,UAAU,EAAE;AAFG,KARnB;AAYE,IAAA,IAAI,EAAET,IAZR;AAaE,IAAA,OAAO,EAAEE,WAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANJ,CADF,CADF,CADF;AAgCD;;AACDR,MAAM,CAACgB,SAAP,GAAmB;AACjBN,EAAAA,IAAI,EAAEtB,SAAS,CAAC6B,MAAV,CAAiBC;AADN,CAAnB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCV,IAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAehC,OAAO,CAACyC,eAAD,CAAP,CAAyBnB,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport NavItem2 from './NavItem2';\nimport Languages2 from './Languages2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    backgroundColor: 'black',\n    zIndex: 3\n  },\n  title: {\n    flexGrow: 1,\n  },\n  link: {\n    color: 'white',\n    marginLeft: '2%'\n  }\n}));\n\nfunction NavBar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  function isAuthenticated() {\n    const isAuthenticated =  props.auth.isAuthenticated\n    console.log(isAuthenticated)\n    if(isAuthenticated === true)\n    return (\n      <Link to='/dashboard/menu'>\n              <IconButton\n            aria-label=\"Account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            color=\"primary\"\n        >\n            <AccountCircle style={{color:'white'}} />\n        </IconButton>\n        </Link>\n    )\n  else\n   return (\n    <Link to='/landing'>\n              <IconButton\n            aria-label=\"Account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            color=\"primary\"\n        >\n            <AccountCircle style={{color:'white'}} />\n        </IconButton>\n        </Link>\n  )\n   }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar className={classes.toolbar}>\n        <NavItem2 />\n          <Typography variant=\"h6\" className={classes.title}>\n          <Link className='title-link' to=\"/home\">THE CLEANERS</Link>\n          </Typography>\n          <Languages2 />\n            <div>\n              {isAuthenticated()}\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n              </Menu>\n            </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\nNavBar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(NavBar)"]},"metadata":{},"sourceType":"module"}