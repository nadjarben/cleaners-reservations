{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import'../css/AdminCustomer.css';import{fetchCustomers}from'../../store/actions/customerActions';import{connect}from'react-redux';import ModalCustomer from'../../components/admin/modal/ModalCustomer';import{Button,Modal,ModalHeader,ModalBody}from'reactstrap';import FormNewCustomer from'../../components/admin/form/FormNewCustomer';var AdminCustomer=/*#__PURE__*/function(_Component){_inherits(AdminCustomer,_Component);function AdminCustomer(props){var _this;_classCallCheck(this,AdminCustomer);_this=_possibleConstructorReturn(this,_getPrototypeOf(AdminCustomer).call(this,props));_this.updateSearch=function(e){_this.setState({search:e.target.value});};_this.state={modal:false,search:''};_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));return _this;}_createClass(AdminCustomer,[{key:\"toggle\",value:function toggle(){this.setState(function(prevState){return{modal:!prevState.modal};});}},{key:\"componentDidMount\",value:function componentDidMount(){this.props.fetchCustomers();}},{key:\"render\",value:function render(){var _this2=this;var filteredCustomer=this.props.customer.filter(function(customer){return customer.name.toLowerCase().indexOf(_this2.state.search.toLowerCase())!==-1||customer.surname.toLowerCase().indexOf(_this2.state.search.toLowerCase())!==-1;});var closeBtn=React.createElement(\"button\",{className:\"close\",onClick:this.toggle},\"\\xD7\");var c=filteredCustomer.map(function(c){return React.createElement(ModalCustomer,{key:c._id,customer:c});});return React.createElement(\"div\",{className:\"container\"},React.createElement(\"input\",{className:\"search-reservation form-search form-control mr-sm-2\",type:\"search\",onChange:this.updateSearch.bind(this),placeholder:\"Search\",name:\"search\",value:this.state.search}),React.createElement(Button,{className:\"button-create\",onClick:this.toggle},\"Nouveau\"),React.createElement(Modal,{isOpen:this.state.modal,toggle:this.toggle,centered:true},React.createElement(ModalHeader,{className:\"modal-header\",close:closeBtn},\"Nouveau Client\"),React.createElement(ModalBody,null,React.createElement(FormNewCustomer,null))),React.createElement(\"div\",{className:\"admin\"},React.createElement(\"ul\",{className:\"list-group\"},c)));}}]);return AdminCustomer;}(Component);var mapStateToProps=function mapStateToProps(state){return{customer:state.customers.customer};};export default connect(mapStateToProps,{fetchCustomers:fetchCustomers})(AdminCustomer);","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/containers/pages/AdminCustomer.js"],"names":["React","Component","fetchCustomers","connect","ModalCustomer","Button","Modal","ModalHeader","ModalBody","FormNewCustomer","AdminCustomer","props","updateSearch","e","setState","search","target","value","state","modal","toggle","bind","prevState","filteredCustomer","customer","filter","name","toLowerCase","indexOf","surname","closeBtn","c","map","_id","mapStateToProps","customers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../css/AdminCustomer.css';\nimport { fetchCustomers } from '../../store/actions/customerActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ModalCustomer from '../../components/admin/modal/ModalCustomer';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport FormNewCustomer from '../../components/admin/form/FormNewCustomer';\n\nclass AdminCustomer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          modal: false,\n          search: ''\n        };\n        this.toggle = this.toggle.bind(this);\n    }\n    toggle() {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n      updateSearch = (e) => {\n        this.setState ({search: e.target.value})\n      }\n    componentDidMount() {\n        this.props.fetchCustomers();\n    }\n    \n    render() {\n            const filteredCustomer = this.props.customer.filter(\n                (customer) => {\n                    return (\n                    customer.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 ||\n                    customer.surname.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\n                    )\n                }\n            )\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>;\n        const c = filteredCustomer.map(c => {\n            return (\n              <ModalCustomer\n              key={c._id}\n              customer={c}\n              />\n            );\n          });\n\n            return (\n                <div className='container'>\n                    <input className=\"search-reservation form-search form-control mr-sm-2\" type=\"search\" onChange={ this.updateSearch.bind(this) } placeholder=\"Search\" name=\"search\" value={this.state.search} />\n                    <Button className=\"button-create\" onClick={this.toggle}>Nouveau</Button>\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} centered>\n                    <ModalHeader className=\"modal-header\" close={closeBtn}>\n                        Nouveau Client\n                    </ModalHeader>\n                    <ModalBody>\n                        <FormNewCustomer />\n                    </ModalBody>\n                    </Modal>\n                <div className=\"admin\">\n                    <ul className=\"list-group\">{c}</ul>\n                </div>\n                </div>\n            )\n        }\n    }\n\n\nconst mapStateToProps = state => ({\n    customer: state.customers.customer\n});\n\nAdminCustomer.propTypes = {\n    fetchCustomers: PropTypes.func.isRequired,\n}\nexport default connect(mapStateToProps, { fetchCustomers })(AdminCustomer)\n"]},"metadata":{},"sourceType":"module"}