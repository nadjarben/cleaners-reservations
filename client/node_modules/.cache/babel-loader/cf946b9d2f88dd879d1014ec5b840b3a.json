{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\admin\\\\form\\\\FormNewCustomer.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { postCustomer } from '../../../store/actions/customerActions';\nimport { FormattedMessage } from 'react-intl';\n\nvar FormNewCustomer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormNewCustomer, _Component);\n\n  function FormNewCustomer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormNewCustomer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormNewCustomer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      surname: '',\n      phone: '972',\n      email: '',\n      address: '',\n      info: '',\n      city: ''\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit = function (e) {\n      var _this$state = _this.state,\n          name = _this$state.name,\n          surname = _this$state.surname,\n          phone = _this$state.phone,\n          email = _this$state.email,\n          address = _this$state.address,\n          info = _this$state.info;\n\n      _this.props.postCustomer(name, surname, phone, email, address, info);\n    };\n\n    return _this;\n  }\n\n  _createClass(FormNewCustomer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          marginTop: '5%'\n        },\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Form, {\n        autoComplete: \"nope\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGridFirstName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        autoComplete: \"nope\",\n        required: true,\n        type: \"text\",\n        placeholder: \"First Name\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridSurname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        autoComplete: \"nope\",\n        required: true,\n        type: \"text\",\n        placeholder: \"Last Name\",\n        name: \"surname\",\n        value: this.state.surname,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGridPhone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        autoComplete: \"nope\",\n        required: true,\n        type: \"phone\",\n        placeholder: \"Phone number\",\n        name: \"phone\",\n        value: this.state.phone,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        autoComplete: \"nope\",\n        type: \"email\",\n        placeholder: \"Enter email\",\n        name: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formGridAddress1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        autoComplete: \"nope\",\n        placeholder: \"Address\",\n        name: \"address\",\n        value: this.state.address,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Form.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formGridCity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        autoComplete: \"nope\",\n        placeholder: \"City\",\n        name: \"city\",\n        value: this.state.city,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(Form.Group, {\n        className: \"informations\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reservation.info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(Form.Control, {\n        as: \"textarea\",\n        rows: \"2\",\n        name: \"info\",\n        value: this.state.info,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        className: \"button-submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return FormNewCustomer;\n}(Component);\n\nFormNewCustomer.propTypes = {\n  postCustomer: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    customers: state.customers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postCustomer: postCustomer\n})(FormNewCustomer);","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/admin/form/FormNewCustomer.js"],"names":["React","Component","Form","Button","PropTypes","connect","postCustomer","FormattedMessage","FormNewCustomer","state","name","surname","phone","email","address","info","city","handleChange","e","setState","target","value","handleSubmit","props","marginTop","propTypes","func","isRequired","mapStateToProps","customers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { postCustomer } from '../../../store/actions/customerActions';\nimport { FormattedMessage } from 'react-intl'; \n\nclass FormNewCustomer extends Component {\n    state = {\n        name: '',\n        surname: '', \n        phone: '972', \n        email: '', \n        address: '',  \n        info: '',\n        city: ''\n      };\n\n    handleChange = (e) => {\n    this.setState ({[e.target.name]: e.target.value})\n    }\n    \n  handleSubmit = (e) => {\n    const { name, surname, phone, email, address, info } = this.state\n    this.props.postCustomer(name, surname, phone, email, address, info)\n  }\n\n    render() {\n        return(\n          <div style={{marginTop:'5%'}} className='container'>\n            \n            <Form autoComplete='nope' onSubmit={e => this.handleSubmit(e)} className=\"form\" >\n  <Form.Row>\n    <Form.Group controlId=\"formGridFirstName\" >\n      <Form.Control autoComplete='nope' required={true} type=\"text\" placeholder=\"First Name\" name=\"name\" value={this.state.name}  onChange={this.handleChange} />\n    </Form.Group>\n\n    <Form.Group controlId=\"formGridSurname\">\n      <Form.Control autoComplete='nope' required={true} type=\"text\" placeholder=\"Last Name\" name=\"surname\" value={this.state.surname} onChange={ this.handleChange } />\n    </Form.Group>\n  </Form.Row>\n  \n  <Form.Row>\n  <Form.Group controlId=\"formGridPhone\">\n      <Form.Control  autoComplete='nope' required={true} type=\"phone\" placeholder=\"Phone number\" name=\"phone\" value={this.state.phone} onChange={ this.handleChange } />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Control  autoComplete='nope' type=\"email\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={ this.handleChange } />\n  </Form.Group>\n\n  <Form.Group controlId=\"formGridAddress1\">\n    <Form.Control autoComplete='nope' placeholder=\"Address\" name=\"address\" value={this.state.address} onChange={ this.handleChange }  />\n  </Form.Group>\n\n  <Form.Row>\n    <Form.Group controlId=\"formGridCity\">\n      <Form.Control autoComplete='nope' placeholder=\"City\" name=\"city\" value={this.state.city } onChange={ this.handleChange } />\n    </Form.Group>\n  </Form.Row>\n\n  <Form.Group className=\"informations\" controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label><FormattedMessage id=\"reservation.info\" /></Form.Label>\n    <Form.Control as=\"textarea\" rows=\"2\" name=\"info\" value={this.state.info } onChange={ this.handleChange } />\n  </Form.Group>\n\n  <Button type=\"submit\" variant=\"primary\" className=\"button-submit\">\n    Submit\n  </Button>\n</Form>\n        </div>\n        );\n    }\n}\nFormNewCustomer.propTypes = {\n  postCustomer: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  customers: state.customers\n})\n\nexport default connect(\n  mapStateToProps,\n  { postCustomer }\n)(FormNewCustomer);\n"]},"metadata":{},"sourceType":"module"}