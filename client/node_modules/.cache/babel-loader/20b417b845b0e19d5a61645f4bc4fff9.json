{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\contact\\\\FormContact.js\";\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { postContact } from '../../store/actions/contactActions';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { green, red } from '@material-ui/core/colors';\nvar CssTextField = withStyles({\n  root: {\n    '& label.Mui-focused': {\n      color: 'red'\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: 'red'\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red'\n      },\n      '&:hover fieldset': {\n        borderColor: 'red'\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'red'\n      }\n    }\n  }\n})(TextField);\n\nfunction FormContact(props) {\n  var _useState = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      contact = _useState2[0],\n      setContact = _useState2[1];\n\n  var classes = withStyles();\n\n  var handleChange = function handleChange(e) {\n    setContact(_objectSpread({}, contact, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var textAlert = 'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\n    e.preventDefault();\n    var name = contact.name,\n        phone = contact.phone,\n        email = contact.email,\n        message = contact.message;\n    props.postContact(name, phone, email, message);\n    alert(textAlert);\n  };\n\n  var labelName = React.createElement(FormattedMessage, {\n    id: \"contact.name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  });\n  var labelNumber = React.createElement(FormattedMessage, {\n    id: \"contact.number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  });\n  var labelEmail = React.createElement(FormattedMessage, {\n    id: \"contact.email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  });\n  var labelMessage = React.createElement(FormattedMessage, {\n    id: \"contact.message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CssTextField, {\n    id: \"standard-name\",\n    label: labelName,\n    name: \"name\",\n    className: classes.root,\n    value: contact.name,\n    onChange: handleChange,\n    margin: \"normal\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"phone\",\n    label: labelNumber,\n    value: contact.phone,\n    onChange: handleChange,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"email\",\n    label: labelEmail,\n    value: contact.email,\n    onChange: handleChange,\n    type: \"email\",\n    autoComplete: \"email\",\n    margin: \"normal\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    name: \"message\",\n    label: labelMessage,\n    value: contact.message,\n    onChange: handleChange,\n    placeholder: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: \"3\",\n    margin: \"normal\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    contacts: state.contacts\n  };\n};\n\nFormContact.propTypes = {\n  postContact: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  postContact: postContact\n})(FormContact);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\contact\\FormContact.js"],"names":["React","useState","connect","PropTypes","postContact","Button","FormattedMessage","withStyles","TextField","green","red","CssTextField","root","color","borderBottomColor","borderColor","FormContact","props","name","phone","email","message","contact","setContact","classes","handleChange","e","target","value","handleSubmit","textAlert","preventDefault","alert","labelName","labelNumber","labelEmail","labelMessage","mapStateToProps","state","contacts","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { postContact } from '../../store/actions/contactActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage } from 'react-intl'; \r\nimport { withStyles, } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'red',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'red',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'red',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\n\r\n\r\nfunction FormContact(props) {\r\n  const [ contact, setContact ] = useState({name: '', phone: '', email: '', message: ''})\r\n  const classes = withStyles();\r\n  \r\n      const handleChange = (e) => {\r\n        setContact ({...contact, [e.target.name]: e.target.value})\r\n        }\r\n        \r\n      const handleSubmit = (e) => {\r\n        const textAlert =\r\n        'Votre message a ete envoye nous vous recontacterons dans les plus brefs delais';\r\n        e.preventDefault()\r\n        const { name, phone, email, message } = contact;\r\n        props.postContact(name, phone, email, message)\r\n        alert(textAlert);\r\n      }\r\n\r\n  \r\n      const labelName = <FormattedMessage id='contact.name' />;\r\n      const labelNumber = <FormattedMessage id='contact.number' />;\r\n      const labelEmail = <FormattedMessage id='contact.email' />;\r\n      const labelMessage = <FormattedMessage id='contact.message' />;\r\n      \r\n\r\n        return (\r\n          <div className=\"container\">\r\n              <form onSubmit={handleSubmit} >          \r\n                  <CssTextField\r\n                    id=\"standard-name\"\r\n                    label={labelName}\r\n                    name='name'\r\n                    className={classes.root}\r\n                    value={contact.name}\r\n                    onChange={handleChange}\r\n                    margin=\"normal\"\r\n                    required\r\n                  />\r\n                <div className='row'>\r\n                  <div className='col-md-6'>\r\n                    <TextField\r\n                      name=\"phone\"\r\n                      label={labelNumber}\r\n                      value={contact.phone}\r\n                      onChange={handleChange}\r\n                      margin=\"normal\"\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      label={labelEmail}\r\n                      value={contact.email}\r\n                      onChange={handleChange}\r\n                      type=\"email\"\r\n                      autoComplete=\"email\"\r\n                      margin=\"normal\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                </div>                    \r\n                <TextField\r\n                  name=\"message\"\r\n                  label={labelMessage}\r\n                  value={contact.message}\r\n                  onChange={handleChange}        \r\n                  placeholder=\"Message\"\r\n                  fullWidth\r\n                  multiline\r\n                  rows=\"3\"\r\n                  margin=\"normal\"\r\n                  required\r\n                />\r\n              <Button variant=\"outlined\" color=\"primary\" type='submit'>\r\n                Submit\r\n              </Button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\nconst mapStateToProps = state => ({\r\n    contacts: state.contacts\r\n  })\r\n  FormContact.propTypes = {\r\n    postContact: PropTypes.func.isRequired\r\n  };\r\n\r\nexport default connect(\r\n    mapStateToProps,{ postContact })(FormContact);"]},"metadata":{},"sourceType":"module"}