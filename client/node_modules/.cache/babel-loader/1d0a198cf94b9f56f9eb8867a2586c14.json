{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\containers\\\\AdminCustomer.js\";\nimport React, { Component } from 'react';\nimport { fetchCustomers } from '../store/actions/customerActions';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavBar from '../components/NavBar';\nimport CardCustomer from '../components/CardCustomer';\nimport { Button } from 'reactstrap';\nimport './AdminCustomer.css';\nimport FormCustomer from '../components/FormCustomer';\nimport NavAdmin from '../components/NavAdmin';\nimport Spinner from '../components/Spinner';\n\nvar AdminCustomer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminCustomer, _Component);\n\n  function AdminCustomer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdminCustomer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdminCustomer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(AdminCustomer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleFetchCustomers();\n    }\n  }, {\n    key: \"handleFetchCustomers\",\n    value: function handleFetchCustomers() {\n      this.props.fetchCustomers();\n      this.setState({\n        loading: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var customer = this.props.customer;\n      var c = customer.map(function (c) {\n        return React.createElement(CardCustomer, {\n          key: c._id,\n          customer: c,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(NavAdmin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"search-reservation form-search form-control mr-sm-2\",\n        type: \"search\",\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"button-create\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Nouveau\"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        className: \"modal-header\",\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Nouvelle Reservation\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(FormCustomer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), this.state.loading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"admin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, c)));\n    }\n  }]);\n\n  return AdminCustomer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    customer: state.customers.customer\n  };\n};\n\nAdminCustomer.propTypes = {\n  fetchCustomers: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  fetchCustomers: fetchCustomers\n})(AdminCustomer);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\containers\\AdminCustomer.js"],"names":["React","Component","fetchCustomers","PropTypes","connect","NavBar","CardCustomer","Button","FormCustomer","NavAdmin","Spinner","AdminCustomer","state","loading","handleFetchCustomers","props","setState","customer","c","map","_id","toggle","modal","closeBtn","mapStateToProps","customers","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { fetchCustomers } from '../store/actions/customerActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport NavBar from '../components/NavBar';\r\nimport CardCustomer from '../components/CardCustomer';\r\nimport { Button } from 'reactstrap';\r\nimport './AdminCustomer.css';\r\nimport FormCustomer from '../components/FormCustomer';\r\nimport NavAdmin from '../components/NavAdmin';\r\nimport Spinner from '../components/Spinner';\r\n\r\nclass AdminCustomer extends Component {\r\n    state = {\r\n        loading: true\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.handleFetchCustomers();\r\n    }\r\n\r\n    handleFetchCustomers() {\r\n        this.props.fetchCustomers();\r\n        this.setState({loading:false});\r\n\r\n}\r\n    \r\n    render() {\r\n        const { customer } = this.props;\r\n        const c = customer.map(c => {\r\n            return (\r\n              <CardCustomer\r\n              key={c._id}\r\n              customer={c}\r\n              />\r\n            );\r\n          });\r\n\r\n            return (\r\n                <div>\r\n                    <NavBar />\r\n                    <NavAdmin />\r\n                    <input className=\"search-reservation form-search form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" />\r\n                    <Button className=\"button-create\" onClick={this.toggle}>Nouveau</Button>\r\n                    <Modal isOpen={this.state.modal} toggle={this.toggle} centered>\r\n                    <ModalHeader className=\"modal-header\" close={closeBtn}>\r\n                        Nouvelle Reservation\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <FormCustomer />\r\n                    </ModalBody>\r\n                    </Modal>\r\n                    {this.state.loading &&\r\n                     <Spinner />\r\n                    }\r\n                <div className=\"admin\">\r\n                    <ul className=\"list-group\">{c}</ul>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    customer: state.customers.customer\r\n});\r\n\r\nAdminCustomer.propTypes = {\r\n    fetchCustomers: PropTypes.func.isRequired,\r\n}\r\nexport default connect(mapStateToProps, { fetchCustomers })(AdminCustomer)\r\n"]},"metadata":{},"sourceType":"module"}