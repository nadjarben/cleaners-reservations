{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../../store/actions/googleAuthActions';\nimport ModalRegister from '../modal/ModalRegister';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    _classCallCheck(this, GoogleAuth);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GoogleAuth).apply(this, arguments));\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"render\",\n\n    /*\n     componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n            .init({\n                clientId: '162564132974-al7mv7822j2b88bqka4ps7q29vn4quk3.apps.googleusercontent.com',\n                scope: 'email'\n            })\n            .then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n                console.log(this.auth.currentUser.get().getId())\n            });\n        });\n    }\n     onAuthChange = isSignedIn => {\n        if(isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n        } else {\n            this.props.signOut();\n        }\n    };\n     onSignInClick = () => {\n        this.auth.signIn();\n    };\n    onSignOutClick = () => {\n        this.auth.signOut();\n        window.location.reload(); \n    };\n       renderAuthButton() {\n        const style= {\n            signout: {\n                color: 'red',\n            },\n        }\n        if(this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <div \n                style={style.signout}\n                onClick={this.onSignOutClick}>\n                    Sign Out\n                </div>\n            )\n        } else {\n            return (\n                <div\n                onClick={this.onSignInClick}>\n                    Sign In\n                </div>\n            )\n        }\n    }\n    {this.renderAuthButton()}\n    */\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(ModalRegister, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\GoogleAuth.js"],"names":["React","connect","signIn","signOut","ModalRegister","GoogleAuth","Component","mapStateToProps","state","isSignedIn","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,MAAR,EAAgBC,OAAhB,QAA+B,uCAA/B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;IAEMC,U;;;;;;;;;;;;;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BA+DU;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EAtEoBL,KAAK,CAACM,S;;AAyE3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACnC,SAAO;AAAEC,IAAAA,UAAU,EAAED,KAAK,CAACE,IAAN,CAAWD;AAAzB,GAAP;AACH,CAFG;;AAIJ,eAAeR,OAAO,CAACM,eAAD,EAAkB;AAAEL,EAAAA,MAAM,EAANA,MAAF;AAAUC,EAAAA,OAAO,EAAPA;AAAV,CAAlB,CAAP,CACTE,UADS,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {signIn, signOut } from '../../store/actions/googleAuthActions';\nimport ModalRegister from '../modal/ModalRegister';\n\nclass GoogleAuth extends React.Component {\n    /*\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n            .init({\n                clientId: '162564132974-al7mv7822j2b88bqka4ps7q29vn4quk3.apps.googleusercontent.com',\n                scope: 'email'\n            })\n            .then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n                console.log(this.auth.currentUser.get().getId())\n            });\n        });\n    }\n\n    onAuthChange = isSignedIn => {\n        if(isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n        } else {\n            this.props.signOut();\n        }\n    };\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n    onSignOutClick = () => {\n        this.auth.signOut();\n        window.location.reload(); \n    };\n\n \n    renderAuthButton() {\n        const style= {\n            signout: {\n                color: 'red',\n            },\n        }\n        if(this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <div \n                style={style.signout}\n                onClick={this.onSignOutClick}>\n                    Sign Out\n                </div>\n            )\n        } else {\n            return (\n                <div\n                onClick={this.onSignInClick}>\n                    Sign In\n                </div>\n            )\n        }\n    }\n    {this.renderAuthButton()}\n    */\n\n    render () {\n        return (\n            <div>\n                <ModalRegister />\n            </div>\n        )\n    }\n}\n\n    const mapStateToProps = (state) => {\n    return { isSignedIn: state.auth.isSignedIn };\n};\n\nexport default connect(mapStateToProps, { signIn, signOut }\n    )(GoogleAuth);"]},"metadata":{},"sourceType":"module"}