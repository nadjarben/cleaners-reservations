{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\NavItem2.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FormattedMessage } from 'react-intl';\nimport AdminConnect from './AdminConnect';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nfunction NavBar(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(_objectSpread({}, state, _defineProperty({}, side, open)));\n    };\n  };\n\n  var renderLanguage = function renderLanguage() {\n    var lang = props.lang;\n    if (lang === 'fr') return React.createElement(Link, {\n      to: \"/discoverfr/who\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.discover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n    if (lang === 'en') return React.createElement(Link, {\n      to: \"/discoveren\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.discover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n    if (lang === 'he') return React.createElement(Link, {\n      to: \"/discoverhe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.discover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  };\n\n  var fullList = function fullList(side) {\n    return React.createElement(\"div\", {\n      className: classes.fullList,\n      role: \"presentation\",\n      onClick: toggleDrawer(side, false),\n      onKeyDown: toggleDrawer(side, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, [React.createElement(Link, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.homepage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/reservation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.reservation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/prices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.prices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'black'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), renderLanguage(), React.createElement(Link, {\n      to: \"/admin/adminhome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(AdminConnect, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))].map(function (text, index) {\n      return React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: toggleDrawer('top', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Open Top\"), React.createElement(SwipeableDrawer, {\n    anchor: \"top\",\n    open: state.top,\n    onClose: toggleDrawer('top', false),\n    onOpen: toggleDrawer('top', true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, fullList('top')));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lang: state.locale.lang\n  };\n};\n\nexport default connect(mapStateToProps)(NavBar);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\cleaners\\client\\src\\components\\navbar\\NavItem2.js"],"names":["React","makeStyles","SwipeableDrawer","IconButton","List","Divider","ListItem","ListItemText","FormattedMessage","AdminConnect","Link","connect","useStyles","list","width","fullList","NavBar","props","classes","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","type","key","renderLanguage","lang","color","map","text","index","mapStateToProps","locale"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport IconButton from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FormattedMessage } from 'react-intl'; \nimport AdminConnect from './AdminConnect';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n});\n\nfunction NavBar(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const renderLanguage = () => {\n    const lang = props.lang\n    if(lang === 'fr')\n      return <Link to='/discoverfr/who'><div style={{color:'black'}}><FormattedMessage id='nav.discover'/></div></Link>\n    if(lang === 'en')\n      return <Link to='/discoveren'><div style={{color:'black'}}><FormattedMessage id='nav.discover'/></div></Link>\n    if(lang === 'he')\n      return <Link to='/discoverhe'><div style={{color:'black'}}><FormattedMessage id='nav.discover'/></div></Link>\n  }\n\n  const fullList = side => (\n    <div\n      className={classes.fullList}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {[<Link to='/home'><div style={{color:'black'}}><FormattedMessage id=\"nav.homepage\"/></div></Link>, <Link to='/reservation'><div style={{color:'black'}}><FormattedMessage id=\"nav.reservation\"  /></div></Link>, \n        <Link to='/prices'><div style={{color:'black'}}><FormattedMessage id=\"nav.prices\"/></div></Link>, \n        <Link to='/contacts'><div style={{color:'black'}}><FormattedMessage id=\"nav.contacts\"/></div></Link>,\n        renderLanguage(),\n        <Link to='/admin/adminhome'><div style={{color:'red'}}><AdminConnect/></div></Link> ].map((text, index) => (\n          <ListItem button key={text}>\n           \n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      \n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton onClick={toggleDrawer('top', true)}>Open Top</IconButton>\n      \n      <SwipeableDrawer\n        anchor=\"top\"\n        open={state.top}\n        onClose={toggleDrawer('top', false)}\n        onOpen={toggleDrawer('top', true)}\n      >\n        {fullList('top')}\n      </SwipeableDrawer>\n    </div>\n  );\n}\n\nconst mapStateToProps = state =>  ({\n  lang: state.locale.lang,\n});\n\nexport default connect(mapStateToProps)(NavBar)"]},"metadata":{},"sourceType":"module"}