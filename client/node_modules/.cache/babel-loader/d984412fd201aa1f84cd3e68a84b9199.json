{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\modal\\\\ModalReserv.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\n\nvar ModalExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalExample, _React$Component);\n\n  function ModalExample(props) {\n    var _this;\n\n    _classCallCheck(this, ModalExample);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalExample).call(this, props));\n    _this.state = {\n      modal: false,\n      activeTab: '1'\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleTab = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ModalExample, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"toggleTab\",\n    value: function toggleTab(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"bouton18\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"home.button\",\n        defaultMessage: \"BOOK A DELIVERY\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        className: this.props.className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"allo\"), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Do Something\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return ModalExample;\n}(React.Component);\n\nexport default ModalExample;","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\modal\\ModalReserv.js"],"names":["React","FormattedMessage","Modal","ModalHeader","ModalBody","ModalFooter","TabContent","TabPane","Nav","NavItem","NavLink","Card","Button","CardTitle","CardText","Row","Col","ModalExample","props","state","modal","activeTab","toggle","bind","toggleTab","setState","prevState","tab","className","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,WAAxC,EAAqDC,UAArD,EAAiEC,OAAjE,EAA0EC,GAA1E,EAA+EC,OAA/E,EAAwFC,OAAxF,EAAiGC,IAAjG,EAAuGC,MAAvG,EAA+GC,SAA/G,EAA0HC,QAA1H,EAAoIC,GAApI,EAAyIC,GAAzI,QAAoJ,YAApJ;;IAEMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AACA,UAAKC,SAAL,GAAiB,MAAKF,MAAL,CAAYC,IAAZ,uDAAjB;AAPiB;AAQlB;;;;6BAEQ;AACP,WAAKE,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAC1BN,UAAAA,KAAK,EAAE,CAACM,SAAS,CAACN;AADQ,SAAL;AAAA,OAAvB;AAGD;;;8BACSO,G,EAAK;AACb,UAAI,KAAKR,KAAL,CAAWE,SAAX,KAAyBM,GAA7B,EAAkC;AAChC,aAAKF,QAAL,CAAc;AACZJ,UAAAA,SAAS,EAAEM;AADC,SAAd;AAGD;AACF;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,KAAKL,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,aAArB;AAAmC,QAAA,cAAc,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B,CADJ,CADF,EAKE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,KAA1B;AAAiC,QAAA,MAAM,EAAE,KAAKE,MAA9C;AAAsD,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWU,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKN,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EACsE,GADtE,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAE,KAAKA,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAPF,CALF,CADF;AAoBD;;;;EA7CwBtB,KAAK,CAAC6B,S;;AAgDjC,eAAeZ,YAAf","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage } from 'react-intl'; \r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\n\r\nclass ModalExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      activeTab: '1'\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggleTab = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      modal: !prevState.modal\r\n    }));\r\n  }\r\n  toggleTab(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className=\"bouton18\" onClick={this.toggle}>\r\n            <p className=\"text-button\"><FormattedMessage id=\"home.button\" defaultMessage=\"BOOK A DELIVERY\"/></p>\r\n        </button>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\r\n          <ModalHeader>\r\n\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            allo\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.toggle}>Do Something</Button>{' '}\r\n            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalExample;"]},"metadata":{},"sourceType":"module"}