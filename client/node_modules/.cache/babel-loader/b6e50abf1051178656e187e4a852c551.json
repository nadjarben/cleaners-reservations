{"ast":null,"code":"import axios from'axios';import{POST_CONTACT,FETCH_CONTACTS,DELETE_CONTACT}from'./types';var contactsAPI=//'http://localhost:8080/api/contacts/' \n//'https://cleaners-reservation.herokuapp.com/api/contacts/'\n'https://www.thecleanersisrael.com/api/contacts/';export var postContact=function postContact(name,phone,email,message){return function(dispatch){axios.post(contactsAPI,{name:name,phone:phone,email:email,message:message}).then(function(res){return dispatch({type:POST_CONTACT,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Couldnt post contact.'+err);});};};export var deleteContact=function deleteContact(id){return function(dispatch){axios.delete(contactsAPI+id).then(function(res){return dispatch({type:DELETE_CONTACT,payload:res.data});});};};export var fetchContacts=function fetchContacts(){return function(dispatch){axios.get(contactsAPI,{}).then(function(res){return dispatch({type:FETCH_CONTACTS,payload:res.data});}).catch(function(err){console.log(err);throw new Error('Could not fetch contacts.'+err);});};};","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/store/actions/contactActions.js"],"names":["axios","POST_CONTACT","FETCH_CONTACTS","DELETE_CONTACT","contactsAPI","postContact","name","phone","email","message","dispatch","post","then","res","type","payload","data","catch","err","console","log","Error","deleteContact","id","delete","fetchContacts","get"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,CAAuBC,cAAvB,CAAuCC,cAAvC,KAA6D,SAA7D,CAGA,GAAMC,CAAAA,WAAW,CAAG;AACA;AACA,iDAFpB,CAIA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAOC,KAAP,CAAcC,KAAd,CAAqBC,OAArB,QAAiC,UAAAC,QAAQ,CAAI,CACpEV,KAAK,CAACW,IAAN,CAAWP,WAAX,CAAwB,CAClBE,IAAI,CAAJA,IADkB,CACZC,KAAK,CAALA,KADY,CACLC,KAAK,CAALA,KADK,CACEC,OAAO,CAAPA,OADF,CAAxB,EAGGG,IAHH,CAGQ,SAAAC,GAAG,CAAI,CACT,MAAOH,CAAAA,QAAQ,CAAC,CACdI,IAAI,CAAEb,YADQ,CAEdc,OAAO,CAAEF,GAAG,CAACG,IAFC,CAAD,CAAf,CAID,CARL,EASKC,KATL,CASW,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,KAAM,IAAIG,CAAAA,KAAJ,CAAU,wBAA0BH,GAApC,CAAN,CACD,CAZL,EAaD,CAdwB,EAApB,CAgBN,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,QAAQ,UAAAb,QAAQ,CAAI,CACjDV,KAAK,CAACwB,MAAN,CAAapB,WAAW,CAAGmB,EAA3B,EACCX,IADD,CACM,SAAAC,GAAG,CAAI,CACX,MAAOH,CAAAA,QAAQ,CAAE,CACfI,IAAI,CAAEX,cADS,CAEfY,OAAO,CAAEF,GAAG,CAACG,IAFE,CAAF,CAAf,CAID,CAND,EAOC,CAR4B,EAAtB,CAUN,MAAO,IAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAAAf,QAAQ,CAAI,CAE7CV,KAAK,CAAC0B,GAAN,CAAUtB,WAAV,CAAuB,EAAvB,EAEGQ,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX,MAAOH,CAAAA,QAAQ,CAAC,CACdI,IAAI,CAAEZ,cADQ,CAEda,OAAO,CAAEF,GAAG,CAACG,IAFC,CAAD,CAAf,CAID,CAPH,EAQGC,KARH,CAQS,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACA,KAAM,IAAIG,CAAAA,KAAJ,CAAU,4BAA8BH,GAAxC,CAAN,CACD,CAXH,EAYD,CAd4B,EAAtB","sourcesContent":["import axios from 'axios';\nimport { POST_CONTACT, FETCH_CONTACTS, DELETE_CONTACT } from './types';\n\n\nconst contactsAPI = //'http://localhost:8080/api/contacts/' \n                    //'https://cleaners-reservation.herokuapp.com/api/contacts/'\n                    'https://www.thecleanersisrael.com/api/contacts/'\n\nexport const postContact = (name, phone, email, message) => dispatch => {\n    axios.post(contactsAPI, {\n          name, phone, email, message\n      })\n      .then(res => {\n          return dispatch({\n            type: POST_CONTACT,\n            payload: res.data,\n          });       \n        })\n        .catch(err => {\n          console.log(err);\n          throw new Error('Couldnt post contact.' + err);\n        });\n  }\n\n export const deleteContact = (id) => dispatch => {\n axios.delete(contactsAPI + id)\n .then(res => {\n   return dispatch ({\n     type: DELETE_CONTACT,\n     payload: res.data\n   });\n })\n }\n \n  export const fetchContacts = () => dispatch => {\n\n    axios.get(contactsAPI, {\n    })\n      .then(res => { \n        return dispatch({\n          type: FETCH_CONTACTS,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        throw new Error('Could not fetch contacts.' + err);\n      });    \n  }"]},"metadata":{},"sourceType":"module"}