{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\admin\\\\modal\\\\modalCustomer\\\\ModalOrders.js\";\nimport React, { useState } from 'react';\nimport { Modal, ModalHeader } from 'reactstrap';\nexport default function ModalOrders(props) {\n  var buttonLabel = props.buttonLabel,\n      className = props.className;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    return setModal(!modal);\n  };\n\n  var orders = props.customer.orders;\n\n  function ordersExist() {\n    if (orders) {\n      return orders.map(function (o) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          onClick: toggle,\n          className: \"list-group-item\",\n          key: o._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"no \", React.createElement(\"span\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, o.hazmana), \" || \", o.date, \" || \", o.amount, \" \\u20AA, \", React.createElement(\"span\", {\n          style: {\n            color: 'blue'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, o.payed), \" \"), React.createElement(Modal, {\n          isOpen: modal,\n          toggle: toggle,\n          className: className,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(ModalHeader, {\n          toggle: toggle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Modal title\")));\n      });\n    } else return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Pas de commandes\");\n  }\n\n  return React.createElement(\"div\", {\n    style: {\n      minHeight: '50vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Toutes les commandes\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, ordersExist())));\n}","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/admin/modal/modalCustomer/ModalOrders.js"],"names":["React","useState","Modal","ModalHeader","ModalOrders","props","buttonLabel","className","modal","setModal","toggle","orders","customer","ordersExist","map","o","_id","color","hazmana","date","amount","payed","minHeight","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,YAAnC;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAGnCC,WAHmC,GAKjCD,KALiC,CAGnCC,WAHmC;AAAA,MAInCC,SAJmC,GAKjCF,KALiC,CAInCE,SAJmC;;AAAA,kBAOXN,QAAQ,CAAC,KAAD,CAPG;AAAA;AAAA,MAO9BO,KAP8B;AAAA,MAOvBC,QAPuB;;AASrC,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,QAAQ,CAAC,CAACD,KAAF,CAAd;AAAA,GAAf;;AAEF,MAAMG,MAAM,GAAGN,KAAK,CAACO,QAAN,CAAeD,MAA9B;;AAEA,WAASE,WAAT,GAAuB;AACnB,QAAGF,MAAH,EAAW;AACP,aACIA,MAAM,CAACG,GAAP,CAAW,UAACC,CAAD;AAAA,eACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,OAAO,EAAEL,MAAb;AAAqB,UAAA,SAAS,EAAC,iBAA/B;AAAiD,UAAA,GAAG,EAAEK,CAAC,CAACC,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgE;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BF,CAAC,CAACG,OAA/B,CAAhE,UAAmHH,CAAC,CAACI,IAArH,UAA+HJ,CAAC,CAACK,MAAjI,eAA4I;AAAM,UAAA,KAAK,EAAE;AAACH,YAAAA,KAAK,EAAC;AAAP,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BF,CAAC,CAACM,KAAhC,CAA5I,MADJ,EAEI,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAEb,KAAf;AAAsB,UAAA,MAAM,EAAEE,MAA9B;AAAsC,UAAA,SAAS,EAAEH,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,WAAD;AAAa,UAAA,MAAM,EAAEG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADA,CAFJ,CADW;AAAA,OAAX,CADJ;AAUH,KAXD,MAYK,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACR;;AAED,SACI;AAAK,IAAA,KAAK,EAAE;AAACY,MAAAA,SAAS,EAAC;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,WAAW,EADhB,CADJ,CAHJ,CADJ;AAWH","sourcesContent":["import React, {useState} from 'react';\r\nimport { Modal, ModalHeader } from 'reactstrap';\r\n\r\nexport default function ModalOrders(props) {\r\n\r\n    const {\r\n        buttonLabel,\r\n        className\r\n      } = props;\r\n    \r\n      const [modal, setModal] = useState(false);\r\n    \r\n      const toggle = () => setModal(!modal);\r\n\r\n    const orders = props.customer.orders;    \r\n\r\n    function ordersExist() {\r\n        if(orders) {\r\n            return (\r\n                orders.map((o) =>\r\n                <div>\r\n                    <li onClick={toggle} className='list-group-item' key={o._id}>no <span style={{color:'red'}}>{o.hazmana}</span> || {o.date} || {o.amount} â‚ª, <span style={{color:'blue'}}>{o.payed}</span> </li>\r\n                    <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                    <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n                    </Modal>\r\n                </div>\r\n                )\r\n            )\r\n        }\r\n        else return <p>Pas de commandes</p>\r\n    }\r\n\r\n    return (\r\n        <div style={{minHeight:'50vh'}}>\r\n            <h4 style={{textAlign:'center'}}>Toutes les commandes</h4>\r\n            <br/>\r\n            <div className=\"admin\">\r\n                <ul className=\"list-group\">\r\n                    {ordersExist()}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}