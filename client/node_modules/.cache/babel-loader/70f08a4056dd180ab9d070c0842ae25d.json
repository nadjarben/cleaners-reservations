{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\admin\\\\modal\\\\ModalContact.js\";\nimport React from 'react';\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { deleteContact } from '../../../store/actions/contactActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nvar ModalContact =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ModalContact, _React$Component);\n\n  function ModalContact(props) {\n    var _this;\n\n    _classCallCheck(this, ModalContact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModalContact).call(this, props));\n    _this.state = {\n      modal: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ModalContact, [{\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState(function (prevState) {\n        return {\n          modal: !prevState.modal\n        };\n      });\n    }\n  }, {\n    key: \"handleDeleteContact\",\n    value: function handleDeleteContact(e) {\n      var id = this.props.contact._id;\n      this.props.deleteContact(id);\n      window.location.reload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var contact = this.props.contact;\n      var closeBtn = React.createElement(\"button\", {\n        className: \"close\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"\\xD7\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, contact.name, \" \"), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        style: {\n          backgroundColor: '#0E1521',\n          color: 'white'\n        },\n        className: \"modal-header\",\n        close: closeBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, contact.name), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Tel: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, contact.phone), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Email: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, contact.email), React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Message: \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, contact.message)), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"danger\",\n        onClick: function onClick(e) {\n          return _this2.handleDeleteContact(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Supprimer\"))));\n    }\n  }]);\n\n  return ModalContact;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nModalContact.propTypes = {\n  deleteContact: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  deleteContact: deleteContact\n})(ModalContact);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\admin\\modal\\ModalContact.js"],"names":["React","Modal","Button","ModalHeader","ModalBody","ModalFooter","deleteContact","connect","PropTypes","ModalContact","props","state","modal","toggle","bind","setState","prevState","e","id","contact","_id","window","location","reload","closeBtn","name","backgroundColor","color","phone","email","message","handleDeleteContact","Component","mapStateToProps","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { deleteContact } from '../../../store/actions/contactActions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\n class ModalContact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          modal: false\n        };\n        this.toggle = this.toggle.bind(this);\n    }\n    toggle() {\n        this.setState(prevState => ({\n          modal: !prevState.modal\n        }));\n      }\n      handleDeleteContact(e) {\n        const id = this.props.contact._id\n        this.props.deleteContact(id);\n        window.location.reload(); \n      }\n\n    render() {    \n\n        const {contact} = this.props;\n        const closeBtn = <button className=\"close\" onClick={this.toggle}>&times;</button>;\n     return(\n        <div>\n            <li className=\"list-group-item\" onClick={this.toggle}>{contact.name} </li>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} centered>\n                    <ModalHeader style={{backgroundColor:'#0E1521', color: 'white'}} className=\"modal-header\" close={closeBtn}>\n                        {contact.name} \n                    </ModalHeader>\n                    <ModalBody>\n                        <h5>Tel: </h5><p>{contact.phone}</p>\n                        <h5>Email: </h5><p>{contact.email}</p>\n                        <h6>Message: </h6><p>{contact.message}</p>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"danger\" onClick={e => this.handleDeleteContact(e)} >Supprimer</Button>\n                    </ModalFooter>\n            </Modal>\n        </div>\n     )\n    }\n }\n const mapStateToProps = state => ({\n    \n});\nModalContact.propTypes = {\n    deleteContact: PropTypes.func.isRequired\n}\nexport default connect(mapStateToProps, {deleteContact })(ModalContact)"]},"metadata":{},"sourceType":"module"}