{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\NavItem2.js\";\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Link } from 'react-router-dom';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AdminConnect from './AdminConnect';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto',\n    backgroundColor: 'white'\n  },\n  link: {\n    color: 'white',\n    float: 'center',\n    textDecoration: 'none'\n  },\n  menuButton: {\n    color: 'white',\n    marginLeft: '-23%'\n  }\n});\nexport default function TemporaryDrawer() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var toggleDrawer = function toggleDrawer(side, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(_objectSpread({}, state, _defineProperty({}, side, open)));\n    };\n  };\n\n  var sideList = function sideList(side) {\n    return React.createElement(\"div\", {\n      className: classes.list,\n      role: \"presentation\",\n      onClick: toggleDrawer(side, false),\n      onKeyDown: toggleDrawer(side, false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, [React.createElement(Link, {\n      to: \"/home/reservation\",\n      className: classes.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.reservation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/home/prices\",\n      className: classes.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.prices\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/home/contacts\",\n      className: classes.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"nav.contacts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))].map(function (text) {\n      return React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, [React.createElement(AdminConnect, {\n      className: classes.link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })].map(function (text) {\n      return React.createElement(ListItem, {\n        button: true,\n        key: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleDrawer('left', true),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    onClick: toggleDrawer('left', true),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer('left', false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, sideList('left')));\n}","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\NavItem2.js"],"names":["React","FormattedMessage","makeStyles","Drawer","Button","List","Divider","ListItem","Link","ListItemText","MenuIcon","AdminConnect","useStyles","list","width","fullList","backgroundColor","link","color","float","textDecoration","menuButton","marginLeft","TemporaryDrawer","classes","useState","top","left","bottom","right","state","setState","toggleDrawer","side","open","event","type","key","sideList","map","text"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAIA,IAAMC,SAAS,GAAGV,UAAU,CAAC;AAC3BW,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,KAAK,EAAE,MADC;AAERE,IAAAA,eAAe,EAAE;AAFT,GAJiB;AAQ3BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,OADL;AAEFC,IAAAA,KAAK,EAAE,QAFL;AAGFC,IAAAA,cAAc,EAAE;AAHd,GARqB;AAa3BC,EAAAA,UAAU,EAAE;AACVH,IAAAA,KAAK,EAAE,OADG;AAEVI,IAAAA,UAAU,EAAE;AAFF;AAbe,CAAD,CAA5B;AAmBA,eAAe,SAASC,eAAT,GAA2B;AACxC,MAAMC,OAAO,GAAGZ,SAAS,EAAzB;;AADwC,wBAEdZ,KAAK,CAACyB,QAAN,CAAe;AACvCC,IAAAA,GAAG,EAAE,KADkC;AAEvCC,IAAAA,IAAI,EAAE,KAFiC;AAGvCC,IAAAA,MAAM,EAAE,KAH+B;AAIvCC,IAAAA,KAAK,EAAE;AAJgC,GAAf,CAFc;AAAA;AAAA,MAEjCC,KAFiC;AAAA,MAE1BC,QAF0B;;AASxC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,IAAP;AAAA,WAAgB,UAAAC,KAAK,EAAI;AAC5C,UAAIA,KAAK,CAACC,IAAN,KAAe,SAAf,KAA6BD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAAlE,CAAJ,EAAgF;AAC9E;AACD;;AAEDN,MAAAA,QAAQ,mBAAMD,KAAN,sBAAcG,IAAd,EAAqBC,IAArB,GAAR;AACD,KANoB;AAAA,GAArB;;AAQA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAAAL,IAAI;AAAA,WACnB;AACE,MAAA,SAAS,EAAET,OAAO,CAACX,IADrB;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,OAAO,EAAEmB,YAAY,CAACC,IAAD,EAAO,KAAP,CAHvB;AAIE,MAAA,SAAS,EAAED,YAAY,CAACC,IAAD,EAAO,KAAP,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,mBAAT;AAA6B,MAAA,SAAS,EAAET,OAAO,CAACP,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAAH,EAGG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,SAAS,EAAEO,OAAO,CAACP,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHH,EAMG,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,gBAAT;AAA0B,MAAA,SAAS,EAAEO,OAAO,CAACP,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANH,EAQYsB,GARZ,CAQgB,UAACC,IAAD;AAAA,aACf,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,GAAG,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADe;AAAA,KARhB,CADH,CANF,EAqBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,EAsBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAEhB,OAAO,CAACP,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,EAA4CsB,GAA5C,CAAgD,UAACC,IAAD;AAAA,aAC/C,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,GAAG,EAAEA,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAD+C;AAAA,KAAhD,CADH,CAtBF,CADmB;AAAA,GAArB;;AAiCA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAER,YAAY,CAAC,MAAD,EAAS,IAAT,CAA7B;AAA6C,IAAA,SAAS,EAAER,OAAO,CAACH,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEW,YAAY,CAAC,MAAD,EAAS,IAAT,CAA/B;AAA+C,IAAA,SAAS,EAAER,OAAO,CAACH,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ,EAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAES,KAAK,CAACH,IAApB;AAA0B,IAAA,OAAO,EAAEK,YAAY,CAAC,MAAD,EAAS,KAAT,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,QAAQ,CAAC,MAAD,CADX,CAJF,CADF;AAUD","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage } from 'react-intl'; \r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AdminConnect from './AdminConnect';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n    backgroundColor: 'white'\r\n  },\r\n  link: {\r\n      color: 'white',\r\n      float: 'center',\r\n      textDecoration: 'none'\r\n  },\r\n  menuButton: {\r\n    color: 'white',\r\n    marginLeft: '-23%'\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {[  <Link to=\"/home/reservation\" className={classes.link}>\r\n                <FormattedMessage id=\"nav.reservation\"  />\r\n            </Link>,\r\n            <Link to=\"/home/prices\" className={classes.link}>\r\n                <FormattedMessage id=\"nav.prices\"/>\r\n            </Link>,\r\n            <Link to=\"/home/contacts\" className={classes.link}>\r\n                <FormattedMessage id=\"nav.contacts\"/>\r\n            </Link>].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {[<AdminConnect className={classes.link} />].map((text) => (\r\n          <ListItem button key={text}>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n        <Button onClick={toggleDrawer('left', true)} className={classes.menuButton}>\r\n          <MenuIcon onClick={toggleDrawer('left', true)} className={classes.menuButton} />\r\n        </Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}