{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{connect}from'react-redux';import{changeUserName}from'../../store/actions/userActions';function DashboardConfig(props){var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleSubmit=function handleSubmit(){changeUserName(user.id,name,surname,phone,address);};var user=props.auth.user;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(user.name),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(user.surname),_useState6=_slicedToArray(_useState5,2),surname=_useState6[0],setSurname=_useState6[1];var _useState7=useState(user.address),_useState8=_slicedToArray(_useState7,2),address=_useState8[0],setAddress=_useState8[1];var _useState9=useState(user.phone),_useState10=_slicedToArray(_useState9,2),phone=_useState10[0],setPhone=_useState10[1];var renderInput=function renderInput(){if(open===true)return React.createElement(\"form\",null,React.createElement(\"input\",{value:name,onChange:function onChange(e){return setName(e.target.value);},type:\"text\",name:\"name\"}),React.createElement(\"input\",{value:user.surname,onChange:function onChange(e){return setSurname(e.target.value);},placeholder:surname,type:\"text\",name:\"surname\"}),React.createElement(\"input\",{value:user.address,onChange:function onChange(e){return setAddress(e.target.value);},placeholder:address,type:\"test\",name:\"address\"}),React.createElement(\"input\",{value:user.phone,onChange:function onChange(e){return setPhone(e.target.value);},placeholder:phone,type:\"phone\",name:\"phone\"}),React.createElement(\"button\",{onClick:handleSubmit,type:\"submit\"},\"Submit\"));};return React.createElement(\"div\",null,React.createElement(\"p\",{style:{color:'red',cursor:'pointer'},onClick:handleClickOpen},\"Modify user informations\"),renderInput());}var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps,{changeUserName:changeUserName})(DashboardConfig);","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/dashboard/DashboardConfig.js"],"names":["React","useState","connect","changeUserName","DashboardConfig","props","handleClickOpen","setOpen","handleSubmit","user","id","name","surname","phone","address","auth","open","setName","setSurname","setAddress","setPhone","renderInput","e","target","value","color","cursor","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { changeUserName } from '../../store/actions/userActions';\r\n\r\nfunction DashboardConfig(props) {\r\n\r\n    const handleClickOpen =() => {\r\n        setOpen(true);\r\n      }\r\n    const handleSubmit = () => {\r\n        changeUserName(user.id, name, surname, phone, address);\r\n    }\r\n\r\n  const user  = props.auth.user;\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(user.name);\r\n  const [surname, setSurname] = useState(user.surname);\r\n  const [address, setAddress] = useState(user.address);\r\n  const [phone, setPhone] = useState(user.phone);\r\n\r\n\r\n    const renderInput = () => {  \r\n    if(open === true)\r\n    return (\r\n        <form>\r\n        <input\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}    \r\n            type=\"text\"\r\n            name=\"name\"\r\n        />\r\n        <input\r\n            value={user.surname}\r\n            onChange={e => setSurname(e.target.value)}\r\n            placeholder={surname}\r\n            type=\"text\"\r\n            name=\"surname\"\r\n        />\r\n        <input\r\n            value={user.address}\r\n            onChange={e => setAddress(e.target.value)}\r\n            placeholder={address}\r\n            type=\"test\"\r\n            name=\"address\"\r\n        />\r\n        <input\r\n            value={user.phone}\r\n            onChange={e => setPhone(e.target.value)}\r\n            placeholder={phone}\r\n            type=\"phone\"\r\n            name=\"phone\"\r\n        />\r\n        <button onClick={handleSubmit} type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p style={{color:'red', cursor:'pointer'}} onClick={handleClickOpen}>Modify user informations</p>\r\n            {renderInput()}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n\r\nexport default connect(mapStateToProps, { changeUserName })(DashboardConfig);"]},"metadata":{},"sourceType":"module"}