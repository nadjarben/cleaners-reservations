{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import{connect}from'react-redux';var AdminConnect=/*#__PURE__*/function(_React$Component){_inherits(AdminConnect,_React$Component);function AdminConnect(){_classCallCheck(this,AdminConnect);return _possibleConstructorReturn(this,_getPrototypeOf(AdminConnect).apply(this,arguments));}_createClass(AdminConnect,[{key:\"renderAdmin\",value:function renderAdmin(){var isAdmin=this.props.isAdmin;if(isAdmin===true){return React.createElement(\"div\",{onClick:this.toggle},\"Admin\");}}},{key:\"render\",value:function render(){return React.createElement(\"div\",null,this.renderAdmin());}}]);return AdminConnect;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{isSignedIn:state.auth.isSignedIn,userId:state.auth.userId,isAdmin:state.auth.user.isAdmin};};export default connect(mapStateToProps)(AdminConnect);","map":{"version":3,"sources":["C:/Users/nadja/Documents/GitHub/Cleaners/client/src/components/navbar/AdminConnect.js"],"names":["React","connect","AdminConnect","isAdmin","props","toggle","renderAdmin","Component","mapStateToProps","state","isSignedIn","auth","userId","user"],"mappings":"m4BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,C,GAEMC,CAAAA,Y,oTAEU,IAELC,CAAAA,OAFK,CAEM,KAAKC,KAFX,CAELD,OAFK,CAGZ,GAAGA,OAAO,GAAK,IAAf,CAAqB,CACnB,MACI,4BACA,OAAO,CAAE,KAAKE,MADd,UADJ,CAMD,CACF,C,uCAEQ,CACP,MACE,gCACG,KAAKC,WAAL,EADH,CADF,CAKD,C,0BArBwBN,KAAK,CAACO,S,EAyBjC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCC,UAAU,CAAED,KAAK,CAACE,IAAN,CAAWD,UADS,CAEhCE,MAAM,CAAEH,KAAK,CAACE,IAAN,CAAWC,MAFa,CAGhCT,OAAO,CAAEM,KAAK,CAACE,IAAN,CAAWE,IAAX,CAAgBV,OAHO,CAAL,EAA7B,CAMA,cAAeF,CAAAA,OAAO,CAACO,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nclass AdminConnect extends React.Component {\n  \n  renderAdmin() {\n  \n    const {isAdmin} = this.props;\n    if(isAdmin === true) {\n      return (\n          <div\n          onClick={this.toggle}>\n            Admin\n          </div>\n      )\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        {this.renderAdmin()}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  isSignedIn: state.auth.isSignedIn,\n  userId: state.auth.userId,\n  isAdmin: state.auth.user.isAdmin\n});\n\nexport default connect(mapStateToProps)(AdminConnect)"]},"metadata":{},"sourceType":"module"}