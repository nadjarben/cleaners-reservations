{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\dashboard\\\\DasboardAppBar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Dashboard from './Dashboard';\nvar drawerWidth = 240;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      marginTop: '7vh',\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      backgroundColor: 'white',\n      color: 'black'\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n      zIndex: '0'\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerClose: _defineProperty({\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1\n    }, theme.breakpoints.up('sm'), {\n      width: theme.spacing(9) + 1\n    }),\n    toolbar: _objectSpread({\n      marginTop: '9vh',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px'\n    }, theme.mixins.toolbar),\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3)\n    }\n  };\n});\nexport default function MiniDrawer() {\n  var _clsx, _clsx2;\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, (_clsx = {}, _defineProperty(_clsx, classes.drawerOpen, open), _defineProperty(_clsx, classes.drawerClose, !open), _clsx)),\n    classes: {\n      paper: clsx((_clsx2 = {}, _defineProperty(_clsx2, classes.drawerOpen, open), _defineProperty(_clsx2, classes.drawerClose, !open), _clsx2))\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, ['Compte', 'Messages', 'Credit', 'Drafts'].map(function (text, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  })), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n    return React.createElement(ListItem, {\n      button: true,\n      key: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, index % 2 === 0 ? React.createElement(InboxIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }) : React.createElement(MailIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      primary: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }));\n  }))), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(Dashboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\dashboard\\DasboardAppBar.js"],"names":["React","clsx","makeStyles","useTheme","Drawer","AppBar","Toolbar","List","CssBaseline","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Dashboard","drawerWidth","useStyles","theme","root","display","appBar","marginTop","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","backgroundColor","color","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useState","open","setOpen","handleDrawerOpen","handleDrawerClose","paper","map","text","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Dashboard from './Dashboard';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    marginTop: '7vh',\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: 'white',\n    color: 'black'\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n    zIndex: '0'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    marginTop: '9vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  function handleDrawerOpen() {\n    setOpen(true);\n  }\n\n  function handleDrawerClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <List>\n          {['Compte', 'Messages', 'Credit', 'Drafts'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Dashboard />\n      </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}