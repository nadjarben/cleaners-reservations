{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { getFromStorage, setInStorage } from '../../config/storage';\nimport Button from '@material-ui/core/Button';\n\nvar login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(login, _Component);\n\n  function login(props) {\n    var _this;\n\n    _classCallCheck(this, login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(login).call(this, props));\n    _this.state = {\n      isLoading: true,\n      token: '',\n      signUpError: '',\n      signInError: '',\n      signInEmail: '',\n      signInPassword: '',\n      signUpFirstName: '',\n      signUpLastName: '',\n      signUpEmail: '',\n      signUpPassword: ''\n    };\n    _this.onTextboxChangeSignInEmail = _this.onTextboxChangeSignInEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextboxChangeSignInPassword = _this.onTextboxChangeSignInPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextboxChangeSignUpEmail = _this.onTextboxChangeSignUpEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextboxChangeSignUpPassword = _this.onTextboxChangeSignUpPassword.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextboxChangeSignUpFirstName = _this.onTextboxChangeSignUpFirstName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onTextboxChangeSignUpLastName = _this.onTextboxChangeSignUpLastName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSignIn = _this.onSignIn.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var obj = getFromStorage('the_cleaners');\n\n      if (obj && obj.token) {\n        var token = obj.token; // Verify token\n\n        fetch('http://localhost:8080/api/signin/account/verify?token=' + token).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            _this2.setState({\n              token: token,\n              isLoading: false\n            });\n          } else {\n            _this2.setState({\n              isLoading: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n    }\n  }, {\n    key: \"onTextboxChangeSignInEmail\",\n    value: function onTextboxChangeSignInEmail(e) {\n      this.setState({\n        signInEmail: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignInPassword\",\n    value: function onTextboxChangeSignInPassword(e) {\n      this.setState({\n        signInPassword: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpEmail\",\n    value: function onTextboxChangeSignUpEmail(e) {\n      this.setState({\n        signUpEmail: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpPassword\",\n    value: function onTextboxChangeSignUpPassword(e) {\n      this.setState({\n        signUpPassword: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpFirstName\",\n    value: function onTextboxChangeSignUpFirstName(e) {\n      this.setState({\n        signUpFirstName: e.target.value\n      });\n    }\n  }, {\n    key: \"onTextboxChangeSignUpLastName\",\n    value: function onTextboxChangeSignUpLastName(e) {\n      this.setState({\n        signUpLastName: e.target.value\n      });\n    }\n  }, {\n    key: \"onSignIn\",\n    value: function onSignIn() {\n      var _this3 = this;\n\n      // Grab state\n      var _this$state = this.state,\n          signInEmail = _this$state.signInEmail,\n          signInPassword = _this$state.signInPassword;\n      this.setState({\n        isLoading: true\n      }); // Post request to backend\n\n      fetch('http://localhost:8080/api/signin/account/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: signInEmail,\n          password: signInPassword\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log('json', json);\n\n        if (json.success) {\n          setInStorage('the_cleaners', {\n            token: json.token\n          });\n\n          _this3.setState({\n            signInError: json.message,\n            isLoading: false,\n            signInPassword: '',\n            signInEmail: '',\n            token: json.token\n          });\n        } else {\n          _this3.setState({\n            signInError: json.message,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this4 = this;\n\n      // Grab state\n      var _this$state2 = this.state,\n          signUpEmail = _this$state2.signUpEmail,\n          signUpPassword = _this$state2.signUpPassword,\n          signUpFirstName = _this$state2.signUpFirstName,\n          signUpLastName = _this$state2.signUpLastName;\n      this.setState({\n        isLoading: true\n      }); // Post request to backend\n\n      fetch('http://localhost:8080/api/signin/account/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: signUpEmail,\n          password: signUpPassword,\n          firstName: signUpFirstName,\n          lastName: signUpLastName\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log('json', json);\n\n        if (json.success) {\n          _this4.setState({\n            signUpError: json.message,\n            isLoading: false,\n            signUpEmail: '',\n            signUpPassword: '',\n            signUpFirstName: '',\n            signUpLastName: ''\n          });\n        } else {\n          _this4.setState({\n            signUpError: json.message,\n            isLoading: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this5 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var obj = getFromStorage('the_cleaners');\n\n      if (obj && obj.token) {\n        var token = obj.token; // Verify token\n\n        fetch('http://localhost:8080/api/signin/account/logout?token=' + token).then(function (res) {\n          return res.json();\n        }).then(function (json) {\n          if (json.success) {\n            _this5.setState({\n              token: '',\n              isLoading: false\n            });\n\n            setInStorage('the_cleaners', {\n              token: ''\n            });\n          } else {\n            _this5.setState({\n              isLoading: false\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          isLoading = _this$state3.isLoading,\n          token = _this$state3.token,\n          signInError = _this$state3.signInError,\n          signUpError = _this$state3.signUpError,\n          signInEmail = _this$state3.signInEmail,\n          signInPassword = _this$state3.signInPassword,\n          signUpFirstName = _this$state3.signUpFirstName,\n          signUpLastName = _this$state3.signUpLastName,\n          signUpPassword = _this$state3.signUpPassword,\n          signUpEmail = _this$state3.signUpEmail;\n\n      if (isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Loading ...\"));\n      }\n\n      if (!token) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, signInError ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, signInError) : null, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Sign In\"), React.createElement(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: signInEmail,\n          onChange: this.onTextboxChangeSignInEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: signInPassword,\n          onChange: this.onTextboxChangeSignInPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.onSignIn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Sign In\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), signUpError ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, signUpError) : null, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \"Sign Up\"), React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"First Name\",\n          value: signUpFirstName,\n          onChange: this.onTextboxChangeSignUpFirstName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Last Name\",\n          value: signUpLastName,\n          onChange: this.onTextboxChangeSignUpLastName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: signUpEmail,\n          onChange: this.onTextboxChangeSignUpEmail,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }), React.createElement(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: signUpPassword,\n          onChange: this.onTextboxChangeSignUpPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: this.onSignUp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Sign Up\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"My Account\"), React.createElement(Button, {\n        variant: \"contained\",\n        style: {\n          backgroundColor: 'red',\n          marginTop: '5%'\n        },\n        className: \"text-center\",\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Logout\"));\n    }\n  }]);\n\n  return login;\n}(Component);\n\nexport { login as default };","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\Login.js"],"names":["React","Component","getFromStorage","setInStorage","Button","login","props","state","isLoading","token","signUpError","signInError","signInEmail","signInPassword","signUpFirstName","signUpLastName","signUpEmail","signUpPassword","onTextboxChangeSignInEmail","bind","onTextboxChangeSignInPassword","onTextboxChangeSignUpEmail","onTextboxChangeSignUpPassword","onTextboxChangeSignUpFirstName","onTextboxChangeSignUpLastName","onSignIn","onSignUp","logout","obj","fetch","then","res","json","success","setState","e","target","value","method","headers","body","JSON","stringify","email","password","console","log","message","firstName","lastName","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { getFromStorage, setInStorage } from '../../config/storage';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default class login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: true,\r\n            token: '',\r\n            signUpError: '',\r\n            signInError: '',\r\n            signInEmail: '',\r\n            signInPassword: '',\r\n            signUpFirstName: '',\r\n            signUpLastName: '',\r\n            signUpEmail: '',\r\n            signUpPassword: ''\r\n        };\r\n    this.onTextboxChangeSignInEmail = this.onTextboxChangeSignInEmail.bind(this);\r\n    this.onTextboxChangeSignInPassword = this.onTextboxChangeSignInPassword.bind(this);\r\n    this.onTextboxChangeSignUpEmail = this.onTextboxChangeSignUpEmail.bind(this);\r\n    this.onTextboxChangeSignUpPassword = this.onTextboxChangeSignUpPassword.bind(this);\r\n    this.onTextboxChangeSignUpFirstName = this.onTextboxChangeSignUpFirstName.bind(this);\r\n    this.onTextboxChangeSignUpLastName = this.onTextboxChangeSignUpLastName.bind(this);\r\n    \r\n    this.onSignIn = this.onSignIn.bind(this);\r\n    this.onSignUp = this.onSignUp.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n    }\r\n  \r\n    componentDidMount() {\r\n        const obj = getFromStorage('the_cleaners');\r\n        if (obj && obj.token) {\r\n          const { token } = obj;\r\n          // Verify token\r\n          fetch('http://localhost:8080/api/signin/account/verify?token=' + token)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n              if (json.success) {\r\n                this.setState({\r\n                  token,\r\n                  isLoading: false\r\n                });\r\n              } else {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n        }\r\n      }\r\n\r\n      onTextboxChangeSignInEmail(e) {\r\n          this.setState({\r\n              signInEmail: e.target.value,\r\n          })\r\n      }\r\n      onTextboxChangeSignInPassword(e) {\r\n        this.setState({\r\n            signInPassword: e.target.value,\r\n        })\r\n    }\r\n    onTextboxChangeSignUpEmail(e) {\r\n        this.setState({\r\n            signUpEmail: e.target.value,\r\n        })\r\n    }\r\n    onTextboxChangeSignUpPassword(e) {\r\n        this.setState({\r\n            signUpPassword: e.target.value,\r\n        })\r\n    }\r\n    onTextboxChangeSignUpFirstName(e) {\r\n        this.setState({\r\n            signUpFirstName: e.target.value,\r\n        })\r\n    }\r\n    onTextboxChangeSignUpLastName(e) {\r\n        this.setState({\r\n            signUpLastName: e.target.value,\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        // Grab state\r\n        const {\r\n          signInEmail,\r\n          signInPassword,\r\n        } = this.state;\r\n        this.setState({\r\n          isLoading: true,\r\n        });\r\n        // Post request to backend\r\n        fetch('http://localhost:8080/api/signin/account/signin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: signInEmail,\r\n            password: signInPassword,\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n            console.log('json', json);\r\n            if (json.success) {\r\n              setInStorage('the_cleaners', { token: json.token });\r\n              this.setState({\r\n                signInError: json.message,\r\n                isLoading: false,\r\n                signInPassword: '',\r\n                signInEmail: '',\r\n                token: json.token,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                signInError: json.message,\r\n                isLoading: false,\r\n              });\r\n            }\r\n          });\r\n      }\r\n\r\n    onSignUp() {\r\n        // Grab state\r\n        const {\r\n          signUpEmail,\r\n          signUpPassword,\r\n          signUpFirstName,\r\n          signUpLastName\r\n        } = this.state;\r\n        this.setState({\r\n          isLoading: true,\r\n        });\r\n        // Post request to backend\r\n        fetch('http://localhost:8080/api/signin/account/signup', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: signUpEmail,\r\n            password: signUpPassword,\r\n            firstName: signUpFirstName,\r\n            lastName: signUpLastName\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n            console.log('json', json);\r\n            if (json.success) {\r\n              this.setState({\r\n                signUpError: json.message,\r\n                isLoading: false,\r\n                signUpEmail: '',\r\n                signUpPassword: '',\r\n                signUpFirstName: '',\r\n                signUpLastName: ''\r\n              });\r\n            } else {\r\n              this.setState({\r\n                signUpError: json.message,\r\n                isLoading: false,\r\n              });\r\n            }\r\n          });\r\n      }\r\n      \r\n    logout() {\r\n        this.setState({\r\n          isLoading: true,\r\n        });\r\n        const obj = getFromStorage('the_cleaners');\r\n        if (obj && obj.token) {\r\n          const { token } = obj;\r\n          // Verify token\r\n          fetch('http://localhost:8080/api/signin/account/logout?token=' + token)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n              if (json.success) {\r\n                this.setState({\r\n                  token: '',\r\n                  isLoading: false\r\n                });\r\n                setInStorage('the_cleaners', { token: '' });\r\n              } else {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n              }\r\n            });\r\n        } else {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n        }\r\n      }\r\n      \r\n\r\n    render() {\r\n        const { isLoading, token, signInError, signUpError, signInEmail, signInPassword,\r\n        signUpFirstName, signUpLastName, signUpPassword, signUpEmail } = this.state\r\n\r\n        if(isLoading) {\r\n            return <div><p>Loading ...</p></div>\r\n        }\r\n\r\n        if(!token) {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        {\r\n                            (signInError) ? (\r\n                                <p>{signInError}</p>\r\n                            ) : (null)\r\n                        }\r\n                        <p>Sign In</p>\r\n                        <input type='email' placeholder='Email' value={signInEmail} onChange={this.onTextboxChangeSignInEmail} />\r\n                        <input type='password' placeholder='Password' value={signInPassword} onChange={this.onTextboxChangeSignInPassword} />\r\n                        <button onClick={this.onSignIn}>Sign In</button>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    {\r\n                            (signUpError) ? (\r\n                                <p>{signUpError}</p>\r\n                            ) : (null)\r\n                        }\r\n                    <div>\r\n                        <p>Sign Up</p>\r\n                        <input type='text' placeholder='First Name' value={signUpFirstName} onChange={this.onTextboxChangeSignUpFirstName} />\r\n                        <input type='text' placeholder=\"Last Name\" value={signUpLastName} onChange={this.onTextboxChangeSignUpLastName} />\r\n                        <input type='email' placeholder='Email' value={signUpEmail} onChange={this.onTextboxChangeSignUpEmail} />\r\n                        <input type='password' placeholder='Password' value={signUpPassword} onChange={this.onTextboxChangeSignUpPassword} />\r\n                        <button onClick={this.onSignUp}>Sign Up</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className='container'>\r\n                <p>My Account</p>\r\n                <Button variant='contained' style={{backgroundColor:'red', marginTop: '5%'}} className='text-center' onClick={this.logout}>Logout</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}