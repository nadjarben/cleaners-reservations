{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\nadja\\\\Documents\\\\GitHub\\\\Cleaners\\\\client\\\\src\\\\components\\\\navbar\\\\Languages2.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { setLocale } from '../../store/actions/localeActions';\nimport { connect } from 'react-redux';\nimport flaghe from '../../images/flag-he.png';\nimport flagen from '../../images/flag-en.png';\nimport flagfr from '../../images/flag-fr.png';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    toolbar: {\n      backgroundColor: 'black'\n    },\n    title: {\n      flexGrow: 1\n    }\n  };\n});\n\nfunction Languages2(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  function handleMenu(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  function test() {\n    console.log(props);\n  }\n\n  return React.createElement(\"div\", {\n    onClick: test,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Account of current user\",\n    \"aria-controls\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleMenu,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(AccountCircle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Menu, {\n    id: \"menu-appbar\",\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: function onClick() {\n      return props.setLocale('en');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: flagen,\n    alt: \"flagen\",\n    width: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), \"English\")), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: function onClick() {\n      return _this.props.setLocale('fr');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: flagfr,\n    alt: \"flagfr\",\n    width: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \"Francais\")), React.createElement(MenuItem, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    onClick: function onClick() {\n      return _this.props.setLocale('he');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: flaghe,\n    alt: \"flaghe\",\n    width: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \"\\u05E2\\u05D1\\u05E8\\u05D9\\u05EA\"))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setLocale: state.locale,\n    lang: state.locale.lang\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setLocale: setLocale\n})(Languages2);","map":{"version":3,"sources":["C:\\Users\\nadja\\Documents\\GitHub\\Cleaners\\client\\src\\components\\navbar\\Languages2.js"],"names":["React","makeStyles","IconButton","AccountCircle","MenuItem","Menu","setLocale","connect","flaghe","flagen","flagfr","useStyles","theme","root","flexGrow","toolbar","backgroundColor","title","Languages2","props","classes","useState","anchorEl","setAnchorEl","open","Boolean","handleMenu","event","currentTarget","handleClose","test","console","log","vertical","horizontal","mapStateToProps","state","locale","lang"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { setLocale } from '../../store/actions/localeActions';\r\nimport { connect } from 'react-redux';\r\nimport flaghe from '../../images/flag-he.png';\r\nimport flagen from '../../images/flag-en.png';\r\nimport flagfr from '../../images/flag-fr.png';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  toolbar: {\r\n    backgroundColor: 'black'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\n  function Languages2(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  function handleMenu(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleClose() {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  function test() {\r\n    console.log(props)\r\n  }\r\n\r\n  return (\r\n      <div onClick={test}>\r\n                <IconButton\r\n                aria-label=\"Account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n                <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose } >\r\n                <div onClick={() => props.setLocale('en')} >\r\n                    <img src={flagen} alt=\"flagen\" width=\"30px\" />\r\n                    English\r\n                </div>\r\n                </MenuItem>\r\n                \r\n                <MenuItem onClick={handleClose} >\r\n                <div onClick={() => this.props.setLocale('fr')} >\r\n                  <img src={flagfr} alt=\"flagfr\" width=\"30px\" /> \r\n                  Francais\r\n                </div>\r\n                </MenuItem>\r\n                \r\n                <MenuItem onClick={handleClose} >\r\n                <div onClick={() => this.props.setLocale('he')} >\r\n                  <img src={flaghe} alt=\"flaghe\" width=\"30px\" />\r\n                   עברית\r\n                </div>\r\n                </MenuItem>\r\n              </Menu>\r\n            \r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  setLocale: state.locale,\r\n  lang: state.locale.lang\r\n});\r\n\r\nexport default connect(mapStateToProps, {setLocale})(Languages2)"]},"metadata":{},"sourceType":"module"}